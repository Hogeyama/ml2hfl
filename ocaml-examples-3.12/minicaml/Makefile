# Makefile generated by imake - do not edit!

CPP=/lib/cpp -P
RM=rm -f
CP=cp -p -f
TOPDIR=.
CONFIGDIR=$(TOPDIR)/config

LIBDIR=/usr/local/lib/ocaml/

CAMLCOMPILERBIN=ocamlopt
CAMLCOMPILERBYT=ocamlc
CAMLFLAGSBIN=-w A -warn-error Ae
CAMLFLAGSBYT=-g $(CAMLFLAGSBIN)

CAMLBIN=$(CAMLCOMPILERBIN) $(CAMLFLAGSBIN)
CAMLBYT=$(CAMLCOMPILERBYT) $(CAMLFLAGSBYT)

CAMLLIBRBYT=ocamlmklib
CAMLLIBRBIN=ocamlmklib

CAMLLEX=ocamllex
CAMLYACC=ocamlyacc
CAMLDEP=ocamldep -pp camlp4o

all:: byt bin

# (begin Imakefile)

CAMLFLAGSBYT=-w A -warn-error Ae -g -pp camlp4o

minicaml.BYTOBJS=eval.cmo lexuniv.cmo syntaxe.cmo types.cmo synthese.cmo caml.cmo
minicaml.FILES=$(minicaml.BYTOBJS:.cmo=.ml)

byt:: minicaml.byt

depend::
	$(CAMLDEP) $(minicaml.FILES) >> Makefile

clean::
	$(RM) minicaml.byt

minicaml.byt: eval.cmo lexuniv.cmo syntaxe.cmo types.cmo synthese.cmo caml.cmo
	$(CAMLBYT) $(LINKFLAGSBYT)  eval.cmo lexuniv.cmo syntaxe.cmo types.cmo synthese.cmo caml.cmo -o minicaml

CAMLFLAGSBIN=-w A -warn-error Ae -pp camlp4o

minicaml.BINOBJS=eval.cmx lexuniv.cmx syntaxe.cmx types.cmx synthese.cmx caml.cmx
minicaml.FILES=$(minicaml.BINOBJS:.cmx=.ml)

bin:: minicaml.bin

depend::
	$(CAMLDEP) $(minicaml.FILES) >> Makefile

clean::
	$(RM) minicaml.bin

minicaml.bin: eval.cmx lexuniv.cmx syntaxe.cmx types.cmx synthese.cmx caml.cmx
	$(CAMLBIN) $(LINKFLAGSBIN)  eval.cmx lexuniv.cmx syntaxe.cmx types.cmx synthese.cmx caml.cmx -o minicaml.bin
	$(CP) minicaml.bin minicaml

CAMLFLAGSBYT=-w A -warn-error Ae -g -pp camlp4o

camlinterp.BYTOBJS=eval.cmo lexuniv.cmo syntaxe.cmo interp.cmo
camlinterp.FILES=$(camlinterp.BYTOBJS:.cmo=.ml)

byt:: camlinterp.byt

depend::
	$(CAMLDEP) $(camlinterp.FILES) >> Makefile

clean::
	$(RM) camlinterp.byt

camlinterp.byt: eval.cmo lexuniv.cmo syntaxe.cmo interp.cmo
	$(CAMLBYT) $(LINKFLAGSBYT)  eval.cmo lexuniv.cmo syntaxe.cmo interp.cmo -o camlinterp

CAMLFLAGSBIN=-w A -warn-error Ae -pp camlp4o

camlinterp.BINOBJS=eval.cmx lexuniv.cmx syntaxe.cmx interp.cmx
camlinterp.FILES=$(camlinterp.BINOBJS:.cmx=.ml)

bin:: camlinterp.bin

depend::
	$(CAMLDEP) $(camlinterp.FILES) >> Makefile

clean::
	$(RM) camlinterp.bin

camlinterp.bin: eval.cmx lexuniv.cmx syntaxe.cmx interp.cmx
	$(CAMLBIN) $(LINKFLAGSBIN)  eval.cmx lexuniv.cmx syntaxe.cmx interp.cmx -o camlinterp.bin
	$(CP) camlinterp.bin camlinterp

CAMLFLAGSBYT=-w A -warn-error Ae -g -pp camlp4o

camltyp.BYTOBJS=lexuniv.cmo syntaxe.cmo types.cmo synthese.cmo typeur.cmo
camltyp.FILES=$(camltyp.BYTOBJS:.cmo=.ml)

byt:: camltyp.byt

depend::
	$(CAMLDEP) $(camltyp.FILES) >> Makefile

clean::
	$(RM) camltyp.byt

camltyp.byt: lexuniv.cmo syntaxe.cmo types.cmo synthese.cmo typeur.cmo
	$(CAMLBYT) $(LINKFLAGSBYT)  lexuniv.cmo syntaxe.cmo types.cmo synthese.cmo typeur.cmo -o camltyp

CAMLFLAGSBIN=-w A -warn-error Ae -pp camlp4o

camltyp.BINOBJS=lexuniv.cmx syntaxe.cmx types.cmx synthese.cmx typeur.cmx
camltyp.FILES=$(camltyp.BINOBJS:.cmx=.ml)

bin:: camltyp.bin

depend::
	$(CAMLDEP) $(camltyp.FILES) >> Makefile

clean::
	$(RM) camltyp.bin

camltyp.bin: lexuniv.cmx syntaxe.cmx types.cmx synthese.cmx typeur.cmx
	$(CAMLBIN) $(LINKFLAGSBIN)  lexuniv.cmx syntaxe.cmx types.cmx synthese.cmx typeur.cmx -o camltyp.bin
	$(CP) camltyp.bin camltyp

# (end Imakefile)

clean::
	$(RM) *.cmi *.cmix *.cmo *.cmx *.o a.out* *~ *.byt *.bin #*#

depend::

beforedepend::

mfile:
	imake -I$(CONFIGDIR)

makefiles:: beforedepend mfile depend

.SUFFIXES: .mli .cmi .ml .mly .mll .cmo .cmx .cma .cmxa

.mli.cmi:
	$(CAMLBYT) -c $<

.ml.cmo:
	$(CAMLBYT) -c $<

.ml.cmx:
	$(CAMLBIN) -c $<

# Generated dependencies below

eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
caml.cmo: types.cmi synthese.cmi syntaxe.cmi eval.cmi
caml.cmx: types.cmx synthese.cmx syntaxe.cmx eval.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
caml.cmo: types.cmi synthese.cmi syntaxe.cmi eval.cmi
caml.cmx: types.cmx synthese.cmx syntaxe.cmx eval.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
interp.cmo: syntaxe.cmi eval.cmi
interp.cmx: syntaxe.cmx eval.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
interp.cmo: syntaxe.cmi eval.cmi
interp.cmx: syntaxe.cmx eval.cmx
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
typeur.cmo: types.cmi synthese.cmi syntaxe.cmi
typeur.cmx: types.cmx synthese.cmx syntaxe.cmx
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
typeur.cmo: types.cmi synthese.cmi syntaxe.cmi
typeur.cmx: types.cmx synthese.cmx syntaxe.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
caml.cmo: types.cmi synthese.cmi syntaxe.cmi eval.cmi
caml.cmx: types.cmx synthese.cmx syntaxe.cmx eval.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
caml.cmo: types.cmi synthese.cmi syntaxe.cmi eval.cmi
caml.cmx: types.cmx synthese.cmx syntaxe.cmx eval.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
interp.cmo: syntaxe.cmi eval.cmi
interp.cmx: syntaxe.cmx eval.cmx
eval.cmo: syntaxe.cmi eval.cmi
eval.cmx: syntaxe.cmx eval.cmi
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
interp.cmo: syntaxe.cmi eval.cmi
interp.cmx: syntaxe.cmx eval.cmx
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
typeur.cmo: types.cmi synthese.cmi syntaxe.cmi
typeur.cmx: types.cmx synthese.cmx syntaxe.cmx
lexuniv.cmo: lexuniv.cmi
lexuniv.cmx: lexuniv.cmi
syntaxe.cmo: lexuniv.cmi syntaxe.cmi
syntaxe.cmx: lexuniv.cmx syntaxe.cmi
types.cmo: types.cmi
types.cmx: types.cmi
synthese.cmo: types.cmi syntaxe.cmi synthese.cmi
synthese.cmx: types.cmx syntaxe.cmx synthese.cmi
typeur.cmo: types.cmi synthese.cmi syntaxe.cmi
typeur.cmx: types.cmx synthese.cmx syntaxe.cmx

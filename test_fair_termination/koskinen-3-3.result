MoCHi: Model Checker for Higher-Order Programs
  Build: _af132b7 (after 2015-07-27 18:08:37 +0900)
  FPAT version: af132b7
  TRecS version: 1.33
  HorSat version: 0.99
  OCaml version: 4.02.1
  Command: ./mochi.opt -ignore-conf -color -fair-termination -bool-init-empty -fpat '-wp-max 2 -neg-pred' 
           test_fair_termination/koskinen-3-3.ml -expand-set-flag -rank-widen -horsat

parsed:
 let event_1008 s_1009 = () in
 let rec halt_1010 x_2005 = let u_2011 = event_1008 "Call" in
                            halt_1010 () in
 let rec bar_1011 x_1012 = let u_2027 = event_1008 "Bar" in
                           if x_1012 > 0 then bar_1011 (x_1012 - 1) else x_1012 in
 let rec foo_1013 x_1014 =
   let u_2041 = event_1008 "Call" in
   if x_1014 <= 0 then foo_1013 x_1014 else halt_1010 ()
 in
 let main_1015 x_2043 =
   let t_1016 = rand_int () in
   if rand_int () > 0 then foo_1013 0 else foo_1013 (bar_1011 t_1016)
 in
 ()

FAIRNESS: {(Call, Bar)}

###set_main:
 let rec halt_1010 (s_2120:(bool * bool)) (set_flag_2121:bool) (x_2005:unit) =
   let s__u_2126 = ((fst s_2120, true), ()) in
   let s_2127 = fst s__u_2126 in
   let u_2011 = snd s__u_2126 in
   halt_1010 s_2127 set_flag_2121 ()
 in
 let rec bar_1011 (s_2135:(bool * bool)) (set_flag_2136:bool) (x_1012:int) =
   let s__u_2141 = ((true, snd s_2135), ()) in
   let s_2142 = fst s__u_2141 in
   let u_2027 = snd s__u_2141 in
   if x_1012 > 0 then bar_1011 s_2142 set_flag_2136 (x_1012 - 1) else (s_2142, x_1012)
 in
 let rec foo_1013 (s_2152:(bool * bool)) (set_flag_2153:bool) (x_1014:int) =
   let s__u_2158 = ((fst s_2152, true), ()) in
   let s_2159 = fst s__u_2158 in
   let u_2041 = snd s__u_2158 in
   if x_1014 <= 0 then foo_1013 s_2159 set_flag_2153 x_1014 else halt_1010 s_2159 set_flag_2153 ()
 in
 let main_1015 (s_2169:(bool * bool)) (set_flag_2170:bool) (x_2043:unit) =
   if set_flag_2170
   then
     let x_2171 = let u_2175 = if not (snd s_2169) || fst s_2169 then assert false in
                  rand_int () = 0 in
     let sp_2182 = if x_2171 then ((false, false), ()) else (s_2169, ()) in
     let s_2172 = fst sp_2182 in
     let s__n_2185 = (s_2172, rand_int ()) in
     let s_2186 = fst s__n_2185 in
     let t_1016 = snd s__n_2185 in
     if rand_int () > 0
     then
       foo_1013 s_2186 true 0
     else
       let s__r_bar_2191 = bar_1011 s_2186 true t_1016 in
       let s_2192 = fst s__r_bar_2191 in
       let r_bar_2109 = snd s__r_bar_2191 in
       foo_1013 s_2192 true r_bar_2109
   else
     let sp_2197 = if true then ((false, false), ()) else (s_2169, ()) in
     let s_2198 = fst sp_2197 in
     let s__n_2200 = (s_2198, rand_int ()) in
     let s_2201 = fst s__n_2200 in
     let t_2202 = snd s__n_2200 in
     if rand_int () > 0
     then
       foo_1013 s_2201 true 0
     else
       let s__r_bar_2203 = bar_1011 s_2201 true t_2202 in
       let s_2204 = fst s__r_bar_2203 in
       let r_bar_2205 = snd s__r_bar_2203 in
       foo_1013 s_2204 true r_bar_2205
 in
 let s__r_main_2208 = main_1015 (false, false) false () in
 let s_2209 = fst s__r_main_2208 in
 let r_main_2110 = snd s__r_main_2208 in
 r_main_2110

###beta_reduce_trivial:
 let rec halt_1010 (s_2120:(bool * bool)) (set_flag_2121:bool) (x_2005:unit) =
   let s__u_2126 = ((fst s_2120, true), ()) in
   let s_2127 = fst s__u_2126 in
   halt_1010 s_2127 set_flag_2121 ()
 in
 let rec bar_1011 (s_2135:(bool * bool)) (set_flag_2136:bool) (x_1012:int) =
   let s__u_2141 = ((true, snd s_2135), ()) in
   let s_2142 = fst s__u_2141 in
   if x_1012 > 0 then bar_1011 s_2142 set_flag_2136 (x_1012 - 1) else (s_2142, x_1012)
 in
 let rec foo_1013 (s_2152:(bool * bool)) (set_flag_2153:bool) (x_1014:int) =
   let s__u_2158 = ((fst s_2152, true), ()) in
   let s_2159 = fst s__u_2158 in
   if x_1014 <= 0 then foo_1013 s_2159 set_flag_2153 x_1014 else halt_1010 s_2159 set_flag_2153 ()
 in
 let main_1015 (s_2169:(bool * bool)) (set_flag_2170:bool) (x_2043:unit) =
   if set_flag_2170
   then
     let x_2171 = let u_2175 = if not (snd s_2169) || fst s_2169 then assert false in
                  rand_int () = 0 in
     let sp_2182 = if x_2171 then ((false, false), ()) else (s_2169, ()) in
     let s_2172 = fst sp_2182 in
     let s__n_2185 = (s_2172, rand_int ()) in
     let s_2186 = fst s__n_2185 in
     let t_1016 = snd s__n_2185 in
     if rand_int () > 0
     then
       foo_1013 s_2186 true 0
     else
       let s__r_bar_2191 = bar_1011 s_2186 true t_1016 in
       let s_2192 = fst s__r_bar_2191 in
       let r_bar_2109 = snd s__r_bar_2191 in
       foo_1013 s_2192 true r_bar_2109
   else
     let sp_2197 = if true then ((false, false), ()) else (s_2169, ()) in
     let s_2198 = fst sp_2197 in
     let s__n_2200 = (s_2198, rand_int ()) in
     let s_2201 = fst s__n_2200 in
     let t_2202 = snd s__n_2200 in
     if rand_int () > 0
     then
       foo_1013 s_2201 true 0
     else
       let s__r_bar_2203 = bar_1011 s_2201 true t_2202 in
       let s_2204 = fst s__r_bar_2203 in
       let r_bar_2205 = snd s__r_bar_2203 in
       foo_1013 s_2204 true r_bar_2205
 in
 let s__r_main_2208 = main_1015 (false, false) false () in
 let r_main_2110 = snd s__r_main_2208 in
 r_main_2110

###inline:
 let rec halt_1010 (s_2120:(bool * bool)) (set_flag_2121:bool) (x_2005:unit) =
   let s__u_2126 = ((fst s_2120, true), ()) in
   halt_1010 (fst s__u_2126) set_flag_2121 ()
 in
 let rec bar_1011 (s_2135:(bool * bool)) (set_flag_2136:bool) (x_1012:int) =
   let s__u_2141 = ((true, snd s_2135), ()) in
   if x_1012 > 0 then bar_1011 (fst s__u_2141) set_flag_2136 (x_1012 - 1) else (fst s__u_2141, x_1012)
 in
 let rec foo_1013 (s_2152:(bool * bool)) (set_flag_2153:bool) (x_1014:int) =
   let s__u_2158 = ((fst s_2152, true), ()) in
   if x_1014 <= 0
   then
     foo_1013 (fst s__u_2158) set_flag_2153 x_1014
   else
     halt_1010 (fst s__u_2158) set_flag_2153 ()
 in
 let main_1015 (s_2169:(bool * bool)) (set_flag_2170:bool) (x_2043:unit) =
   if set_flag_2170
   then
     let x_2171 = let u_2175 = if not (snd s_2169) || fst s_2169 then assert false in
                  rand_int () = 0 in
     let sp_2182 = if x_2171 then ((false, false), ()) else (s_2169, ()) in
     let s__n_2185 = (fst sp_2182, rand_int ()) in
     if rand_int () > 0
     then
       foo_1013 (fst s__n_2185) true 0
     else
       let s__r_bar_2191 = bar_1011 (fst s__n_2185) true (snd s__n_2185) in
       foo_1013 (fst s__r_bar_2191) true (snd s__r_bar_2191)
   else
     let sp_2197 = if true then ((false, false), ()) else (s_2169, ()) in
     let s__n_2200 = (fst sp_2197, rand_int ()) in
     if rand_int () > 0
     then
       foo_1013 (fst s__n_2200) true 0
     else
       let s__r_bar_2203 = bar_1011 (fst s__n_2200) true (snd s__n_2200) in
       foo_1013 (fst s__r_bar_2203) true (snd s__r_bar_2203)
 in
 let s__r_main_2208 = main_1015 (false, false) false () in
 snd s__r_main_2208

###CPS:
 (let rec halt_1010 s_2120 set_flag_2121 x_2005 k_halt_2597 =
    let s__u_2126 k_halt_s__u_2601 = k_halt_s__u_2601 ((fst s_2120, true), ()) in
    s__u_2126 (fun s__u_2624 -> (halt_1010 (fst s__u_2624) set_flag_2121) () k_halt_2597)
  in
  let rec bar_1011 s_2135 set_flag_2136 x_1012 k_bar_2633 =
    let s__u_2141 k_bar_s__u_2637 = k_bar_s__u_2637 ((true, snd s_2135), ()) in
    s__u_2141
      (fun s__u_2670 ->
         if x_1012 > 0
         then
           (bar_1011 (fst s__u_2670) set_flag_2136) (x_1012 - 1) k_bar_2633
         else
           k_bar_2633 (fst s__u_2670, x_1012))
  in
  let rec foo_1013 s_2152 set_flag_2153 x_1014 k_foo_2679 =
    let s__u_2158 k_foo_s__u_2683 = k_foo_s__u_2683 ((fst s_2152, true), ()) in
    s__u_2158
      (fun s__u_2722 ->
         if x_1014 <= 0
         then
           (foo_1013 (fst s__u_2722) set_flag_2153) x_1014 k_foo_2679
         else
           (halt_1010 (fst s__u_2722) set_flag_2153) () k_foo_2679)
  in
  let main_1015 s_2169 set_flag_2170 x_2043 k_main_2731 =
    if set_flag_2170
    then
      let x_2171 k_main_x_2735 =
        let u_2175 k_main_x_u_2752 =
          if not (snd s_2169)
          then
            <|fail|> () k_main_x_u_2752
          else
            if fst s_2169 then <|fail|> () k_main_x_u_2752 else k_main_x_u_2752 ()
        in
        u_2175 (fun u_2769 -> rand_int_cps () (fun x_2757 -> k_main_x_2735 (x_2757 = 0)))
      in
      x_2171
        (fun x_2871 ->
           let sp_2182 k_main_sp_2791 =
             if x_2871 then k_main_sp_2791 ((false, false), ()) else k_main_sp_2791 (s_2169, ())
           in
           sp_2182
             (fun sp_2870 ->
                let s__n_2185 k_main_s__n_2797 =
                  rand_int_cps () (fun x_2799 -> k_main_s__n_2797 (fst sp_2870, x_2799))
                in
                s__n_2185
                  (fun s__n_2869 ->
                     rand_int_cps
                       () 
                       (fun x_2814 ->
                          if x_2814 > 0
                          then
                            (foo_1013 (fst s__n_2869) true) 0 k_main_2731
                          else
                            let s__r_bar_2191 k_main_s__r_bar_2846 =
                              (bar_1011 (fst s__n_2869) true) (snd s__n_2869) k_main_s__r_bar_2846
                            in
                            s__r_bar_2191
                              (fun s__r_bar_2864 ->
                                 (foo_1013 (fst s__r_bar_2864) true) (snd s__r_bar_2864) k_main_2731)))))
    else
      (fun sp_3603 ->
         let s__n_3604 k_main_s__n_3605 =
           rand_int_cps () (fun x_3606 -> k_main_s__n_3605 (fst sp_3603, x_3606))
         in
         s__n_3604
           (fun s__n_3607 ->
              rand_int_cps
                () 
                (fun x_3608 ->
                   if x_3608 > 0
                   then
                     (foo_1013 (fst s__n_3607) true) 0 k_main_2731
                   else
                     let s__r_bar_3609 k_main_s__r_bar_3610 =
                       (bar_1011 (fst s__n_3607) true) (snd s__n_3607) k_main_s__r_bar_3610
                     in
                     s__r_bar_3609
                       (fun s__r_bar_3611 ->
                          (foo_1013 (fst s__r_bar_3611) true) (snd s__r_bar_3611) k_main_2731))))
        ((false, false), ())
  in
  let s__r_main_2208 k_s__r_main_3020 = ((main_1015 (false, false)) false) () k_s__r_main_3020 in
  s__r_main_2208 (fun s__r_main_3026 -> {end}) # [ACPS])

###remove_pair:
 (let rec halt_1010 s0_2120 s1_2120 set_flag_2121 x_2005 k_halt_2597 =
    halt_1010 s0_2120 true set_flag_2121 () k_halt_2597
  in
  let rec bar_1011 s0_2135 s1_2135 set_flag_2136 x_1012 k_bar_2633 =
    if x_1012 > 0
    then
      bar_1011 true s1_2135 set_flag_2136 (x_1012 - 1) k_bar_2633
    else
      k_bar_2633 true s1_2135 x_1012
  in
  let rec foo_1013 s0_2152 s1_2152 set_flag_2153 x_1014 k_foo_2679 =
    if x_1014 <= 0
    then
      foo_1013 s0_2152 true set_flag_2153 x_1014 k_foo_2679
    else
      halt_1010 s0_2152 true set_flag_2153 () k_foo_2679
  in
  let main_1015 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 =
    if set_flag_2170
    then
      let x_2171 k_main_x_2735 =
        let u_2175 k_main_x_u_2752 =
          if not s1_2169
          then
            <|fail|> () k_main_x_u_2752
          else
            if s0_2169 then <|fail|> () k_main_x_u_2752 else k_main_x_u_2752 ()
        in
        u_2175 (fun u_2769 -> rand_int_cps () (fun x_2757 -> k_main_x_2735 (x_2757 = 0)))
      in
      x_2171
        (fun x_2871 ->
           let sp_2182 k_main_sp_2791 =
             if x_2871 then k_main_sp_2791 false false () else k_main_sp_2791 s0_2169 s1_2169 ()
           in
           sp_2182
             (fun sp00_2870 sp01_2870 sp1_2870 ->
                let s__n_2185 k_main_s__n_2797 =
                  rand_int_cps () (fun x_2799 -> k_main_s__n_2797 sp00_2870 sp01_2870 x_2799)
                in
                s__n_2185
                  (fun s__n00_2869 s__n01_2869 s__n1_2869 ->
                     rand_int_cps
                       () 
                       (fun x_2814 ->
                          if x_2814 > 0
                          then
                            foo_1013 s__n00_2869 s__n01_2869 true 0 k_main_2731
                          else
                            bar_1011
                              s__n00_2869 s__n01_2869 true s__n1_2869 
                              (fun s__r_bar00_2864 s__r_bar01_2864 s__r_bar1_2864 ->
                                 foo_1013
                                   s__r_bar00_2864 s__r_bar01_2864 true s__r_bar1_2864 k_main_2731)))))
    else
      let s__n_3604 k_main_s__n_3605 =
        rand_int_cps () (fun x_3606 -> k_main_s__n_3605 false false x_3606)
      in
      s__n_3604
        (fun s__n00_3607 s__n01_3607 s__n1_3607 ->
           rand_int_cps
             () 
             (fun x_3608 ->
                if x_3608 > 0
                then
                  foo_1013 s__n00_3607 s__n01_3607 true 0 k_main_2731
                else
                  bar_1011
                    s__n00_3607 s__n01_3607 true s__n1_3607 
                    (fun s__r_bar00_3611 s__r_bar01_3611 s__r_bar1_3611 ->
                       foo_1013 s__r_bar00_3611 s__r_bar01_3611 true s__r_bar1_3611 k_main_2731)))
  in
  main_1015 false false false () (fun s__r_main00_3026 s__r_main01_3026 s__r_main1_3026 -> {end}) #
  [ACPS])

###replace_bottom_def:
 (let rec halt_1010 s0_2120 s1_2120 set_flag_2121 x_2005 k_halt_2597 = _|_ in
  let rec bar_1011 s0_2135 s1_2135 set_flag_2136 x_1012 k_bar_2633 =
    if x_1012 > 0
    then
      bar_1011 true s1_2135 set_flag_2136 (x_1012 - 1) k_bar_2633
    else
      k_bar_2633 true s1_2135 x_1012
  in
  let rec foo_1013 s0_2152 s1_2152 set_flag_2153 x_1014 k_foo_2679 =
    if x_1014 <= 0
    then
      foo_1013 s0_2152 true set_flag_2153 x_1014 k_foo_2679
    else
      halt_1010 s0_2152 true set_flag_2153 () k_foo_2679
  in
  let main_1015 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 =
    if set_flag_2170
    then
      let x_2171 k_main_x_2735 =
        let u_2175 k_main_x_u_2752 =
          if not s1_2169
          then
            <|fail|> () k_main_x_u_2752
          else
            if s0_2169 then <|fail|> () k_main_x_u_2752 else k_main_x_u_2752 ()
        in
        u_2175 (fun u_2769 -> rand_int_cps () (fun x_2757 -> k_main_x_2735 (x_2757 = 0)))
      in
      x_2171
        (fun x_2871 ->
           let sp_2182 k_main_sp_2791 =
             if x_2871 then k_main_sp_2791 false false () else k_main_sp_2791 s0_2169 s1_2169 ()
           in
           sp_2182
             (fun sp00_2870 sp01_2870 sp1_2870 ->
                let s__n_2185 k_main_s__n_2797 =
                  rand_int_cps () (fun x_2799 -> k_main_s__n_2797 sp00_2870 sp01_2870 x_2799)
                in
                s__n_2185
                  (fun s__n00_2869 s__n01_2869 s__n1_2869 ->
                     rand_int_cps
                       () 
                       (fun x_2814 ->
                          if x_2814 > 0
                          then
                            foo_1013 s__n00_2869 s__n01_2869 true 0 k_main_2731
                          else
                            bar_1011
                              s__n00_2869 s__n01_2869 true s__n1_2869 
                              (fun s__r_bar00_2864 s__r_bar01_2864 s__r_bar1_2864 ->
                                 foo_1013
                                   s__r_bar00_2864 s__r_bar01_2864 true s__r_bar1_2864 k_main_2731)))))
    else
      let s__n_3604 k_main_s__n_3605 =
        rand_int_cps () (fun x_3606 -> k_main_s__n_3605 false false x_3606)
      in
      s__n_3604
        (fun s__n00_3607 s__n01_3607 s__n1_3607 ->
           rand_int_cps
             () 
             (fun x_3608 ->
                if x_3608 > 0
                then
                  foo_1013 s__n00_3607 s__n01_3607 true 0 k_main_2731
                else
                  bar_1011
                    s__n00_3607 s__n01_3607 true s__n1_3607 
                    (fun s__r_bar00_3611 s__r_bar01_3611 s__r_bar1_3611 ->
                       foo_1013 s__r_bar00_3611 s__r_bar01_3611 true s__r_bar1_3611 k_main_2731)))
  in
  main_1015 false false false () (fun s__r_main00_3026 s__r_main01_3026 s__r_main1_3026 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 0)::
Main: main_3896
  main_3896 -> (main_1015 false false false () f_3909).
  bar_1011 s0_2135 s1_2135 set_flag_2136 x_1012 k_bar_2633 when (x_1012 > 0) ->
      (bar_1011 true s1_2135 set_flag_2136 (x_1012 - 1) k_bar_2633).
  bar_1011 s0_2135 s1_2135 set_flag_2136 x_1012 k_bar_2633 when (not (x_1012 > 0)) -> (k_bar_2633 true s1_2135 x_1012).
  br_u_3910 b_3911 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when b_3911 ->
      (fail_3913 true k_main_x_u_2752).
  br_u_3910 b_3911 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when (not b_3911) -> (k_main_x_u_2752 ()).
  f_3909 s__r_main00_3026 s__r_main01_3026 s__r_main1_3026 -> end.
  f_main_3899 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 x_2871 ->
      (sp_2182 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871
       (f_main_3900 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_2731)).
  f_main_3900 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_2731 sp00_2870 sp01_2870 sp1_2870 ->
      (s__n_2185 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871
       (f_main_3902 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_2731)).
  f_main_3902 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_2731 s__n00_2869 
  s__n01_2869 s__n1_2869 ->
      (rand_int
       (f_main_3903 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870
        x_2043 x_2871 k_main_2731)).
  f_main_3903 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 
  x_2871 k_main_2731 x_2814 when (x_2814 > 0) -> (foo_1013 s__n00_2869 s__n01_2869 true 0 k_main_2731).
  f_main_3903 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 
  x_2871 k_main_2731 x_2814 when (not (x_2814 > 0)) ->
      (bar_1011 s__n00_2869 s__n01_2869 true s__n1_2869
       (f_main_3904 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870
        x_2043 x_2814 x_2871 k_main_2731)).
  f_main_3904 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 
  x_2814 x_2871 k_main_2731 s__r_bar00_2864 s__r_bar01_2864 s__r_bar1_2864 ->
      (foo_1013 s__r_bar00_2864 s__r_bar01_2864 true s__r_bar1_2864 k_main_2731).
  f_main_3906 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 s__n00_3607 s__n01_3607 s__n1_3607 ->
      (rand_int (f_main_3907 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 k_main_2731)).
  f_main_3907 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 k_main_2731 x_3608 when 
      (x_3608 > 0) -> (foo_1013 s__n00_3607 s__n01_3607 true 0 k_main_2731).
  f_main_3907 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 k_main_2731 x_3608 when 
      (not (x_3608 > 0)) ->
      (bar_1011 s__n00_3607 s__n01_3607 true s__n1_3607
       (f_main_3908 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 x_3608 k_main_2731)).
  f_main_3908 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 x_3608 k_main_2731 
  s__r_bar00_3611 s__r_bar01_3611 s__r_bar1_3611 ->
      (foo_1013 s__r_bar00_3611 s__r_bar01_3611 true s__r_bar1_3611 k_main_2731).
  f_s__n_3901 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_s__n_2797 x_2799 ->
      (k_main_s__n_2797 sp00_2870 sp01_2870 x_2799).
  f_s__n_3905 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_s__n_3605 x_3606 -> (k_main_s__n_3605 false false x_3606).
  f_x_3897 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_2735 u_2769 ->
      (rand_int (f_x_3898 s0_2169 s1_2169 set_flag_2170 u_2769 x_2043 k_main_x_2735)).
  f_x_3898 s0_2169 s1_2169 set_flag_2170 u_2769 x_2043 k_main_x_2735 x_2757 -> (k_main_x_2735 (x_2757 = 0)).
  fail_3912 b k -> {fail} => (k ()).
  fail_3913 b k -> {fail} => (k ()).
  foo_1013 s0_2152 s1_2152 set_flag_2153 x_1014 k_foo_2679 when (x_1014 <= 0) ->
      (foo_1013 s0_2152 true set_flag_2153 x_1014 k_foo_2679).
  foo_1013 s0_2152 s1_2152 set_flag_2153 x_1014 k_foo_2679 when (not (x_1014 <= 0)) ->
      (halt_1010 s0_2152 true set_flag_2153 () k_foo_2679).
  halt_1010 s0_2120 s1_2120 set_flag_2121 x_2005 k_halt_2597 -> _|_.
  main_1015 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 when set_flag_2170 ->
      (x_2171 s0_2169 s1_2169 set_flag_2170 x_2043 (f_main_3899 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731)).
  main_1015 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 when (not set_flag_2170) ->
      (s__n_3604 s0_2169 s1_2169 set_flag_2170 x_2043 (f_main_3906 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731)).
  s__n_2185 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_s__n_2797 ->
      (rand_int
       (f_s__n_3901 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_s__n_2797)).
  s__n_3604 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_s__n_3605 ->
      (rand_int (f_s__n_3905 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_s__n_3605)).
  sp_2182 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_sp_2791 when x_2871 -> (k_main_sp_2791 false false ()).
  sp_2182 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_sp_2791 when 
      (not x_2871) -> (k_main_sp_2791 s0_2169 s1_2169 ()).
  u_2175 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when (not s1_2169) -> (fail_3912 true k_main_x_u_2752).
  u_2175 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when (not (not s1_2169)) ->
      (br_u_3910 s0_2169 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752).
  x_2171 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_2735 ->
      (u_2175 s0_2169 s1_2169 set_flag_2170 x_2043 (f_x_3897 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_2735)).
Types:
  main_3896 : X
  bar_1011 : (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X)
  br_u_3910 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_main_3903 : (bool ->
                 bool ->
                 bool ->
                 bool -> int -> bool -> bool -> bool -> unit -> unit -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  f_main_3907 : (bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_3912 : (bool -> (unit -> X) -> X)
  fail_3913 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> X)
  main_1015 : (bool -> bool -> bool -> unit -> (bool -> bool -> unit -> X) -> X)
  sp_2182 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_2175 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)

(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_3896 ... --> 
  main_1015 [1/2] ... --> 
  x_2171 ... --> 
  u_2175 [1/2] ... --> 
  fail_3912 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0

(0-3) Checking counterexample ... DONE!

(0-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0

Program with abstraction types (CEGAR-cycle 1)::
Main: main_3896
  main_3896 -> (main_1015 false false false () f_3909).
  bar_1011 s0_2135 s1_2135 set_flag_2136 x_1012 k_bar_2633 when (x_1012 > 0) ->
      (bar_1011 true s1_2135 set_flag_2136 (x_1012 - 1) k_bar_2633).
  bar_1011 s0_2135 s1_2135 set_flag_2136 x_1012 k_bar_2633 when (not (x_1012 > 0)) -> (k_bar_2633 true s1_2135 x_1012).
  br_u_3910 b_3911 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when b_3911 ->
      (fail_3913 true k_main_x_u_2752).
  br_u_3910 b_3911 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when (not b_3911) -> (k_main_x_u_2752 ()).
  f_3909 s__r_main00_3026 s__r_main01_3026 s__r_main1_3026 -> end.
  f_main_3899 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 x_2871 ->
      (sp_2182 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871
       (f_main_3900 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_2731)).
  f_main_3900 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_2731 sp00_2870 sp01_2870 sp1_2870 ->
      (s__n_2185 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871
       (f_main_3902 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_2731)).
  f_main_3902 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_2731 s__n00_2869 
  s__n01_2869 s__n1_2869 ->
      (rand_int
       (f_main_3903 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870
        x_2043 x_2871 k_main_2731)).
  f_main_3903 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 
  x_2871 k_main_2731 x_2814 when (x_2814 > 0) -> (foo_1013 s__n00_2869 s__n01_2869 true 0 k_main_2731).
  f_main_3903 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 
  x_2871 k_main_2731 x_2814 when (not (x_2814 > 0)) ->
      (bar_1011 s__n00_2869 s__n01_2869 true s__n1_2869
       (f_main_3904 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870
        x_2043 x_2814 x_2871 k_main_2731)).
  f_main_3904 s0_2169 s1_2169 s__n00_2869 s__n01_2869 s__n1_2869 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 
  x_2814 x_2871 k_main_2731 s__r_bar00_2864 s__r_bar01_2864 s__r_bar1_2864 ->
      (foo_1013 s__r_bar00_2864 s__r_bar01_2864 true s__r_bar1_2864 k_main_2731).
  f_main_3906 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 s__n00_3607 s__n01_3607 s__n1_3607 ->
      (rand_int (f_main_3907 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 k_main_2731)).
  f_main_3907 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 k_main_2731 x_3608 when 
      (x_3608 > 0) -> (foo_1013 s__n00_3607 s__n01_3607 true 0 k_main_2731).
  f_main_3907 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 k_main_2731 x_3608 when 
      (not (x_3608 > 0)) ->
      (bar_1011 s__n00_3607 s__n01_3607 true s__n1_3607
       (f_main_3908 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 x_3608 k_main_2731)).
  f_main_3908 s0_2169 s1_2169 s__n00_3607 s__n01_3607 s__n1_3607 set_flag_2170 x_2043 x_3608 k_main_2731 
  s__r_bar00_3611 s__r_bar01_3611 s__r_bar1_3611 ->
      (foo_1013 s__r_bar00_3611 s__r_bar01_3611 true s__r_bar1_3611 k_main_2731).
  f_s__n_3901 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_s__n_2797 x_2799 ->
      (k_main_s__n_2797 sp00_2870 sp01_2870 x_2799).
  f_s__n_3905 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_s__n_3605 x_3606 -> (k_main_s__n_3605 false false x_3606).
  f_x_3897 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_2735 u_2769 ->
      (rand_int (f_x_3898 s0_2169 s1_2169 set_flag_2170 u_2769 x_2043 k_main_x_2735)).
  f_x_3898 s0_2169 s1_2169 set_flag_2170 u_2769 x_2043 k_main_x_2735 x_2757 -> (k_main_x_2735 (x_2757 = 0)).
  fail_3912 b k -> {fail} => (k ()).
  fail_3913 b k -> {fail} => (k ()).
  foo_1013 s0_2152 s1_2152 set_flag_2153 x_1014 k_foo_2679 when (x_1014 <= 0) ->
      (foo_1013 s0_2152 true set_flag_2153 x_1014 k_foo_2679).
  foo_1013 s0_2152 s1_2152 set_flag_2153 x_1014 k_foo_2679 when (not (x_1014 <= 0)) ->
      (halt_1010 s0_2152 true set_flag_2153 () k_foo_2679).
  halt_1010 s0_2120 s1_2120 set_flag_2121 x_2005 k_halt_2597 -> _|_.
  main_1015 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 when set_flag_2170 ->
      (x_2171 s0_2169 s1_2169 set_flag_2170 x_2043 (f_main_3899 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731)).
  main_1015 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731 when (not set_flag_2170) ->
      (s__n_3604 s0_2169 s1_2169 set_flag_2170 x_2043 (f_main_3906 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_2731)).
  s__n_2185 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_s__n_2797 ->
      (rand_int
       (f_s__n_3901 s0_2169 s1_2169 set_flag_2170 sp00_2870 sp01_2870 sp1_2870 x_2043 x_2871 k_main_s__n_2797)).
  s__n_3604 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_s__n_3605 ->
      (rand_int (f_s__n_3905 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_s__n_3605)).
  sp_2182 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_sp_2791 when x_2871 -> (k_main_sp_2791 false false ()).
  sp_2182 s0_2169 s1_2169 set_flag_2170 x_2043 x_2871 k_main_sp_2791 when 
      (not x_2871) -> (k_main_sp_2791 s0_2169 s1_2169 ()).
  u_2175 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when (not s1_2169) -> (fail_3912 true k_main_x_u_2752).
  u_2175 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752 when (not (not s1_2169)) ->
      (br_u_3910 s0_2169 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_u_2752).
  x_2171 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_2735 ->
      (u_2175 s0_2169 s1_2169 set_flag_2170 x_2043 (f_x_3897 s0_2169 s1_2169 set_flag_2170 x_2043 k_main_x_2735)).
Types:
  main_3896 : X
  bar_1011 : (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X)
  br_u_3910 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_main_3903 : (bool ->
                 bool ->
                 bool ->
                 bool -> int -> bool -> bool -> bool -> unit -> unit -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  f_main_3907 : (bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_3912 : (bool -> (unit -> X) -> X)
  fail_3913 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> X)
  main_1015 : (bool -> bool -> x_4:bool -> unit[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  sp_2182 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_2175 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)

(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Safe!

###set_main:
 let rec halt_1010 (s_5214:(bool * bool)) (set_flag_5215:bool) (p_x_5216:int) (x_2005:unit) =
   let s__u_5221 = ((fst s_5214, true), ()) in
   let s_5222 = fst s__u_5221 in
   let u_2011 = snd s__u_5221 in
   halt_1010 s_5222 set_flag_5215 0 ()
 in
 let rec bar_1011 (s_5230:(bool * bool)) (set_flag_5231:bool) (p_x_5232:int) (x_1012:int) =
   let s__u_5237 = ((true, snd s_5230), ()) in
   let s_5238 = fst s__u_5237 in
   let u_2027 = snd s__u_5237 in
   if x_1012 > 0 then bar_1011 s_5238 set_flag_5231 0 (x_1012 - 1) else (s_5238, x_1012)
 in
 let rec foo_1013 (s_5248:(bool * bool)) (set_flag_5249:bool) (p_x_5250:int) (x_1014:int) =
   if set_flag_5249
   then
     let x_5251 = let u_5256 = if not (snd s_5248) || fst s_5248 then assert false in
                  rand_int () = 0 in
     let sp_5265 = if x_5251 then ((false, false), (x_1014)) else (s_5248, (p_x_5250)) in
     let s_5252 = fst sp_5265 in
     let p_x_5254 = #0 (snd sp_5265) in
     let s__u_5270 = ((fst s_5252, true), ()) in
     let s_5271 = fst s__u_5270 in
     let u_2041 = snd s__u_5270 in
     if x_1014 <= 0
     then
       foo_1013 s_5271 true p_x_5254 x_1014
     else
       halt_1010 s_5271 true p_x_5254 ()
   else
     let sp_5278 = if true then ((false, false), (x_1014)) else (s_5248, (p_x_5250)) in
     let s_5279 = fst sp_5278 in
     let p_x_5281 = #0 (snd sp_5278) in
     let s__u_5282 = ((fst s_5279, true), ()) in
     let s_5283 = fst s__u_5282 in
     let u_5284 = snd s__u_5282 in
     if x_1014 <= 0
     then
       foo_1013 s_5283 true p_x_5281 x_1014
     else
       halt_1010 s_5283 true p_x_5281 ()
 in
 let main_1015 (s_5290:(bool * bool)) (set_flag_5291:bool) (p_x_5292:int) (x_2043:unit) =
   let s__n_5295 = (s_5290, rand_int ()) in
   let s_5296 = fst s__n_5295 in
   let t_1016 = snd s__n_5295 in
   if rand_int () > 0
   then
     foo_1013 s_5296 set_flag_5291 0 0
   else
     let s__r_bar_5301 = bar_1011 s_5296 set_flag_5291 0 t_1016 in
     let s_5302 = fst s__r_bar_5301 in
     let r_bar_2109 = snd s__r_bar_5301 in
     foo_1013 s_5302 set_flag_5291 0 r_bar_2109
 in
 let s__r_main_5307 = main_1015 (false, false) false 0 () in
 let s_5308 = fst s__r_main_5307 in
 let r_main_2110 = snd s__r_main_5307 in
 r_main_2110

###beta_reduce_trivial:
 let rec halt_1010 (s_5214:(bool * bool)) (set_flag_5215:bool) (p_x_5216:int) (x_2005:unit) =
   let s__u_5221 = ((fst s_5214, true), ()) in
   let s_5222 = fst s__u_5221 in
   halt_1010 s_5222 set_flag_5215 0 ()
 in
 let rec bar_1011 (s_5230:(bool * bool)) (set_flag_5231:bool) (p_x_5232:int) (x_1012:int) =
   let s__u_5237 = ((true, snd s_5230), ()) in
   let s_5238 = fst s__u_5237 in
   if x_1012 > 0 then bar_1011 s_5238 set_flag_5231 0 (x_1012 - 1) else (s_5238, x_1012)
 in
 let rec foo_1013 (s_5248:(bool * bool)) (set_flag_5249:bool) (p_x_5250:int) (x_1014:int) =
   if set_flag_5249
   then
     let x_5251 = let u_5256 = if not (snd s_5248) || fst s_5248 then assert false in
                  rand_int () = 0 in
     let sp_5265 = if x_5251 then ((false, false), (x_1014)) else (s_5248, (p_x_5250)) in
     let s_5252 = fst sp_5265 in
     let p_x_5254 = #0 (snd sp_5265) in
     let s__u_5270 = ((fst s_5252, true), ()) in
     let s_5271 = fst s__u_5270 in
     if x_1014 <= 0
     then
       foo_1013 s_5271 true p_x_5254 x_1014
     else
       halt_1010 s_5271 true p_x_5254 ()
   else
     let sp_5278 = if true then ((false, false), (x_1014)) else (s_5248, (p_x_5250)) in
     let s_5279 = fst sp_5278 in
     let p_x_5281 = #0 (snd sp_5278) in
     let s__u_5282 = ((fst s_5279, true), ()) in
     let s_5283 = fst s__u_5282 in
     if x_1014 <= 0
     then
       foo_1013 s_5283 true p_x_5281 x_1014
     else
       halt_1010 s_5283 true p_x_5281 ()
 in
 let main_1015 (s_5290:(bool * bool)) (set_flag_5291:bool) (p_x_5292:int) (x_2043:unit) =
   let s__n_5295 = (s_5290, rand_int ()) in
   let s_5296 = fst s__n_5295 in
   let t_1016 = snd s__n_5295 in
   if rand_int () > 0
   then
     foo_1013 s_5296 set_flag_5291 0 0
   else
     let s__r_bar_5301 = bar_1011 s_5296 set_flag_5291 0 t_1016 in
     let s_5302 = fst s__r_bar_5301 in
     let r_bar_2109 = snd s__r_bar_5301 in
     foo_1013 s_5302 set_flag_5291 0 r_bar_2109
 in
 let s__r_main_5307 = main_1015 (false, false) false 0 () in
 let r_main_2110 = snd s__r_main_5307 in
 r_main_2110

###inline:
 let rec halt_1010 (s_5214:(bool * bool)) (set_flag_5215:bool) (p_x_5216:int) (x_2005:unit) =
   let s__u_5221 = ((fst s_5214, true), ()) in
   halt_1010 (fst s__u_5221) set_flag_5215 0 ()
 in
 let rec bar_1011 (s_5230:(bool * bool)) (set_flag_5231:bool) (p_x_5232:int) (x_1012:int) =
   let s__u_5237 = ((true, snd s_5230), ()) in
   if x_1012 > 0 then bar_1011 (fst s__u_5237) set_flag_5231 0 (x_1012 - 1) else (fst s__u_5237, x_1012)
 in
 let rec foo_1013 (s_5248:(bool * bool)) (set_flag_5249:bool) (p_x_5250:int) (x_1014:int) =
   if set_flag_5249
   then
     let x_5251 = let u_5256 = if not (snd s_5248) || fst s_5248 then assert false in
                  rand_int () = 0 in
     let sp_5265 = if x_5251 then ((false, false), (x_1014)) else (s_5248, (p_x_5250)) in
     let p_x_5254 = #0 (snd sp_5265) in
     let s__u_5270 = ((fst (fst sp_5265), true), ()) in
     if x_1014 <= 0
     then
       foo_1013 (fst s__u_5270) true p_x_5254 x_1014
     else
       halt_1010 (fst s__u_5270) true p_x_5254 ()
   else
     let sp_5278 = if true then ((false, false), (x_1014)) else (s_5248, (p_x_5250)) in
     let p_x_5281 = #0 (snd sp_5278) in
     let s__u_5282 = ((fst (fst sp_5278), true), ()) in
     if x_1014 <= 0
     then
       foo_1013 (fst s__u_5282) true p_x_5281 x_1014
     else
       halt_1010 (fst s__u_5282) true p_x_5281 ()
 in
 let main_1015 (s_5290:(bool * bool)) (set_flag_5291:bool) (p_x_5292:int) (x_2043:unit) =
   let s__n_5295 = (s_5290, rand_int ()) in
   if rand_int () > 0
   then
     foo_1013 (fst s__n_5295) set_flag_5291 0 0
   else
     let s__r_bar_5301 = bar_1011 (fst s__n_5295) set_flag_5291 0 (snd s__n_5295) in
     foo_1013 (fst s__r_bar_5301) set_flag_5291 0 (snd s__r_bar_5301)
 in
 let s__r_main_5307 = main_1015 (false, false) false 0 () in
 snd s__r_main_5307

###CPS:
 (let rec halt_1010 s_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 =
    let s__u_5221 k_halt_s__u_5747 = k_halt_s__u_5747 ((fst s_5214, true), ()) in
    s__u_5221 (fun s__u_5771 -> (halt_1010 (fst s__u_5771) set_flag_5215 0) () k_halt_5743)
  in
  let rec bar_1011 s_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 =
    let s__u_5237 k_bar_s__u_5785 = k_bar_s__u_5785 ((true, snd s_5230), ()) in
    s__u_5237
      (fun s__u_5819 ->
         if x_1012 > 0
         then
           (bar_1011 (fst s__u_5819) set_flag_5231 0) (x_1012 - 1) k_bar_5781
         else
           k_bar_5781 (fst s__u_5819, x_1012))
  in
  let rec foo_1013 s_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 =
    if set_flag_5249
    then
      let x_5251 k_foo_x_5833 =
        let u_5256 k_foo_x_u_5850 =
          if not (snd s_5248)
          then
            <|fail|> () k_foo_x_u_5850
          else
            if fst s_5248 then <|fail|> () k_foo_x_u_5850 else k_foo_x_u_5850 ()
        in
        u_5256 (fun u_5867 -> rand_int_cps () (fun x_5855 -> k_foo_x_5833 (x_5855 = 0)))
      in
      x_5251
        (fun x_5949 ->
           let sp_5265 k_foo_sp_5897 =
             if x_5949
             then
               k_foo_sp_5897 ((false, false), (x_1014))
             else
               k_foo_sp_5897 (s_5248, (p_x_5250))
           in
           sp_5265
             (fun sp_5948 ->
                let s__u_5270 k_foo_s__u_5905 = k_foo_s__u_5905 ((fst (fst sp_5948), true), ()) in
                s__u_5270
                  (fun s__u_5946 ->
                     if x_1014 <= 0
                     then
                       (foo_1013 (fst s__u_5946) true (#0 (snd sp_5948))) x_1014 k_foo_5829
                     else
                       (halt_1010 (fst s__u_5946) true (#0 (snd sp_5948))) () k_foo_5829)))
    else
      let sp_5278 k_foo_sp_5979 = k_foo_sp_5979 ((false, false), (x_1014)) in
      sp_5278
        (fun sp_6030 ->
           let s__u_5282 k_foo_s__u_5987 = k_foo_s__u_5987 ((fst (fst sp_6030), true), ()) in
           s__u_5282
             (fun s__u_6028 ->
                if x_1014 <= 0
                then
                  (foo_1013 (fst s__u_6028) true (#0 (snd sp_6030))) x_1014 k_foo_5829
                else
                  (halt_1010 (fst s__u_6028) true (#0 (snd sp_6030))) () k_foo_5829))
  in
  let main_1015 s_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 =
    let s__n_5295 k_main_s__n_6048 = rand_int_cps () (fun x_6050 -> k_main_s__n_6048 (s_5290, x_6050)) in
    s__n_5295
      (fun s__n_6123 ->
         rand_int_cps
           () 
           (fun x_6065 ->
              if x_6065 > 0
              then
                (foo_1013 (fst s__n_6123) set_flag_5291 0) 0 k_main_6044
              else
                let s__r_bar_5301 k_main_s__r_bar_6099 =
                  (bar_1011 (fst s__n_6123) set_flag_5291 0) (snd s__n_6123) k_main_s__r_bar_6099
                in
                s__r_bar_5301
                  (fun s__r_bar_6118 ->
                     (foo_1013 (fst s__r_bar_6118) set_flag_5291 0) (snd s__r_bar_6118) k_main_6044)))
  in
  let s__r_main_5307 k_s__r_main_6184 = (((main_1015 (false, false)) false) 0) () k_s__r_main_6184 in
  s__r_main_5307 (fun s__r_main_6190 -> {end}) # [ACPS])

###remove_pair:
 (let rec halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 =
    halt_1010 s0_5214 true set_flag_5215 0 () k_halt_5743
  in
  let rec bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 =
    if x_1012 > 0
    then
      bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781
    else
      k_bar_5781 true s1_5230 x_1012
  in
  let rec foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 =
    if set_flag_5249
    then
      let x_5251 k_foo_x_5833 =
        let u_5256 k_foo_x_u_5850 =
          if not s1_5248
          then
            <|fail|> () k_foo_x_u_5850
          else
            if s0_5248 then <|fail|> () k_foo_x_u_5850 else k_foo_x_u_5850 ()
        in
        u_5256 (fun u_5867 -> rand_int_cps () (fun x_5855 -> k_foo_x_5833 (x_5855 = 0)))
      in
      x_5251
        (fun x_5949 ->
           let sp_5265 k_foo_sp_5897 =
             if x_5949 then k_foo_sp_5897 false false x_1014 else k_foo_sp_5897 s0_5248 s1_5248 p_x_5250
           in
           sp_5265
             (fun sp00_5948 sp01_5948 sp10_5948 ->
                if x_1014 <= 0
                then
                  foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829
                else
                  halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829))
    else
      if x_1014 <= 0
      then
        foo_1013 false true true x_1014 x_1014 k_foo_5829
      else
        halt_1010 false true true x_1014 () k_foo_5829
  in
  let main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 =
    let s__n_5295 k_main_s__n_6048 =
      rand_int_cps () (fun x_6050 -> k_main_s__n_6048 s0_5290 s1_5290 x_6050)
    in
    s__n_5295
      (fun s__n00_6123 s__n01_6123 s__n1_6123 ->
         rand_int_cps
           () 
           (fun x_6065 ->
              if x_6065 > 0
              then
                foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044
              else
                bar_1011
                  s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123 
                  (fun s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
                     foo_1013
                       s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044)))
  in
  main_1015 false false false 0 () (fun s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> {end}) #
  [ACPS])

###replace_bottom_def:
 (let rec halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 = _|_ in
  let rec bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 =
    if x_1012 > 0
    then
      bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781
    else
      k_bar_5781 true s1_5230 x_1012
  in
  let rec foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 =
    if set_flag_5249
    then
      let x_5251 k_foo_x_5833 =
        let u_5256 k_foo_x_u_5850 =
          if not s1_5248
          then
            <|fail|> () k_foo_x_u_5850
          else
            if s0_5248 then <|fail|> () k_foo_x_u_5850 else k_foo_x_u_5850 ()
        in
        u_5256 (fun u_5867 -> rand_int_cps () (fun x_5855 -> k_foo_x_5833 (x_5855 = 0)))
      in
      x_5251
        (fun x_5949 ->
           let sp_5265 k_foo_sp_5897 =
             if x_5949 then k_foo_sp_5897 false false x_1014 else k_foo_sp_5897 s0_5248 s1_5248 p_x_5250
           in
           sp_5265
             (fun sp00_5948 sp01_5948 sp10_5948 ->
                if x_1014 <= 0
                then
                  foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829
                else
                  halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829))
    else
      if x_1014 <= 0
      then
        foo_1013 false true true x_1014 x_1014 k_foo_5829
      else
        halt_1010 false true true x_1014 () k_foo_5829
  in
  let main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 =
    let s__n_5295 k_main_s__n_6048 =
      rand_int_cps () (fun x_6050 -> k_main_s__n_6048 s0_5290 s1_5290 x_6050)
    in
    s__n_5295
      (fun s__n00_6123 s__n01_6123 s__n1_6123 ->
         rand_int_cps
           () 
           (fun x_6065 ->
              if x_6065 > 0
              then
                foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044
              else
                bar_1011
                  s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123 
                  (fun s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
                     foo_1013
                       s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044)))
  in
  main_1015 false false false 0 () (fun s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 2)::
Main: main_7067
  main_7067 -> (main_1015 false false false 0 () f_7076).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (x_1012 > 0) -> (bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (not (x_1012 > 0)) -> (k_bar_5781 true s1_5230 x_1012).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when b_7078 ->
      (foo_1013 false true true x_1014 x_1014 k_foo_5829).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not b_7078) -> (halt_1010 false true true x_1014 () k_foo_5829).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when b_7080 ->
      (fail_7082 true k_foo_x_u_5850).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not b_7080) -> (k_foo_x_u_5850 ()).
  f_7076 s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> end.
  f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829 x_5949 ->
      (sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949
       (f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829)).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (x_1014 <= 0) -> (foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (not (x_1014 <= 0)) -> (halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829).
  f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044 s__n00_6123 s__n01_6123 s__n1_6123 ->
      (rand_int
       (f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044)).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (x_6065 > 0) -> (foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (not (x_6065 > 0)) ->
      (bar_1011 s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123
       (f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065
        k_main_6044)).
  f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065 k_main_6044 
  s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
      (foo_1013 s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044).
  f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 x_6050 ->
      (k_main_s__n_6048 s0_5290 s1_5290 x_6050).
  f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 u_5867 ->
      (rand_int (f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833)).
  f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833 x_5855 -> (k_foo_x_5833 (x_5855 = 0)).
  fail_7081 b k -> {fail} => (k ()).
  fail_7082 b k -> {fail} => (k ()).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when set_flag_5249 ->
      (x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829)).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not set_flag_5249) -> (br_foo_7077 (x_1014 <= 0) s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829).
  halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 -> _|_.
  main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 ->
      (s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043
       (f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044)).
  s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 ->
      (rand_int (f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048)).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when x_5949 ->
      (k_foo_sp_5897 false false x_1014).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when 
      (not x_5949) -> (k_foo_sp_5897 s0_5248 s1_5248 p_x_5250).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not s1_5248) -> (fail_7081 true k_foo_x_u_5850).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not (not s1_5248)) -> (br_u_7079 s0_5248 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850).
  x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 ->
      (u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833)).
Types:
  main_7067 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_foo_7077 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  br_u_7079 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_foo_7071 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> unit -> X) -> bool -> bool -> int -> X)
  f_main_7074 : (int -> bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_7081 : (bool -> (unit -> X) -> X)
  fail_7082 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_5265 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_5256 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_7067 ... --> 
  main_1015 ... --> 
  s__n_5295 ... --> 
  f_s__n_7072 ... --> 
  f_main_7073 ... --> 
  f_main_7074 [1/2] ... --> 
  foo_1013 [1/2] ... --> 
  x_5251 ... --> 
  u_5256 [1/2] ... --> 
  fail_7081 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 0

(2-3) Checking counterexample ... DONE!

(2-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_7067
  main_7067 -> (main_1015 false false false 0 () f_7076).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (x_1012 > 0) -> (bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (not (x_1012 > 0)) -> (k_bar_5781 true s1_5230 x_1012).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when b_7078 ->
      (foo_1013 false true true x_1014 x_1014 k_foo_5829).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not b_7078) -> (halt_1010 false true true x_1014 () k_foo_5829).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when b_7080 ->
      (fail_7082 true k_foo_x_u_5850).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not b_7080) -> (k_foo_x_u_5850 ()).
  f_7076 s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> end.
  f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829 x_5949 ->
      (sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949
       (f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829)).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (x_1014 <= 0) -> (foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (not (x_1014 <= 0)) -> (halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829).
  f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044 s__n00_6123 s__n01_6123 s__n1_6123 ->
      (rand_int
       (f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044)).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (x_6065 > 0) -> (foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (not (x_6065 > 0)) ->
      (bar_1011 s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123
       (f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065
        k_main_6044)).
  f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065 k_main_6044 
  s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
      (foo_1013 s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044).
  f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 x_6050 ->
      (k_main_s__n_6048 s0_5290 s1_5290 x_6050).
  f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 u_5867 ->
      (rand_int (f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833)).
  f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833 x_5855 -> (k_foo_x_5833 (x_5855 = 0)).
  fail_7081 b k -> {fail} => (k ()).
  fail_7082 b k -> {fail} => (k ()).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when set_flag_5249 ->
      (x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829)).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not set_flag_5249) -> (br_foo_7077 (x_1014 <= 0) s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829).
  halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 -> _|_.
  main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 ->
      (s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043
       (f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044)).
  s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 ->
      (rand_int (f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048)).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when x_5949 ->
      (k_foo_sp_5897 false false x_1014).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when 
      (not x_5949) -> (k_foo_sp_5897 s0_5248 s1_5248 p_x_5250).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not s1_5248) -> (fail_7081 true k_foo_x_u_5850).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not (not s1_5248)) -> (br_u_7079 s0_5248 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850).
  x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 ->
      (u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833)).
Types:
  main_7067 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_foo_7077 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  br_u_7079 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_foo_7071 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> unit -> X) -> bool -> bool -> int -> X)
  f_main_7074 : (int ->
                 bool ->
                 bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  fail_7081 : (bool -> (unit -> X) -> X)
  fail_7082 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  sp_5265 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_5256 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_7067 ... --> 
  main_1015 ... --> 
  s__n_5295 ... --> 
  f_s__n_7072 ... --> 
  f_main_7073 ... --> 
  f_main_7074 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  f_main_7075 ... --> 
  foo_1013 [2/2] ... --> 
  br_foo_7077 [1/2] ... --> 
  foo_1013 [1/2] ... --> 
  x_5251 ... --> 
  u_5256 [1/2] ... --> 
  fail_7081 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 1; 0; 0; 0; 0; 0

(3-3) Checking counterexample ... DONE!

(3-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 1; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 4)::
Main: main_7067
  main_7067 -> (main_1015 false false false 0 () f_7076).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (x_1012 > 0) -> (bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (not (x_1012 > 0)) -> (k_bar_5781 true s1_5230 x_1012).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when b_7078 ->
      (foo_1013 false true true x_1014 x_1014 k_foo_5829).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not b_7078) -> (halt_1010 false true true x_1014 () k_foo_5829).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when b_7080 ->
      (fail_7082 true k_foo_x_u_5850).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not b_7080) -> (k_foo_x_u_5850 ()).
  f_7076 s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> end.
  f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829 x_5949 ->
      (sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949
       (f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829)).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (x_1014 <= 0) -> (foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (not (x_1014 <= 0)) -> (halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829).
  f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044 s__n00_6123 s__n01_6123 s__n1_6123 ->
      (rand_int
       (f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044)).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (x_6065 > 0) -> (foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (not (x_6065 > 0)) ->
      (bar_1011 s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123
       (f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065
        k_main_6044)).
  f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065 k_main_6044 
  s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
      (foo_1013 s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044).
  f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 x_6050 ->
      (k_main_s__n_6048 s0_5290 s1_5290 x_6050).
  f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 u_5867 ->
      (rand_int (f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833)).
  f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833 x_5855 -> (k_foo_x_5833 (x_5855 = 0)).
  fail_7081 b k -> {fail} => (k ()).
  fail_7082 b k -> {fail} => (k ()).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when set_flag_5249 ->
      (x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829)).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not set_flag_5249) -> (br_foo_7077 (x_1014 <= 0) s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829).
  halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 -> _|_.
  main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 ->
      (s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043
       (f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044)).
  s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 ->
      (rand_int (f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048)).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when x_5949 ->
      (k_foo_sp_5897 false false x_1014).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when 
      (not x_5949) -> (k_foo_sp_5897 s0_5248 s1_5248 p_x_5250).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not s1_5248) -> (fail_7081 true k_foo_x_u_5850).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not (not s1_5248)) -> (br_u_7079 s0_5248 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850).
  x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 ->
      (u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833)).
Types:
  main_7067 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_foo_7077 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  br_u_7079 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_foo_7071 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> unit -> X) -> bool -> bool -> int -> X)
  f_main_7074 : (int ->
                 bool ->
                 bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  fail_7081 : (bool -> (unit -> X) -> X)
  fail_7082 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> x_3:bool -> x_4:bool -> int -> int[x_3; (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  sp_5265 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_5256 : (int -> bool -> x_4:bool -> bool -> int[x_4] -> (unit -> X) -> X)

(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_7067 ... --> 
  main_1015 ... --> 
  s__n_5295 ... --> 
  f_s__n_7072 ... --> 
  f_main_7073 ... --> 
  f_main_7074 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  f_main_7075 ... --> 
  foo_1013 [2/2] ... --> 
  br_foo_7077 [1/2] ... --> 
  foo_1013 [1/2] ... --> 
  x_5251 ... --> 
  u_5256 [2/2] ... --> 
  br_u_7079 [1/2] ... --> 
  fail_7082 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 1; 0; 0; 0; 1; 0; 0

(4-3) Checking counterexample ... DONE!

(4-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 1; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 5)::
Main: main_7067
  main_7067 -> (main_1015 false false false 0 () f_7076).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (x_1012 > 0) -> (bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (not (x_1012 > 0)) -> (k_bar_5781 true s1_5230 x_1012).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when b_7078 ->
      (foo_1013 false true true x_1014 x_1014 k_foo_5829).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not b_7078) -> (halt_1010 false true true x_1014 () k_foo_5829).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when b_7080 ->
      (fail_7082 true k_foo_x_u_5850).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not b_7080) -> (k_foo_x_u_5850 ()).
  f_7076 s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> end.
  f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829 x_5949 ->
      (sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949
       (f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829)).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (x_1014 <= 0) -> (foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (not (x_1014 <= 0)) -> (halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829).
  f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044 s__n00_6123 s__n01_6123 s__n1_6123 ->
      (rand_int
       (f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044)).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (x_6065 > 0) -> (foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (not (x_6065 > 0)) ->
      (bar_1011 s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123
       (f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065
        k_main_6044)).
  f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065 k_main_6044 
  s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
      (foo_1013 s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044).
  f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 x_6050 ->
      (k_main_s__n_6048 s0_5290 s1_5290 x_6050).
  f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 u_5867 ->
      (rand_int (f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833)).
  f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833 x_5855 -> (k_foo_x_5833 (x_5855 = 0)).
  fail_7081 b k -> {fail} => (k ()).
  fail_7082 b k -> {fail} => (k ()).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when set_flag_5249 ->
      (x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829)).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not set_flag_5249) -> (br_foo_7077 (x_1014 <= 0) s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829).
  halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 -> _|_.
  main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 ->
      (s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043
       (f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044)).
  s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 ->
      (rand_int (f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048)).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when x_5949 ->
      (k_foo_sp_5897 false false x_1014).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when 
      (not x_5949) -> (k_foo_sp_5897 s0_5248 s1_5248 p_x_5250).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not s1_5248) -> (fail_7081 true k_foo_x_u_5850).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not (not s1_5248)) -> (br_u_7079 s0_5248 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850).
  x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 ->
      (u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833)).
Types:
  main_7067 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_foo_7077 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  br_u_7079 : (x_2:bool -> int -> bool -> bool -> bool -> int[(not x_2)] -> (unit -> X) -> X)
  f_foo_7071 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> unit -> X) -> bool -> bool -> int -> X)
  f_main_7074 : (int ->
                 bool ->
                 bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  fail_7081 : (bool -> (unit -> X) -> X)
  fail_7082 : (bool -> (unit -> X) -> X)
  foo_1013 : (x_2:bool ->
              x_3:bool -> x_4:bool -> int -> int[(not x_2); x_3; (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  sp_5265 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_5256 : (int -> x_3:bool -> x_4:bool -> bool -> int[(not x_3); x_4] -> (unit -> X) -> X)

(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_7067 ... --> 
  main_1015 ... --> 
  s__n_5295 ... --> 
  f_s__n_7072 ... --> 
  f_main_7073 ... --> 
  f_main_7074 [1/2] ... --> 
  foo_1013 [2/2] ... --> 
  br_foo_7077 [1/2] ... --> 
  foo_1013 [1/2] ... --> 
  x_5251 ... --> 
  u_5256 [2/2] ... --> 
  br_u_7079 [2/2] ... --> 
  f_x_7068 ... --> 
  f_x_7069 ... --> 
  f_foo_7070 ... --> 
  sp_5265 [2/2] ... --> 
  f_foo_7071 [1/2] ... --> 
  foo_1013 [1/2] ... --> 
  x_5251 ... --> 
  u_5256 [2/2] ... --> 
  br_u_7079 [1/2] ... --> 
  fail_7082 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0

(5-3) Checking counterexample ... DONE!

(5-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 6)::
Main: main_7067
  main_7067 -> (main_1015 false false false 0 () f_7076).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (x_1012 > 0) -> (bar_1011 true s1_5230 set_flag_5231 0 (x_1012 - 1) k_bar_5781).
  bar_1011 s0_5230 s1_5230 set_flag_5231 p_x_5232 x_1012 k_bar_5781 when 
      (not (x_1012 > 0)) -> (k_bar_5781 true s1_5230 x_1012).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when b_7078 ->
      (foo_1013 false true true x_1014 x_1014 k_foo_5829).
  br_foo_7077 b_7078 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not b_7078) -> (halt_1010 false true true x_1014 () k_foo_5829).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when b_7080 ->
      (fail_7082 true k_foo_x_u_5850).
  br_u_7079 b_7080 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not b_7080) -> (k_foo_x_u_5850 ()).
  f_7076 s__r_main00_6190 s__r_main01_6190 s__r_main1_6190 -> end.
  f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829 x_5949 ->
      (sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949
       (f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829)).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (x_1014 <= 0) -> (foo_1013 sp00_5948 true true sp10_5948 x_1014 k_foo_5829).
  f_foo_7071 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_5829 sp00_5948 sp01_5948 sp10_5948 when 
      (not (x_1014 <= 0)) -> (halt_1010 sp00_5948 true true sp10_5948 () k_foo_5829).
  f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044 s__n00_6123 s__n01_6123 s__n1_6123 ->
      (rand_int
       (f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044)).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (x_6065 > 0) -> (foo_1013 s__n00_6123 s__n01_6123 set_flag_5291 0 0 k_main_6044).
  f_main_7074 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 k_main_6044 x_6065 when 
      (not (x_6065 > 0)) ->
      (bar_1011 s__n00_6123 s__n01_6123 set_flag_5291 0 s__n1_6123
       (f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065
        k_main_6044)).
  f_main_7075 p_x_5292 s0_5290 s1_5290 s__n00_6123 s__n01_6123 s__n1_6123 set_flag_5291 x_2043 x_6065 k_main_6044 
  s__r_bar00_6118 s__r_bar01_6118 s__r_bar1_6118 ->
      (foo_1013 s__r_bar00_6118 s__r_bar01_6118 set_flag_5291 0 s__r_bar1_6118 k_main_6044).
  f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 x_6050 ->
      (k_main_s__n_6048 s0_5290 s1_5290 x_6050).
  f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 u_5867 ->
      (rand_int (f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833)).
  f_x_7069 p_x_5250 s0_5248 s1_5248 set_flag_5249 u_5867 x_1014 k_foo_x_5833 x_5855 -> (k_foo_x_5833 (x_5855 = 0)).
  fail_7081 b k -> {fail} => (k ()).
  fail_7082 b k -> {fail} => (k ()).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when set_flag_5249 ->
      (x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_foo_7070 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_5829)).
  foo_1013 s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829 when 
      (not set_flag_5249) -> (br_foo_7077 (x_1014 <= 0) s0_5248 s1_5248 set_flag_5249 p_x_5250 x_1014 k_foo_5829).
  halt_1010 s0_5214 s1_5214 set_flag_5215 p_x_5216 x_2005 k_halt_5743 -> _|_.
  main_1015 s0_5290 s1_5290 set_flag_5291 p_x_5292 x_2043 k_main_6044 ->
      (s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043
       (f_main_7073 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_6044)).
  s__n_5295 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048 ->
      (rand_int (f_s__n_7072 p_x_5292 s0_5290 s1_5290 set_flag_5291 x_2043 k_main_s__n_6048)).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when x_5949 ->
      (k_foo_sp_5897 false false x_1014).
  sp_5265 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 x_5949 k_foo_sp_5897 when 
      (not x_5949) -> (k_foo_sp_5897 s0_5248 s1_5248 p_x_5250).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not s1_5248) -> (fail_7081 true k_foo_x_u_5850).
  u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850 when 
      (not (not s1_5248)) -> (br_u_7079 s0_5248 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_u_5850).
  x_5251 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833 ->
      (u_5256 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014
       (f_x_7068 p_x_5250 s0_5248 s1_5248 set_flag_5249 x_1014 k_foo_x_5833)).
Types:
  main_7067 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_foo_7077 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  br_u_7079 : (x_2:bool -> int -> bool -> bool -> bool -> int[(not x_2)] -> (unit -> X) -> X)
  f_foo_7071 : (int ->
                bool ->
                bool -> bool -> int -> bool -> (bool -> bool -> unit -> X) -> x_13:bool -> bool -> int[(not x_13)] -> X)
  f_main_7074 : (int ->
                 bool ->
                 bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  fail_7081 : (bool -> (unit -> X) -> X)
  fail_7082 : (bool -> (unit -> X) -> X)
  foo_1013 : (x_2:bool ->
              x_3:bool -> x_4:bool -> int -> int[(not x_2); x_3; (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  sp_5265 : (int ->
             x_3:bool -> bool -> bool -> int -> bool[(not x_3)] -> (x_9:bool -> bool -> int[(not x_9)] -> X) -> X)
  u_5256 : (int -> x_3:bool -> x_4:bool -> bool -> int[(not x_3); x_4] -> (unit[(not x_3)] -> X) -> X)

(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Safe!

###set_main:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   let s_10760 = fst s__u_10759 in
   let u_2011 = snd s__u_10759 in
   halt_1010 s_10760 set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 = let u_10776 = if not (snd s_10768) || fst s_10768 then assert false in
                   rand_int () = 0 in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10772 = fst sp_10785 in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd s_10772), ()) in
     let s_10791 = fst s__u_10790 in
     let u_2027 = snd s__u_10790 in
     if x_1012 > 0 then bar_1011 s_10791 true p_x_10774 (x_1012 - 1) else (s_10791, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10799 = fst sp_10798 in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd s_10799), ()) in
     let s_10803 = fst s__u_10802 in
     let u_10804 = snd s__u_10802 in
     if x_1012 > 0
     then
       bar_1011 s_10803 true p_x_10801 (x_1012 - 1)
     else
       (s_10803, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) 
                 (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   let s_10818 = fst s__u_10817 in
   let u_2041 = snd s__u_10817 in
   if x_1014 <= 0
   then
     foo_1013 s_10818 set_flag_10811 0 x_1014
   else
     halt_1010 s_10818 set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   let s_10834 = fst s__n_10833 in
   let t_1016 = snd s__n_10833 in
   if rand_int () > 0
   then
     foo_1013 s_10834 set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 s_10834 set_flag_10829 0 t_1016 in
     let s_10840 = fst s__r_bar_10839 in
     let r_bar_2109 = snd s__r_bar_10839 in
     foo_1013 s_10840 set_flag_10829 0 r_bar_2109
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 let s_10846 = fst s__r_main_10845 in
 let r_main_2110 = snd s__r_main_10845 in
 r_main_2110

###beta_reduce_trivial:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   let s_10760 = fst s__u_10759 in
   halt_1010 s_10760 set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 = let u_10776 = if not (snd s_10768) || fst s_10768 then assert false in
                   rand_int () = 0 in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10772 = fst sp_10785 in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd s_10772), ()) in
     let s_10791 = fst s__u_10790 in
     if x_1012 > 0 then bar_1011 s_10791 true p_x_10774 (x_1012 - 1) else (s_10791, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10799 = fst sp_10798 in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd s_10799), ()) in
     let s_10803 = fst s__u_10802 in
     if x_1012 > 0
     then
       bar_1011 s_10803 true p_x_10801 (x_1012 - 1)
     else
       (s_10803, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) 
                 (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   let s_10818 = fst s__u_10817 in
   if x_1014 <= 0
   then
     foo_1013 s_10818 set_flag_10811 0 x_1014
   else
     halt_1010 s_10818 set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   let s_10834 = fst s__n_10833 in
   let t_1016 = snd s__n_10833 in
   if rand_int () > 0
   then
     foo_1013 s_10834 set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 s_10834 set_flag_10829 0 t_1016 in
     let s_10840 = fst s__r_bar_10839 in
     let r_bar_2109 = snd s__r_bar_10839 in
     foo_1013 s_10840 set_flag_10829 0 r_bar_2109
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 let r_main_2110 = snd s__r_main_10845 in
 r_main_2110

###inline:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   halt_1010 (fst s__u_10759) set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 = let u_10776 = if not (snd s_10768) || fst s_10768 then assert false in
                   rand_int () = 0 in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd (fst sp_10785)), ()) in
     if x_1012 > 0
     then
       bar_1011 (fst s__u_10790) true p_x_10774 (x_1012 - 1)
     else
       (fst s__u_10790, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd (fst sp_10798)), ()) in
     if x_1012 > 0
     then
       bar_1011 (fst s__u_10802) true p_x_10801 (x_1012 - 1)
     else
       (fst s__u_10802, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   if x_1014 <= 0
   then
     foo_1013 (fst s__u_10817) set_flag_10811 0 x_1014
   else
     halt_1010 (fst s__u_10817) set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   if rand_int () > 0
   then
     foo_1013 (fst s__n_10833) set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 (fst s__n_10833) set_flag_10829 0 (snd s__n_10833) in
     foo_1013 (fst s__r_bar_10839) set_flag_10829 0 (snd s__r_bar_10839)
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 snd s__r_main_10845

###CPS:
 (let rec halt_1010 s_10752 set_flag_10753 p_x_10754 x_2005 k_halt_11245 =
    let s__u_10759 k_halt_s__u_11249 = k_halt_s__u_11249 ((fst s_10752, true), ()) in
    s__u_10759 (fun s__u_11273 -> (halt_1010 (fst s__u_11273) set_flag_10753 0) () k_halt_11245)
  in
  let rec bar_1011 s_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_11287 =
        let u_10776 k_bar_x_u_11304 =
          if not (snd s_10768)
          then
            <|fail|> () k_bar_x_u_11304
          else
            if fst s_10768 then <|fail|> () k_bar_x_u_11304 else k_bar_x_u_11304 ()
        in
        u_10776 (fun u_11321 -> rand_int_cps () (fun x_11309 -> k_bar_x_11287 (x_11309 = 0)))
      in
      x_10771
        (fun x_11396 ->
           let sp_10785 k_bar_sp_11351 =
             if x_11396
             then
               k_bar_sp_11351 ((false, false), (x_1012))
             else
               k_bar_sp_11351 (s_10768, (p_x_10770))
           in
           sp_10785
             (fun sp_11395 ->
                let s__u_10790 k_bar_s__u_11359 = k_bar_s__u_11359 ((true, snd (fst sp_11395)), ()) in
                s__u_10790
                  (fun s__u_11393 ->
                     if x_1012 > 0
                     then
                       (bar_1011 (fst s__u_11393) true (#0 (snd sp_11395))) (x_1012 - 1) k_bar_11283
                     else
                       k_bar_11283 (fst s__u_11393, x_1012))))
    else
      let sp_10798 k_bar_sp_11426 = k_bar_sp_11426 ((false, false), (x_1012)) in
      sp_10798
        (fun sp_11470 ->
           let s__u_10802 k_bar_s__u_11434 = k_bar_s__u_11434 ((true, snd (fst sp_11470)), ()) in
           s__u_10802
             (fun s__u_11468 ->
                if x_1012 > 0
                then
                  (bar_1011 (fst s__u_11468) true (#0 (snd sp_11470))) (x_1012 - 1) k_bar_11283
                else
                  k_bar_11283 (fst s__u_11468, x_1012)))
  in
  let rec foo_1013 s_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 =
    let s__u_10817 k_foo_s__u_11488 = k_foo_s__u_11488 ((fst s_10810, true), ()) in
    s__u_10817
      (fun s__u_11529 ->
         if x_1014 <= 0
         then
           (foo_1013 (fst s__u_11529) set_flag_10811 0) x_1014 k_foo_11484
         else
           (halt_1010 (fst s__u_11529) set_flag_10811 0) () k_foo_11484)
  in
  let main_1015 s_10828 set_flag_10829 p_x_10830 x_2043 k_main_11539 =
    let s__n_10833 k_main_s__n_11543 = rand_int_cps () (fun x_11545 -> k_main_s__n_11543 (s_10828, x_11545)) in
    s__n_10833
      (fun s__n_11618 ->
         rand_int_cps
           () 
           (fun x_11560 ->
              if x_11560 > 0
              then
                (foo_1013 (fst s__n_11618) set_flag_10829 0) 0 k_main_11539
              else
                let s__r_bar_10839 k_main_s__r_bar_11594 =
                  (bar_1011 (fst s__n_11618) set_flag_10829 0) (snd s__n_11618) k_main_s__r_bar_11594
                in
                s__r_bar_10839
                  (fun s__r_bar_11613 ->
                     (foo_1013 (fst s__r_bar_11613) set_flag_10829 0) (snd s__r_bar_11613) k_main_11539)))
  in
  let s__r_main_10845 k_s__r_main_11679 = (((main_1015 (false, false)) false) 0) () k_s__r_main_11679 in
  s__r_main_10845 (fun s__r_main_11685 -> {end}) # [ACPS])

###remove_pair:
 (let rec halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_11245 =
    halt_1010 s0_10752 true set_flag_10753 0 () k_halt_11245
  in
  let rec bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_11287 =
        let u_10776 k_bar_x_u_11304 =
          if not s1_10768
          then
            <|fail|> () k_bar_x_u_11304
          else
            if s0_10768 then <|fail|> () k_bar_x_u_11304 else k_bar_x_u_11304 ()
        in
        u_10776 (fun u_11321 -> rand_int_cps () (fun x_11309 -> k_bar_x_11287 (x_11309 = 0)))
      in
      x_10771
        (fun x_11396 ->
           let sp_10785 k_bar_sp_11351 =
             if x_11396
             then
               k_bar_sp_11351 false false x_1012
             else
               k_bar_sp_11351 s0_10768 s1_10768 p_x_10770
           in
           sp_10785
             (fun sp00_11395 sp01_11395 sp10_11395 ->
                if x_1012 > 0
                then
                  bar_1011 true sp01_11395 true sp10_11395 (x_1012 - 1) k_bar_11283
                else
                  k_bar_11283 true sp01_11395 x_1012))
    else
      if x_1012 > 0
      then
        bar_1011 true false true x_1012 (x_1012 - 1) k_bar_11283
      else
        k_bar_11283 true false x_1012
  in
  let rec foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 =
    if x_1014 <= 0
    then
      foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_11484
    else
      halt_1010 s0_10810 true set_flag_10811 0 () k_foo_11484
  in
  let main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_11539 =
    let s__n_10833 k_main_s__n_11543 =
      rand_int_cps () (fun x_11545 -> k_main_s__n_11543 s0_10828 s1_10828 x_11545)
    in
    s__n_10833
      (fun s__n00_11618 s__n01_11618 s__n1_11618 ->
         rand_int_cps
           () 
           (fun x_11560 ->
              if x_11560 > 0
              then
                foo_1013 s__n00_11618 s__n01_11618 set_flag_10829 0 0 k_main_11539
              else
                bar_1011
                  s__n00_11618 s__n01_11618 set_flag_10829 0 s__n1_11618 
                  (fun s__r_bar00_11613 s__r_bar01_11613 s__r_bar1_11613 ->
                     foo_1013 s__r_bar00_11613 s__r_bar01_11613 set_flag_10829 0 s__r_bar1_11613 k_main_11539)))
  in
  main_1015 false false false 0 () (fun s__r_main00_11685 s__r_main01_11685 s__r_main1_11685 -> {end}) # 
  [ACPS])

###replace_bottom_def:
 (let rec halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_11245 = _|_ in
  let rec bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_11287 =
        let u_10776 k_bar_x_u_11304 =
          if not s1_10768
          then
            <|fail|> () k_bar_x_u_11304
          else
            if s0_10768 then <|fail|> () k_bar_x_u_11304 else k_bar_x_u_11304 ()
        in
        u_10776 (fun u_11321 -> rand_int_cps () (fun x_11309 -> k_bar_x_11287 (x_11309 = 0)))
      in
      x_10771
        (fun x_11396 ->
           let sp_10785 k_bar_sp_11351 =
             if x_11396
             then
               k_bar_sp_11351 false false x_1012
             else
               k_bar_sp_11351 s0_10768 s1_10768 p_x_10770
           in
           sp_10785
             (fun sp00_11395 sp01_11395 sp10_11395 ->
                if x_1012 > 0
                then
                  bar_1011 true sp01_11395 true sp10_11395 (x_1012 - 1) k_bar_11283
                else
                  k_bar_11283 true sp01_11395 x_1012))
    else
      if x_1012 > 0
      then
        bar_1011 true false true x_1012 (x_1012 - 1) k_bar_11283
      else
        k_bar_11283 true false x_1012
  in
  let rec foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 =
    if x_1014 <= 0
    then
      foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_11484
    else
      halt_1010 s0_10810 true set_flag_10811 0 () k_foo_11484
  in
  let main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_11539 =
    let s__n_10833 k_main_s__n_11543 =
      rand_int_cps () (fun x_11545 -> k_main_s__n_11543 s0_10828 s1_10828 x_11545)
    in
    s__n_10833
      (fun s__n00_11618 s__n01_11618 s__n1_11618 ->
         rand_int_cps
           () 
           (fun x_11560 ->
              if x_11560 > 0
              then
                foo_1013 s__n00_11618 s__n01_11618 set_flag_10829 0 0 k_main_11539
              else
                bar_1011
                  s__n00_11618 s__n01_11618 set_flag_10829 0 s__n1_11618 
                  (fun s__r_bar00_11613 s__r_bar01_11613 s__r_bar1_11613 ->
                     foo_1013 s__r_bar00_11613 s__r_bar01_11613 set_flag_10829 0 s__r_bar1_11613 k_main_11539)))
  in
  main_1015 false false false 0 () (fun s__r_main00_11685 s__r_main01_11685 s__r_main1_11685 -> {end}) # 
  [ACPS])

Program with abstraction types (CEGAR-cycle 7)::
Main: main_12539
  main_12539 -> (main_1015 false false false 0 () f_12548).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_12542 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_11283)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when 
      (not set_flag_10769) ->
      (br_bar_12549 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283).
  br_bar_12549 b_12550 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when b_12550 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_11283).
  br_bar_12549 b_12550 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when 
      (not b_12550) -> (k_bar_11283 true false x_1012).
  br_u_12551 b_12552 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when b_12552 ->
      (fail_12554 true k_bar_x_u_11304).
  br_u_12551 b_12552 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when 
      (not b_12552) -> (k_bar_x_u_11304 ()).
  f_12548 s__r_main00_11685 s__r_main01_11685 s__r_main1_11685 -> end.
  f_bar_12542 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_11283 x_11396 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396
       (f_bar_12543 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_11283)).
  f_bar_12543 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_11283 sp00_11395 sp01_11395 sp10_11395 when 
      (x_1012 > 0) -> (bar_1011 true sp01_11395 true sp10_11395 (x_1012 - 1) k_bar_11283).
  f_bar_12543 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_11283 sp00_11395 sp01_11395 sp10_11395 when 
      (not (x_1012 > 0)) -> (k_bar_11283 true sp01_11395 x_1012).
  f_main_12545 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_11539 s__n00_11618 s__n01_11618 s__n1_11618 ->
      (rand_int
       (f_main_12546 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_2043
        k_main_11539)).
  f_main_12546 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_2043 k_main_11539 
  x_11560 when (x_11560 > 0) -> (foo_1013 s__n00_11618 s__n01_11618 set_flag_10829 0 0 k_main_11539).
  f_main_12546 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_2043 k_main_11539 
  x_11560 when (not (x_11560 > 0)) ->
      (bar_1011 s__n00_11618 s__n01_11618 set_flag_10829 0 s__n1_11618
       (f_main_12547 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_11560 x_2043
        k_main_11539)).
  f_main_12547 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_11560 x_2043 
  k_main_11539 s__r_bar00_11613 s__r_bar01_11613 s__r_bar1_11613 ->
      (foo_1013 s__r_bar00_11613 s__r_bar01_11613 set_flag_10829 0 s__r_bar1_11613 k_main_11539).
  f_s__n_12544 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_11543 x_11545 ->
      (k_main_s__n_11543 s0_10828 s1_10828 x_11545).
  f_x_12540 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_11287 u_11321 ->
      (rand_int (f_x_12541 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_11321 x_1012 k_bar_x_11287)).
  f_x_12541 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_11321 x_1012 k_bar_x_11287 x_11309 ->
      (k_bar_x_11287 (x_11309 = 0)).
  fail_12553 b k -> {fail} => (k ()).
  fail_12554 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_11484).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_11484).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_11245 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_11539 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_12545 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_11539)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_11543 ->
      (rand_int (f_s__n_12544 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_11543)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_sp_11351 when x_11396 ->
      (k_bar_sp_11351 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_sp_11351 when 
      (not x_11396) -> (k_bar_sp_11351 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when 
      (not s1_10768) -> (fail_12553 true k_bar_x_u_11304).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when 
      (not (not s1_10768)) -> (br_u_12551 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_11287 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_12540 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_11287)).
Types:
  main_12539 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_bar_12549 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_12551 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_12543 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_12546 : (int -> bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_12553 : (bool -> (unit -> X) -> X)
  fail_12554 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Error trace::
  main_12539 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_12544 ... --> 
  f_main_12545 ... --> 
  f_main_12546 [2/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  fail_12553 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0

(7-3) Checking counterexample ... DONE!

(7-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 8)::
Main: main_12539
  main_12539 -> (main_1015 false false false 0 () f_12548).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_12542 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_11283)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when 
      (not set_flag_10769) ->
      (br_bar_12549 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283).
  br_bar_12549 b_12550 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when b_12550 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_11283).
  br_bar_12549 b_12550 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_11283 when 
      (not b_12550) -> (k_bar_11283 true false x_1012).
  br_u_12551 b_12552 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when b_12552 ->
      (fail_12554 true k_bar_x_u_11304).
  br_u_12551 b_12552 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when 
      (not b_12552) -> (k_bar_x_u_11304 ()).
  f_12548 s__r_main00_11685 s__r_main01_11685 s__r_main1_11685 -> end.
  f_bar_12542 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_11283 x_11396 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396
       (f_bar_12543 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_11283)).
  f_bar_12543 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_11283 sp00_11395 sp01_11395 sp10_11395 when 
      (x_1012 > 0) -> (bar_1011 true sp01_11395 true sp10_11395 (x_1012 - 1) k_bar_11283).
  f_bar_12543 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_11283 sp00_11395 sp01_11395 sp10_11395 when 
      (not (x_1012 > 0)) -> (k_bar_11283 true sp01_11395 x_1012).
  f_main_12545 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_11539 s__n00_11618 s__n01_11618 s__n1_11618 ->
      (rand_int
       (f_main_12546 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_2043
        k_main_11539)).
  f_main_12546 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_2043 k_main_11539 
  x_11560 when (x_11560 > 0) -> (foo_1013 s__n00_11618 s__n01_11618 set_flag_10829 0 0 k_main_11539).
  f_main_12546 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_2043 k_main_11539 
  x_11560 when (not (x_11560 > 0)) ->
      (bar_1011 s__n00_11618 s__n01_11618 set_flag_10829 0 s__n1_11618
       (f_main_12547 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_11560 x_2043
        k_main_11539)).
  f_main_12547 p_x_10830 s0_10828 s1_10828 s__n00_11618 s__n01_11618 s__n1_11618 set_flag_10829 x_11560 x_2043 
  k_main_11539 s__r_bar00_11613 s__r_bar01_11613 s__r_bar1_11613 ->
      (foo_1013 s__r_bar00_11613 s__r_bar01_11613 set_flag_10829 0 s__r_bar1_11613 k_main_11539).
  f_s__n_12544 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_11543 x_11545 ->
      (k_main_s__n_11543 s0_10828 s1_10828 x_11545).
  f_x_12540 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_11287 u_11321 ->
      (rand_int (f_x_12541 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_11321 x_1012 k_bar_x_11287)).
  f_x_12541 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_11321 x_1012 k_bar_x_11287 x_11309 ->
      (k_bar_x_11287 (x_11309 = 0)).
  fail_12553 b k -> {fail} => (k ()).
  fail_12554 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_11484).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_11484 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_11484).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_11245 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_11539 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_12545 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_11539)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_11543 ->
      (rand_int (f_s__n_12544 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_11543)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_sp_11351 when x_11396 ->
      (k_bar_sp_11351 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_11396 k_bar_sp_11351 when 
      (not x_11396) -> (k_bar_sp_11351 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when 
      (not s1_10768) -> (fail_12553 true k_bar_x_u_11304).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304 when 
      (not (not s1_10768)) -> (br_u_12551 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_11304).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_11287 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_12540 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_11287)).
Types:
  main_12539 : X
  bar_1011 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_12549 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_12551 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_12543 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_12546 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  fail_12553 : (bool -> (unit -> X) -> X)
  fail_12554 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(8-1) Abstracting ... DONE!

(8-2) Checking HORS ... DONE!

Error trace::
  main_12539 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_12544 ... --> 
  f_main_12545 ... --> 
  f_main_12546 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_12549 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  fail_12553 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0

(8-3) Checking counterexample ... DONE!

(8-4) Discovering ranking function ... 
DONE!

###set_main:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   let s_10760 = fst s__u_10759 in
   let u_2011 = snd s__u_10759 in
   halt_1010 s_10760 set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 =
       let u_10776 =
         if not (snd s_10768) || fst s_10768
         then
           let u_13536 = if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then () else _|_ () in
           assert ((1 * x_1012) + 0 >= 0)
       in
       rand_int () = 0
     in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10772 = fst sp_10785 in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd s_10772), ()) in
     let s_10791 = fst s__u_10790 in
     let u_2027 = snd s__u_10790 in
     if x_1012 > 0 then bar_1011 s_10791 true p_x_10774 (x_1012 - 1) else (s_10791, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10799 = fst sp_10798 in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd s_10799), ()) in
     let s_10803 = fst s__u_10802 in
     let u_10804 = snd s__u_10802 in
     if x_1012 > 0
     then
       bar_1011 s_10803 true p_x_10801 (x_1012 - 1)
     else
       (s_10803, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) 
                 (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   let s_10818 = fst s__u_10817 in
   let u_2041 = snd s__u_10817 in
   if x_1014 <= 0
   then
     foo_1013 s_10818 set_flag_10811 0 x_1014
   else
     halt_1010 s_10818 set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) 
              (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   let s_10834 = fst s__n_10833 in
   let t_1016 = snd s__n_10833 in
   if rand_int () > 0
   then
     foo_1013 s_10834 set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 s_10834 set_flag_10829 0 t_1016 in
     let s_10840 = fst s__r_bar_10839 in
     let r_bar_2109 = snd s__r_bar_10839 in
     foo_1013 s_10840 set_flag_10829 0 r_bar_2109
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 let s_10846 = fst s__r_main_10845 in
 let r_main_2110 = snd s__r_main_10845 in
 r_main_2110

###beta_reduce_trivial:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   let s_10760 = fst s__u_10759 in
   halt_1010 s_10760 set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 =
       let u_10776 =
         if not (snd s_10768) || fst s_10768
         then
           let u_13536 = if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then () else _|_ () in
           assert ((1 * x_1012) + 0 >= 0)
       in
       rand_int () = 0
     in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10772 = fst sp_10785 in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd s_10772), ()) in
     let s_10791 = fst s__u_10790 in
     if x_1012 > 0 then bar_1011 s_10791 true p_x_10774 (x_1012 - 1) else (s_10791, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10799 = fst sp_10798 in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd s_10799), ()) in
     let s_10803 = fst s__u_10802 in
     if x_1012 > 0
     then
       bar_1011 s_10803 true p_x_10801 (x_1012 - 1)
     else
       (s_10803, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) 
                 (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   let s_10818 = fst s__u_10817 in
   if x_1014 <= 0
   then
     foo_1013 s_10818 set_flag_10811 0 x_1014
   else
     halt_1010 s_10818 set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) 
              (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   let s_10834 = fst s__n_10833 in
   let t_1016 = snd s__n_10833 in
   if rand_int () > 0
   then
     foo_1013 s_10834 set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 s_10834 set_flag_10829 0 t_1016 in
     let s_10840 = fst s__r_bar_10839 in
     let r_bar_2109 = snd s__r_bar_10839 in
     foo_1013 s_10840 set_flag_10829 0 r_bar_2109
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 let r_main_2110 = snd s__r_main_10845 in
 r_main_2110

###inline:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   halt_1010 (fst s__u_10759) set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 =
       let u_10776 =
         if not (snd s_10768) || fst s_10768
         then
           let u_13536 = if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then () else _|_ () in
           assert ((1 * x_1012) + 0 >= 0)
       in
       rand_int () = 0
     in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd (fst sp_10785)), ()) in
     if x_1012 > 0
     then
       bar_1011 (fst s__u_10790) true p_x_10774 (x_1012 - 1)
     else
       (fst s__u_10790, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd (fst sp_10798)), ()) in
     if x_1012 > 0
     then
       bar_1011 (fst s__u_10802) true p_x_10801 (x_1012 - 1)
     else
       (fst s__u_10802, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   if x_1014 <= 0
   then
     foo_1013 (fst s__u_10817) set_flag_10811 0 x_1014
   else
     halt_1010 (fst s__u_10817) set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   if rand_int () > 0
   then
     foo_1013 (fst s__n_10833) set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 (fst s__n_10833) set_flag_10829 0 (snd s__n_10833) in
     foo_1013 (fst s__r_bar_10839) set_flag_10829 0 (snd s__r_bar_10839)
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 snd s__r_main_10845

###CPS:
 (let rec halt_1010 s_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 =
    let s__u_10759 k_halt_s__u_13942 = k_halt_s__u_13942 ((fst s_10752, true), ()) in
    s__u_10759 (fun s__u_13966 -> (halt_1010 (fst s__u_13966) set_flag_10753 0) () k_halt_13938)
  in
  let rec bar_1011 s_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_13980 =
        let u_10776 k_bar_x_u_14016 =
          if not (snd s_10768)
          then
            let u_14921 k_bar_x_u_u_14922 =
              if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then k_bar_x_u_u_14922 () else _|_
            in
            u_14921
              (fun u_14929 ->
                 if (1 * x_1012) + 0 >= 0 then k_bar_x_u_14016 () else <|fail|> () k_bar_x_u_14016)
          else
            if fst s_10768
            then
              let u_14904 k_bar_x_u_u_14905 =
                if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then k_bar_x_u_u_14905 () else _|_
              in
              u_14904
                (fun u_14912 ->
                   if (1 * x_1012) + 0 >= 0
                   then
                     k_bar_x_u_14016 ()
                   else
                     <|fail|> () k_bar_x_u_14016)
            else
              k_bar_x_u_14016 ()
        in
        u_10776 (fun u_14033 -> rand_int_cps () (fun x_14021 -> k_bar_x_13980 (x_14021 = 0)))
      in
      x_10771
        (fun x_14108 ->
           let sp_10785 k_bar_sp_14063 =
             if x_14108
             then
               k_bar_sp_14063 ((false, false), (x_1012))
             else
               k_bar_sp_14063 (s_10768, (p_x_10770))
           in
           sp_10785
             (fun sp_14107 ->
                let s__u_10790 k_bar_s__u_14071 =
                  k_bar_s__u_14071 ((true, snd (fst sp_14107)), ())
                in
                s__u_10790
                  (fun s__u_14105 ->
                     if x_1012 > 0
                     then
                       (bar_1011 (fst s__u_14105) true (#0 (snd sp_14107)))
                         (x_1012 - 1) k_bar_13976
                     else
                       k_bar_13976 (fst s__u_14105, x_1012))))
    else
      let sp_10798 k_bar_sp_14138 = k_bar_sp_14138 ((false, false), (x_1012)) in
      sp_10798
        (fun sp_14182 ->
           let s__u_10802 k_bar_s__u_14146 = k_bar_s__u_14146 ((true, snd (fst sp_14182)), ()) in
           s__u_10802
             (fun s__u_14180 ->
                if x_1012 > 0
                then
                  (bar_1011 (fst s__u_14180) true (#0 (snd sp_14182))) (x_1012 - 1) k_bar_13976
                else
                  k_bar_13976 (fst s__u_14180, x_1012)))
  in
  let rec foo_1013 s_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 =
    let s__u_10817 k_foo_s__u_14200 = k_foo_s__u_14200 ((fst s_10810, true), ()) in
    s__u_10817
      (fun s__u_14241 ->
         if x_1014 <= 0
         then
           (foo_1013 (fst s__u_14241) set_flag_10811 0) x_1014 k_foo_14196
         else
           (halt_1010 (fst s__u_14241) set_flag_10811 0) () k_foo_14196)
  in
  let main_1015 s_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 =
    let s__n_10833 k_main_s__n_14255 =
      rand_int_cps () (fun x_14257 -> k_main_s__n_14255 (s_10828, x_14257))
    in
    s__n_10833
      (fun s__n_14330 ->
         rand_int_cps
           () 
           (fun x_14272 ->
              if x_14272 > 0
              then
                (foo_1013 (fst s__n_14330) set_flag_10829 0) 0 k_main_14251
              else
                let s__r_bar_10839 k_main_s__r_bar_14306 =
                  (bar_1011 (fst s__n_14330) set_flag_10829 0)
                    (snd s__n_14330) k_main_s__r_bar_14306
                in
                s__r_bar_10839
                  (fun s__r_bar_14325 ->
                     (foo_1013 (fst s__r_bar_14325) set_flag_10829 0)
                       (snd s__r_bar_14325) k_main_14251)))
  in
  let s__r_main_10845 k_s__r_main_14391 =
    (((main_1015 (false, false)) false) 0) () k_s__r_main_14391
  in
  s__r_main_10845 (fun s__r_main_14397 -> {end}) # [ACPS])

###remove_pair:
 (let rec halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 =
    halt_1010 s0_10752 true set_flag_10753 0 () k_halt_13938
  in
  let rec bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_13980 =
        let u_10776 k_bar_x_u_14016 =
          if not s1_10768
          then
            let u_14921 k_bar_x_u_u_14922 =
              if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then k_bar_x_u_u_14922 () else _|_
            in
            u_14921
              (fun u_14929 ->
                 if (1 * x_1012) + 0 >= 0 then k_bar_x_u_14016 () else <|fail|> () k_bar_x_u_14016)
          else
            if s0_10768
            then
              let u_14904 k_bar_x_u_u_14905 =
                if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then k_bar_x_u_u_14905 () else _|_
              in
              u_14904
                (fun u_14912 ->
                   if (1 * x_1012) + 0 >= 0
                   then
                     k_bar_x_u_14016 ()
                   else
                     <|fail|> () k_bar_x_u_14016)
            else
              k_bar_x_u_14016 ()
        in
        u_10776 (fun u_14033 -> rand_int_cps () (fun x_14021 -> k_bar_x_13980 (x_14021 = 0)))
      in
      x_10771
        (fun x_14108 ->
           let sp_10785 k_bar_sp_14063 =
             if x_14108
             then
               k_bar_sp_14063 false false x_1012
             else
               k_bar_sp_14063 s0_10768 s1_10768 p_x_10770
           in
           sp_10785
             (fun sp00_14107 sp01_14107 sp10_14107 ->
                if x_1012 > 0
                then
                  bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976
                else
                  k_bar_13976 true sp01_14107 x_1012))
    else
      if x_1012 > 0
      then
        bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976
      else
        k_bar_13976 true false x_1012
  in
  let rec foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 =
    if x_1014 <= 0
    then
      foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196
    else
      halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196
  in
  let main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 =
    let s__n_10833 k_main_s__n_14255 =
      rand_int_cps () (fun x_14257 -> k_main_s__n_14255 s0_10828 s1_10828 x_14257)
    in
    s__n_10833
      (fun s__n00_14330 s__n01_14330 s__n1_14330 ->
         rand_int_cps
           () 
           (fun x_14272 ->
              if x_14272 > 0
              then
                foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251
              else
                bar_1011
                  s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330 
                  (fun s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
                     foo_1013
                       s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 
                       0 s__r_bar1_14325 k_main_14251)))
  in
  main_1015
    false false false 0 () (fun s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> {end})
  # [ACPS])

###replace_bottom_def:
 (let rec halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 = _|_ in
  let rec bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_13980 =
        let u_10776 k_bar_x_u_14016 =
          if not s1_10768
          then
            let u_14921 k_bar_x_u_u_14922 =
              if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then k_bar_x_u_u_14922 () else _|_
            in
            u_14921
              (fun u_14929 ->
                 if (1 * x_1012) + 0 >= 0 then k_bar_x_u_14016 () else <|fail|> () k_bar_x_u_14016)
          else
            if s0_10768
            then
              let u_14904 k_bar_x_u_u_14905 =
                if (1 * p_x_10770) + 0 > (1 * x_1012) + 0 then k_bar_x_u_u_14905 () else _|_
              in
              u_14904
                (fun u_14912 ->
                   if (1 * x_1012) + 0 >= 0
                   then
                     k_bar_x_u_14016 ()
                   else
                     <|fail|> () k_bar_x_u_14016)
            else
              k_bar_x_u_14016 ()
        in
        u_10776 (fun u_14033 -> rand_int_cps () (fun x_14021 -> k_bar_x_13980 (x_14021 = 0)))
      in
      x_10771
        (fun x_14108 ->
           let sp_10785 k_bar_sp_14063 =
             if x_14108
             then
               k_bar_sp_14063 false false x_1012
             else
               k_bar_sp_14063 s0_10768 s1_10768 p_x_10770
           in
           sp_10785
             (fun sp00_14107 sp01_14107 sp10_14107 ->
                if x_1012 > 0
                then
                  bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976
                else
                  k_bar_13976 true sp01_14107 x_1012))
    else
      if x_1012 > 0
      then
        bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976
      else
        k_bar_13976 true false x_1012
  in
  let rec foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 =
    if x_1014 <= 0
    then
      foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196
    else
      halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196
  in
  let main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 =
    let s__n_10833 k_main_s__n_14255 =
      rand_int_cps () (fun x_14257 -> k_main_s__n_14255 s0_10828 s1_10828 x_14257)
    in
    s__n_10833
      (fun s__n00_14330 s__n01_14330 s__n1_14330 ->
         rand_int_cps
           () 
           (fun x_14272 ->
              if x_14272 > 0
              then
                foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251
              else
                bar_1011
                  s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330 
                  (fun s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
                     foo_1013
                       s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 
                       0 s__r_bar1_14325 k_main_14251)))
  in
  main_1015
    false false false 0 () (fun s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> {end})
  # [ACPS])

Program with abstraction types (CEGAR-cycle 8)::
Main: main_15313
  main_15313 -> (main_1015 false false false 0 () f_15324).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not set_flag_10769) ->
      (br_bar_15325 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when b_15326 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not b_15326) -> (k_bar_13976 true false x_1012).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when b_15328 ->
      (u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not b_15328) -> (k_bar_x_u_14016 ()).
  f_15324 s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> end.
  f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976 x_14108 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108
       (f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976)).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (x_1012 > 0) -> (bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (not (x_1012 > 0)) -> (k_bar_13976 true sp01_14107 x_1012).
  f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251 s__n00_14330 s__n01_14330 s__n1_14330 ->
      (rand_int
       (f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043
        k_main_14251)).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (x_14272 > 0) -> (foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (not (x_14272 > 0)) ->
      (bar_1011 s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330
       (f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043
        k_main_14251)).
  f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043 
  k_main_14251 s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
      (foo_1013 s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 0 s__r_bar1_14325 k_main_14251).
  f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 x_14257 ->
      (k_main_s__n_14255 s0_10828 s1_10828 x_14257).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15329 true k_bar_x_u_14016).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15330 true k_bar_x_u_14016).
  f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 u_14033 ->
      (rand_int (f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980)).
  f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980 x_14021 ->
      (k_bar_x_13980 (x_14021 = 0)).
  fail_15329 b k -> {fail} => (k ()).
  fail_15330 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 ->
      (rand_int (f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when x_14108 ->
      (k_bar_sp_14063 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when 
      (not x_14108) -> (k_bar_sp_14063 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not s1_10768) ->
      (u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not (not s1_10768)) -> (br_u_15327 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14905 ()).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14922 ()).
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980)).
Types:
  main_15313 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_bar_15325 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_15327 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_15319 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_15322 : (int -> bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  f_u_15314 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_15315 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_15329 : (bool -> (unit -> X) -> X)
  fail_15330 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14904 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14921 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(8-1) Abstracting ... DONE!

(8-2) Checking HORS ... DONE!

Error trace::
  main_15313 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_15320 ... --> 
  f_main_15321 ... --> 
  f_main_15322 [2/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_14921 [1/2] ... --> 
  f_u_15314 [2/2] ... --> 
  fail_15329 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0

(8-3) Checking counterexample ... DONE!

(8-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 9)::
Main: main_15313
  main_15313 -> (main_1015 false false false 0 () f_15324).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not set_flag_10769) ->
      (br_bar_15325 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when b_15326 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not b_15326) -> (k_bar_13976 true false x_1012).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when b_15328 ->
      (u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not b_15328) -> (k_bar_x_u_14016 ()).
  f_15324 s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> end.
  f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976 x_14108 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108
       (f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976)).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (x_1012 > 0) -> (bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (not (x_1012 > 0)) -> (k_bar_13976 true sp01_14107 x_1012).
  f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251 s__n00_14330 s__n01_14330 s__n1_14330 ->
      (rand_int
       (f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043
        k_main_14251)).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (x_14272 > 0) -> (foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (not (x_14272 > 0)) ->
      (bar_1011 s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330
       (f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043
        k_main_14251)).
  f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043 
  k_main_14251 s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
      (foo_1013 s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 0 s__r_bar1_14325 k_main_14251).
  f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 x_14257 ->
      (k_main_s__n_14255 s0_10828 s1_10828 x_14257).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15329 true k_bar_x_u_14016).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15330 true k_bar_x_u_14016).
  f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 u_14033 ->
      (rand_int (f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980)).
  f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980 x_14021 ->
      (k_bar_x_13980 (x_14021 = 0)).
  fail_15329 b k -> {fail} => (k ()).
  fail_15330 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 ->
      (rand_int (f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when x_14108 ->
      (k_bar_sp_14063 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when 
      (not x_14108) -> (k_bar_sp_14063 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not s1_10768) ->
      (u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not (not s1_10768)) -> (br_u_15327 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14905 ()).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14922 ()).
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980)).
Types:
  main_15313 : X
  bar_1011 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_15325 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_15327 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_15319 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_15322 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_15314 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_15315 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_15329 : (bool -> (unit -> X) -> X)
  fail_15330 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14904 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14921 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(9-1) Abstracting ... DONE!

(9-2) Checking HORS ... DONE!

Error trace::
  main_15313 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_15320 ... --> 
  f_main_15321 ... --> 
  f_main_15322 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_15325 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_14921 [1/2] ... --> 
  f_u_15314 [2/2] ... --> 
  fail_15329 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 1; 0

(9-3) Checking counterexample ... DONE!

(9-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 10)::
Main: main_15313
  main_15313 -> (main_1015 false false false 0 () f_15324).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not set_flag_10769) ->
      (br_bar_15325 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when b_15326 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not b_15326) -> (k_bar_13976 true false x_1012).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when b_15328 ->
      (u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not b_15328) -> (k_bar_x_u_14016 ()).
  f_15324 s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> end.
  f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976 x_14108 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108
       (f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976)).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (x_1012 > 0) -> (bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (not (x_1012 > 0)) -> (k_bar_13976 true sp01_14107 x_1012).
  f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251 s__n00_14330 s__n01_14330 s__n1_14330 ->
      (rand_int
       (f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043
        k_main_14251)).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (x_14272 > 0) -> (foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (not (x_14272 > 0)) ->
      (bar_1011 s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330
       (f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043
        k_main_14251)).
  f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043 
  k_main_14251 s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
      (foo_1013 s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 0 s__r_bar1_14325 k_main_14251).
  f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 x_14257 ->
      (k_main_s__n_14255 s0_10828 s1_10828 x_14257).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15329 true k_bar_x_u_14016).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15330 true k_bar_x_u_14016).
  f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 u_14033 ->
      (rand_int (f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980)).
  f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980 x_14021 ->
      (k_bar_x_13980 (x_14021 = 0)).
  fail_15329 b k -> {fail} => (k ()).
  fail_15330 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 ->
      (rand_int (f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when x_14108 ->
      (k_bar_sp_14063 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when 
      (not x_14108) -> (k_bar_sp_14063 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not s1_10768) ->
      (u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not (not s1_10768)) -> (br_u_15327 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14905 ()).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14922 ()).
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980)).
Types:
  main_15313 : X
  bar_1011 : (bool -> bool -> x_4:bool -> int -> x_6:int[x_6 >= 0; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_15325 : (x_2:bool ->
                  bool -> bool -> bool -> int -> x_7:int[1 <= x_7 || (not x_2)] -> (bool -> bool -> int -> X) -> X)
  br_u_15327 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_15319 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_15322 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_15314 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[x_6 >= 0] -> X)
  f_u_15315 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_15329 : (bool -> (unit -> X) -> X)
  fail_15330 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> x_6:int[x_6 >= 0] -> (unit -> X) -> X)
  u_14904 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14921 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(10-1) Abstracting ... DONE!

(10-2) Checking HORS ... DONE!

Error trace::
  main_15313 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_15320 ... --> 
  f_main_15321 ... --> 
  f_main_15322 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_15325 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [2/2] ... --> 
  br_u_15327 [1/2] ... --> 
  u_14904 [1/2] ... --> 
  f_u_15315 [2/2] ... --> 
  fail_15330 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0; 0; 1; 0

(10-3) Checking counterexample ... DONE!

(10-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 11)::
Main: main_15313
  main_15313 -> (main_1015 false false false 0 () f_15324).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not set_flag_10769) ->
      (br_bar_15325 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when b_15326 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not b_15326) -> (k_bar_13976 true false x_1012).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when b_15328 ->
      (u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not b_15328) -> (k_bar_x_u_14016 ()).
  f_15324 s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> end.
  f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976 x_14108 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108
       (f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976)).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (x_1012 > 0) -> (bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (not (x_1012 > 0)) -> (k_bar_13976 true sp01_14107 x_1012).
  f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251 s__n00_14330 s__n01_14330 s__n1_14330 ->
      (rand_int
       (f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043
        k_main_14251)).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (x_14272 > 0) -> (foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (not (x_14272 > 0)) ->
      (bar_1011 s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330
       (f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043
        k_main_14251)).
  f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043 
  k_main_14251 s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
      (foo_1013 s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 0 s__r_bar1_14325 k_main_14251).
  f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 x_14257 ->
      (k_main_s__n_14255 s0_10828 s1_10828 x_14257).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15329 true k_bar_x_u_14016).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15330 true k_bar_x_u_14016).
  f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 u_14033 ->
      (rand_int (f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980)).
  f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980 x_14021 ->
      (k_bar_x_13980 (x_14021 = 0)).
  fail_15329 b k -> {fail} => (k ()).
  fail_15330 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 ->
      (rand_int (f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when x_14108 ->
      (k_bar_sp_14063 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when 
      (not x_14108) -> (k_bar_sp_14063 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not s1_10768) ->
      (u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not (not s1_10768)) -> (br_u_15327 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14905 ()).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14922 ()).
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980)).
Types:
  main_15313 : X
  bar_1011 : (bool ->
              x_3:bool -> x_4:bool -> int -> x_6:int[(not x_3); x_6 >= 0; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_15325 : (x_2:bool ->
                  bool -> bool -> bool -> int -> x_7:int[1 <= x_7 || (not x_2)] -> (bool -> bool -> int -> X) -> X)
  br_u_15327 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_15319 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_15322 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_15314 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[x_6 >= 0] -> X)
  f_u_15315 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_15329 : (bool -> (unit -> X) -> X)
  fail_15330 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> x_4:bool -> bool -> x_6:int[(not x_4); x_6 >= 0] -> (unit -> X) -> X)
  u_14904 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14921 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(11-1) Abstracting ... DONE!

(11-2) Checking HORS ... DONE!

Error trace::
  main_15313 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_15320 ... --> 
  f_main_15321 ... --> 
  f_main_15322 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_15325 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_14921 [1/2] ... --> 
  f_u_15314 [1/2] ... --> 
  f_x_15316 ... --> 
  f_x_15317 ... --> 
  f_bar_15318 ... --> 
  sp_10785 [1/2] ... --> 
  f_bar_15319 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [2/2] ... --> 
  br_u_15327 [1/2] ... --> 
  u_14904 [1/2] ... --> 
  f_u_15315 [2/2] ... --> 
  fail_15330 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 1; 0

(11-3) Checking counterexample ... DONE!

(11-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 12)::
Main: main_15313
  main_15313 -> (main_1015 false false false 0 () f_15324).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not set_flag_10769) ->
      (br_bar_15325 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when b_15326 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not b_15326) -> (k_bar_13976 true false x_1012).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when b_15328 ->
      (u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not b_15328) -> (k_bar_x_u_14016 ()).
  f_15324 s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> end.
  f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976 x_14108 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108
       (f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976)).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (x_1012 > 0) -> (bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (not (x_1012 > 0)) -> (k_bar_13976 true sp01_14107 x_1012).
  f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251 s__n00_14330 s__n01_14330 s__n1_14330 ->
      (rand_int
       (f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043
        k_main_14251)).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (x_14272 > 0) -> (foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (not (x_14272 > 0)) ->
      (bar_1011 s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330
       (f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043
        k_main_14251)).
  f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043 
  k_main_14251 s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
      (foo_1013 s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 0 s__r_bar1_14325 k_main_14251).
  f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 x_14257 ->
      (k_main_s__n_14255 s0_10828 s1_10828 x_14257).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15329 true k_bar_x_u_14016).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15330 true k_bar_x_u_14016).
  f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 u_14033 ->
      (rand_int (f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980)).
  f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980 x_14021 ->
      (k_bar_x_13980 (x_14021 = 0)).
  fail_15329 b k -> {fail} => (k ()).
  fail_15330 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 ->
      (rand_int (f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when x_14108 ->
      (k_bar_sp_14063 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when 
      (not x_14108) -> (k_bar_sp_14063 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not s1_10768) ->
      (u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not (not s1_10768)) -> (br_u_15327 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14905 ()).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14922 ()).
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980)).
Types:
  main_15313 : X
  bar_1011 : (bool ->
              x_3:bool -> x_4:bool -> int -> x_6:int[(not x_3); x_6 >= 0; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_15325 : (x_2:bool ->
                  bool -> bool -> bool -> int -> x_7:int[1 <= x_7 || (not x_2)] -> (bool -> bool -> int -> X) -> X)
  br_u_15327 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_15319 : (int ->
                 bool ->
                 bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> x_14:bool -> int[(not x_14)] -> X)
  f_main_15322 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_15314 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[x_6 >= 0] -> X)
  f_u_15315 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_15329 : (bool -> (unit -> X) -> X)
  fail_15330 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> x_10:bool -> int[(not x_10)] -> X) -> X)
  u_10776 : (int -> bool -> x_4:bool -> bool -> x_6:int[(not x_4); x_6 >= 0] -> (unit -> X) -> X)
  u_14904 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14921 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(12-1) Abstracting ... DONE!

(12-2) Checking HORS ... DONE!

Error trace::
  main_15313 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_15320 ... --> 
  f_main_15321 ... --> 
  f_main_15322 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_15325 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_14921 [1/2] ... --> 
  f_u_15314 [1/2] ... --> 
  f_x_15316 ... --> 
  f_x_15317 ... --> 
  f_bar_15318 ... --> 
  sp_10785 [2/2] ... --> 
  f_bar_15319 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [2/2] ... --> 
  br_u_15327 [1/2] ... --> 
  u_14904 [1/2] ... --> 
  f_u_15315 [2/2] ... --> 
  fail_15330 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 1; 0

(12-3) Checking counterexample ... DONE!

(12-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 13)::
Main: main_15313
  main_15313 -> (main_1015 false false false 0 () f_15324).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not set_flag_10769) ->
      (br_bar_15325 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when b_15326 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_13976).
  br_bar_15325 b_15326 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_13976 when 
      (not b_15326) -> (k_bar_13976 true false x_1012).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when b_15328 ->
      (u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  br_u_15327 b_15328 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not b_15328) -> (k_bar_x_u_14016 ()).
  f_15324 s__r_main00_14397 s__r_main01_14397 s__r_main1_14397 -> end.
  f_bar_15318 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_13976 x_14108 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108
       (f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976)).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (x_1012 > 0) -> (bar_1011 true sp01_14107 true sp10_14107 (x_1012 - 1) k_bar_13976).
  f_bar_15319 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_13976 sp00_14107 sp01_14107 sp10_14107 when 
      (not (x_1012 > 0)) -> (k_bar_13976 true sp01_14107 x_1012).
  f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251 s__n00_14330 s__n01_14330 s__n1_14330 ->
      (rand_int
       (f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043
        k_main_14251)).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (x_14272 > 0) -> (foo_1013 s__n00_14330 s__n01_14330 set_flag_10829 0 0 k_main_14251).
  f_main_15322 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_2043 k_main_14251 
  x_14272 when (not (x_14272 > 0)) ->
      (bar_1011 s__n00_14330 s__n01_14330 set_flag_10829 0 s__n1_14330
       (f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043
        k_main_14251)).
  f_main_15323 p_x_10830 s0_10828 s1_10828 s__n00_14330 s__n01_14330 s__n1_14330 set_flag_10829 x_14272 x_2043 
  k_main_14251 s__r_bar00_14325 s__r_bar01_14325 s__r_bar1_14325 ->
      (foo_1013 s__r_bar00_14325 s__r_bar01_14325 set_flag_10829 0 s__r_bar1_14325 k_main_14251).
  f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 x_14257 ->
      (k_main_s__n_14255 s0_10828 s1_10828 x_14257).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14929 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15329 true k_bar_x_u_14016).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_14016 ()).
  f_u_15315 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 u_14912 when 
      (not (((1 * x_1012) + 0) >= 0)) -> (fail_15330 true k_bar_x_u_14016).
  f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 u_14033 ->
      (rand_int (f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980)).
  f_x_15317 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_14033 x_1012 k_bar_x_13980 x_14021 ->
      (k_bar_x_13980 (x_14021 = 0)).
  fail_15329 b k -> {fail} => (k ()).
  fail_15330 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_14196).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_14196 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_14196).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_13938 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_14251 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_15321 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_14251)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255 ->
      (rand_int (f_s__n_15320 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_14255)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when x_14108 ->
      (k_bar_sp_14063 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_14108 k_bar_sp_14063 when 
      (not x_14108) -> (k_bar_sp_14063 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not s1_10768) ->
      (u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_15314 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016 when 
      (not (not s1_10768)) -> (br_u_15327 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_14016).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14905 ()).
  u_14904 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14905 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_14922 ()).
  u_14921 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_14922 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> _|_.
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_15316 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_13980)).
Types:
  main_15313 : X
  bar_1011 : (bool ->
              x_3:bool -> x_4:bool -> int -> x_6:int[(not x_3); x_6 >= 0; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_15325 : (x_2:bool ->
                  bool -> bool -> bool -> int -> x_7:int[1 <= x_7 || (not x_2)] -> (bool -> bool -> int -> X) -> X)
  br_u_15327 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_15319 : (int ->
                 bool ->
                 bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> x_14:bool -> int[(not x_14)] -> X)
  f_main_15322 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_15314 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[x_6 >= 0] -> X)
  f_u_15315 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_15329 : (bool -> (unit -> X) -> X)
  fail_15330 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int ->
              bool -> x_4:bool -> bool -> int -> bool[(not x_4)] -> (bool -> x_10:bool -> int[(not x_10)] -> X) -> X)
  u_10776 : (int -> bool -> x_4:bool -> bool -> x_6:int[(not x_4); x_6 >= 0] -> (unit[(not x_4)] -> X) -> X)
  u_14904 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_14921 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(13-1) Abstracting ... DONE!

(13-2) Checking HORS ... DONE!

Safe!

###set_main:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   let s_10760 = fst s__u_10759 in
   let u_2011 = snd s__u_10759 in
   halt_1010 s_10760 set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 =
       let u_10776 =
         if not (snd s_10768) || fst s_10768
         then
           let u_13536 = assert ((1 * p_x_10770) + 0 > (1 * x_1012) + 0) in
           if (1 * x_1012) + 0 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10772 = fst sp_10785 in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd s_10772), ()) in
     let s_10791 = fst s__u_10790 in
     let u_2027 = snd s__u_10790 in
     if x_1012 > 0 then bar_1011 s_10791 true p_x_10774 (x_1012 - 1) else (s_10791, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10799 = fst sp_10798 in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd s_10799), ()) in
     let s_10803 = fst s__u_10802 in
     let u_10804 = snd s__u_10802 in
     if x_1012 > 0
     then
       bar_1011 s_10803 true p_x_10801 (x_1012 - 1)
     else
       (s_10803, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) 
                 (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   let s_10818 = fst s__u_10817 in
   let u_2041 = snd s__u_10817 in
   if x_1014 <= 0
   then
     foo_1013 s_10818 set_flag_10811 0 x_1014
   else
     halt_1010 s_10818 set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) 
              (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   let s_10834 = fst s__n_10833 in
   let t_1016 = snd s__n_10833 in
   if rand_int () > 0
   then
     foo_1013 s_10834 set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 s_10834 set_flag_10829 0 t_1016 in
     let s_10840 = fst s__r_bar_10839 in
     let r_bar_2109 = snd s__r_bar_10839 in
     foo_1013 s_10840 set_flag_10829 0 r_bar_2109
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 let s_10846 = fst s__r_main_10845 in
 let r_main_2110 = snd s__r_main_10845 in
 r_main_2110

###beta_reduce_trivial:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   let s_10760 = fst s__u_10759 in
   halt_1010 s_10760 set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 =
       let u_10776 =
         if not (snd s_10768) || fst s_10768
         then
           let u_13536 = assert ((1 * p_x_10770) + 0 > (1 * x_1012) + 0) in
           if (1 * x_1012) + 0 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10772 = fst sp_10785 in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd s_10772), ()) in
     let s_10791 = fst s__u_10790 in
     if x_1012 > 0 then bar_1011 s_10791 true p_x_10774 (x_1012 - 1) else (s_10791, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let s_10799 = fst sp_10798 in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd s_10799), ()) in
     let s_10803 = fst s__u_10802 in
     if x_1012 > 0
     then
       bar_1011 s_10803 true p_x_10801 (x_1012 - 1)
     else
       (s_10803, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) 
                 (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   let s_10818 = fst s__u_10817 in
   if x_1014 <= 0
   then
     foo_1013 s_10818 set_flag_10811 0 x_1014
   else
     halt_1010 s_10818 set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) 
              (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   let s_10834 = fst s__n_10833 in
   let t_1016 = snd s__n_10833 in
   if rand_int () > 0
   then
     foo_1013 s_10834 set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 s_10834 set_flag_10829 0 t_1016 in
     let s_10840 = fst s__r_bar_10839 in
     let r_bar_2109 = snd s__r_bar_10839 in
     foo_1013 s_10840 set_flag_10829 0 r_bar_2109
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 let r_main_2110 = snd s__r_main_10845 in
 r_main_2110

###inline:
 let rec halt_1010 (s_10752:(bool * bool)) (set_flag_10753:bool) (p_x_10754:int) (x_2005:unit) =
   let s__u_10759 = ((fst s_10752, true), ()) in
   halt_1010 (fst s__u_10759) set_flag_10753 0 ()
 in
 let rec bar_1011 (s_10768:(bool * bool)) (set_flag_10769:bool) (p_x_10770:int) (x_1012:int) =
   if set_flag_10769
   then
     let x_10771 =
       let u_10776 =
         if not (snd s_10768) || fst s_10768
         then
           let u_13536 = assert ((1 * p_x_10770) + 0 > (1 * x_1012) + 0) in
           if (1 * x_1012) + 0 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     in
     let sp_10785 = if x_10771 then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let p_x_10774 = #0 (snd sp_10785) in
     let s__u_10790 = ((true, snd (fst sp_10785)), ()) in
     if x_1012 > 0
     then
       bar_1011 (fst s__u_10790) true p_x_10774 (x_1012 - 1)
     else
       (fst s__u_10790, x_1012)
   else
     let sp_10798 = if true then ((false, false), (x_1012)) else (s_10768, (p_x_10770)) in
     let p_x_10801 = #0 (snd sp_10798) in
     let s__u_10802 = ((true, snd (fst sp_10798)), ()) in
     if x_1012 > 0
     then
       bar_1011 (fst s__u_10802) true p_x_10801 (x_1012 - 1)
     else
       (fst s__u_10802, x_1012)
 in
 let rec foo_1013 (s_10810:(bool * bool)) (set_flag_10811:bool) (p_x_10812:int) (x_1014:int) =
   let s__u_10817 = ((fst s_10810, true), ()) in
   if x_1014 <= 0
   then
     foo_1013 (fst s__u_10817) set_flag_10811 0 x_1014
   else
     halt_1010 (fst s__u_10817) set_flag_10811 0 ()
 in
 let main_1015 (s_10828:(bool * bool)) (set_flag_10829:bool) (p_x_10830:int) (x_2043:unit) =
   let s__n_10833 = (s_10828, rand_int ()) in
   if rand_int () > 0
   then
     foo_1013 (fst s__n_10833) set_flag_10829 0 0
   else
     let s__r_bar_10839 = bar_1011 (fst s__n_10833) set_flag_10829 0 (snd s__n_10833) in
     foo_1013 (fst s__r_bar_10839) set_flag_10829 0 (snd s__r_bar_10839)
 in
 let s__r_main_10845 = main_1015 (false, false) false 0 () in
 snd s__r_main_10845

###CPS:
 (let rec halt_1010 s_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 =
    let s__u_10759 k_halt_s__u_20646 = k_halt_s__u_20646 ((fst s_10752, true), ()) in
    s__u_10759 (fun s__u_20670 -> (halt_1010 (fst s__u_20670) set_flag_10753 0) () k_halt_20642)
  in
  let rec bar_1011 s_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_20684 =
        let u_10776 k_bar_x_u_20720 =
          if not (snd s_10768)
          then
            let u_21625 k_bar_x_u_u_21626 =
              if (1 * p_x_10770) + 0 > (1 * x_1012) + 0
              then
                k_bar_x_u_u_21626 ()
              else
                <|fail|> () k_bar_x_u_u_21626
            in
            u_21625 (fun u_21632 -> if (1 * x_1012) + 0 >= 0 then k_bar_x_u_20720 () else _|_)
          else
            if fst s_10768
            then
              let u_21608 k_bar_x_u_u_21609 =
                if (1 * p_x_10770) + 0 > (1 * x_1012) + 0
                then
                  k_bar_x_u_u_21609 ()
                else
                  <|fail|> () k_bar_x_u_u_21609
              in
              u_21608 (fun u_21615 -> if (1 * x_1012) + 0 >= 0 then k_bar_x_u_20720 () else _|_)
            else
              k_bar_x_u_20720 ()
        in
        u_10776 (fun u_20737 -> rand_int_cps () (fun x_20725 -> k_bar_x_20684 (x_20725 = 0)))
      in
      x_10771
        (fun x_20812 ->
           let sp_10785 k_bar_sp_20767 =
             if x_20812
             then
               k_bar_sp_20767 ((false, false), (x_1012))
             else
               k_bar_sp_20767 (s_10768, (p_x_10770))
           in
           sp_10785
             (fun sp_20811 ->
                let s__u_10790 k_bar_s__u_20775 = k_bar_s__u_20775 ((true, snd (fst sp_20811)), ()) in
                s__u_10790
                  (fun s__u_20809 ->
                     if x_1012 > 0
                     then
                       (bar_1011 (fst s__u_20809) true (#0 (snd sp_20811))) (x_1012 - 1) k_bar_20680
                     else
                       k_bar_20680 (fst s__u_20809, x_1012))))
    else
      let sp_10798 k_bar_sp_20842 = k_bar_sp_20842 ((false, false), (x_1012)) in
      sp_10798
        (fun sp_20886 ->
           let s__u_10802 k_bar_s__u_20850 = k_bar_s__u_20850 ((true, snd (fst sp_20886)), ()) in
           s__u_10802
             (fun s__u_20884 ->
                if x_1012 > 0
                then
                  (bar_1011 (fst s__u_20884) true (#0 (snd sp_20886))) (x_1012 - 1) k_bar_20680
                else
                  k_bar_20680 (fst s__u_20884, x_1012)))
  in
  let rec foo_1013 s_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 =
    let s__u_10817 k_foo_s__u_20904 = k_foo_s__u_20904 ((fst s_10810, true), ()) in
    s__u_10817
      (fun s__u_20945 ->
         if x_1014 <= 0
         then
           (foo_1013 (fst s__u_20945) set_flag_10811 0) x_1014 k_foo_20900
         else
           (halt_1010 (fst s__u_20945) set_flag_10811 0) () k_foo_20900)
  in
  let main_1015 s_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 =
    let s__n_10833 k_main_s__n_20959 =
      rand_int_cps () (fun x_20961 -> k_main_s__n_20959 (s_10828, x_20961))
    in
    s__n_10833
      (fun s__n_21034 ->
         rand_int_cps
           () 
           (fun x_20976 ->
              if x_20976 > 0
              then
                (foo_1013 (fst s__n_21034) set_flag_10829 0) 0 k_main_20955
              else
                let s__r_bar_10839 k_main_s__r_bar_21010 =
                  (bar_1011 (fst s__n_21034) set_flag_10829 0) (snd s__n_21034) k_main_s__r_bar_21010
                in
                s__r_bar_10839
                  (fun s__r_bar_21029 ->
                     (foo_1013 (fst s__r_bar_21029) set_flag_10829 0) (snd s__r_bar_21029) k_main_20955)))
  in
  let s__r_main_10845 k_s__r_main_21095 = (((main_1015 (false, false)) false) 0) () k_s__r_main_21095 in
  s__r_main_10845 (fun s__r_main_21101 -> {end}) # [ACPS])

###remove_pair:
 (let rec halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 =
    halt_1010 s0_10752 true set_flag_10753 0 () k_halt_20642
  in
  let rec bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_20684 =
        let u_10776 k_bar_x_u_20720 =
          if not s1_10768
          then
            let u_21625 k_bar_x_u_u_21626 =
              if (1 * p_x_10770) + 0 > (1 * x_1012) + 0
              then
                k_bar_x_u_u_21626 ()
              else
                <|fail|> () k_bar_x_u_u_21626
            in
            u_21625 (fun u_21632 -> if (1 * x_1012) + 0 >= 0 then k_bar_x_u_20720 () else _|_)
          else
            if s0_10768
            then
              let u_21608 k_bar_x_u_u_21609 =
                if (1 * p_x_10770) + 0 > (1 * x_1012) + 0
                then
                  k_bar_x_u_u_21609 ()
                else
                  <|fail|> () k_bar_x_u_u_21609
              in
              u_21608 (fun u_21615 -> if (1 * x_1012) + 0 >= 0 then k_bar_x_u_20720 () else _|_)
            else
              k_bar_x_u_20720 ()
        in
        u_10776 (fun u_20737 -> rand_int_cps () (fun x_20725 -> k_bar_x_20684 (x_20725 = 0)))
      in
      x_10771
        (fun x_20812 ->
           let sp_10785 k_bar_sp_20767 =
             if x_20812
             then
               k_bar_sp_20767 false false x_1012
             else
               k_bar_sp_20767 s0_10768 s1_10768 p_x_10770
           in
           sp_10785
             (fun sp00_20811 sp01_20811 sp10_20811 ->
                if x_1012 > 0
                then
                  bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680
                else
                  k_bar_20680 true sp01_20811 x_1012))
    else
      if x_1012 > 0
      then
        bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680
      else
        k_bar_20680 true false x_1012
  in
  let rec foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 =
    if x_1014 <= 0
    then
      foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900
    else
      halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900
  in
  let main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 =
    let s__n_10833 k_main_s__n_20959 =
      rand_int_cps () (fun x_20961 -> k_main_s__n_20959 s0_10828 s1_10828 x_20961)
    in
    s__n_10833
      (fun s__n00_21034 s__n01_21034 s__n1_21034 ->
         rand_int_cps
           () 
           (fun x_20976 ->
              if x_20976 > 0
              then
                foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955
              else
                bar_1011
                  s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034 
                  (fun s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
                     foo_1013
                       s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955)))
  in
  main_1015 false false false 0 () (fun s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> {end})
  # [ACPS])

###replace_bottom_def:
 (let rec halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 = _|_ in
  let rec bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 =
    if set_flag_10769
    then
      let x_10771 k_bar_x_20684 =
        let u_10776 k_bar_x_u_20720 =
          if not s1_10768
          then
            let u_21625 k_bar_x_u_u_21626 =
              if (1 * p_x_10770) + 0 > (1 * x_1012) + 0
              then
                k_bar_x_u_u_21626 ()
              else
                <|fail|> () k_bar_x_u_u_21626
            in
            u_21625 (fun u_21632 -> if (1 * x_1012) + 0 >= 0 then k_bar_x_u_20720 () else _|_)
          else
            if s0_10768
            then
              let u_21608 k_bar_x_u_u_21609 =
                if (1 * p_x_10770) + 0 > (1 * x_1012) + 0
                then
                  k_bar_x_u_u_21609 ()
                else
                  <|fail|> () k_bar_x_u_u_21609
              in
              u_21608 (fun u_21615 -> if (1 * x_1012) + 0 >= 0 then k_bar_x_u_20720 () else _|_)
            else
              k_bar_x_u_20720 ()
        in
        u_10776 (fun u_20737 -> rand_int_cps () (fun x_20725 -> k_bar_x_20684 (x_20725 = 0)))
      in
      x_10771
        (fun x_20812 ->
           let sp_10785 k_bar_sp_20767 =
             if x_20812
             then
               k_bar_sp_20767 false false x_1012
             else
               k_bar_sp_20767 s0_10768 s1_10768 p_x_10770
           in
           sp_10785
             (fun sp00_20811 sp01_20811 sp10_20811 ->
                if x_1012 > 0
                then
                  bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680
                else
                  k_bar_20680 true sp01_20811 x_1012))
    else
      if x_1012 > 0
      then
        bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680
      else
        k_bar_20680 true false x_1012
  in
  let rec foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 =
    if x_1014 <= 0
    then
      foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900
    else
      halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900
  in
  let main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 =
    let s__n_10833 k_main_s__n_20959 =
      rand_int_cps () (fun x_20961 -> k_main_s__n_20959 s0_10828 s1_10828 x_20961)
    in
    s__n_10833
      (fun s__n00_21034 s__n01_21034 s__n1_21034 ->
         rand_int_cps
           () 
           (fun x_20976 ->
              if x_20976 > 0
              then
                foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955
              else
                bar_1011
                  s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034 
                  (fun s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
                     foo_1013
                       s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955)))
  in
  main_1015 false false false 0 () (fun s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> {end})
  # [ACPS])

Program with abstraction types (CEGAR-cycle 14)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_22026 : (int -> bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(14-1) Abstracting ... DONE!

(14-2) Checking HORS ... DONE!

Error trace::
  main_22017 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_22024 ... --> 
  f_main_22025 ... --> 
  f_main_22026 [2/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [2/2] ... --> 
  fail_22033 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0

(14-3) Checking counterexample ... DONE!

(14-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 15)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_22026 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)

(15-1) Abstracting ... DONE!

(15-2) Checking HORS ... DONE!

Error trace::
  main_22017 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_22024 ... --> 
  f_main_22025 ... --> 
  f_main_22026 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_22029 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [2/2] ... --> 
  fail_22033 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 1; 0

(15-3) Checking counterexample ... DONE!

(15-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 16)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool ->
              bool -> x_4:bool -> x_5:int -> x_6:int[1 <= x_5 - x_6; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_22026 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (x_2:int -> bool -> bool -> bool -> x_6:int[1 <= x_2 - x_6] -> (unit -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (x_2:int -> bool -> bool -> bool -> x_6:int[1 <= x_2 - x_6] -> (unit -> X) -> X)

(16-1) Abstracting ... DONE!

(16-2) Checking HORS ... DONE!

Error trace::
  main_22017 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_22024 ... --> 
  f_main_22025 ... --> 
  f_main_22026 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_22029 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [2/2] ... --> 
  br_u_22031 [1/2] ... --> 
  u_21608 [2/2] ... --> 
  fail_22034 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0; 1; 0

(16-3) Checking counterexample ... DONE!

(16-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 17)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool ->
              x_3:bool ->
              x_4:bool -> x_5:int -> x_6:int[(not x_3); 1 <= x_5 - x_6; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_main_22026 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_10776 : (x_2:int -> bool -> x_4:bool -> bool -> x_6:int[(not x_4); 1 <= x_2 - x_6] -> (unit -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (x_2:int -> bool -> bool -> bool -> x_6:int[1 <= x_2 - x_6] -> (unit -> X) -> X)

(17-1) Abstracting ... DONE!

(17-2) Checking HORS ... DONE!

Error trace::
  main_22017 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_22024 ... --> 
  f_main_22025 ... --> 
  f_main_22026 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_22029 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [1/2] ... --> 
  f_u_22018 [1/2] ... --> 
  f_x_22020 ... --> 
  f_x_22021 ... --> 
  f_bar_22022 ... --> 
  sp_10785 [1/2] ... --> 
  f_bar_22023 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [2/2] ... --> 
  fail_22033 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(17-3) Checking counterexample ... DONE!

(17-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 18)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool ->
              x_3:bool ->
              x_4:bool -> x_5:int -> x_6:int[(not x_3); 1 <= x_5 - x_6; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int ->
                 bool ->
                 bool ->
                 bool -> x_6:int -> bool -> (bool -> bool -> int -> X) -> bool -> bool -> x_15:int[x_15 >= x_6] -> X)
  f_main_22026 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (int -> bool -> bool -> bool -> x_6:int -> bool -> (bool -> bool -> x_11:int[x_11 >= x_6] -> X) -> X)
  u_10776 : (x_2:int -> bool -> x_4:bool -> bool -> x_6:int[(not x_4); 1 <= x_2 - x_6] -> (unit -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (x_2:int -> bool -> bool -> bool -> x_6:int[1 <= x_2 - x_6] -> (unit -> X) -> X)

(18-1) Abstracting ... DONE!

(18-2) Checking HORS ... DONE!

Error trace::
  main_22017 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_22024 ... --> 
  f_main_22025 ... --> 
  f_main_22026 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_22029 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [1/2] ... --> 
  f_u_22018 [1/2] ... --> 
  f_x_22020 ... --> 
  f_x_22021 ... --> 
  f_bar_22022 ... --> 
  sp_10785 [2/2] ... --> 
  f_bar_22023 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [2/2] ... --> 
  fail_22033 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0

(18-3) Checking counterexample ... DONE!

(18-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 19)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool ->
              x_3:bool ->
              x_4:bool ->
              x_5:int ->
              x_6:int[2 <= x_5 - x_6; (not x_3); 1 <= x_5 - x_6; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 x_6:int ->
                 bool -> (bool -> bool -> int -> X) -> bool -> bool -> x_15:int[1 <= -x_6 + x_15; x_15 >= x_6] -> X)
  f_main_22026 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (x_2:int ->
              bool ->
              bool ->
              bool ->
              x_6:int -> bool[1 <= x_2 - x_6] -> (bool -> bool -> x_11:int[1 <= -x_6 + x_11; x_11 >= x_6] -> X) -> X)
  u_10776 : (x_2:int ->
             bool ->
             x_4:bool -> bool -> x_6:int[2 <= x_2 - x_6; (not x_4); 1 <= x_2 - x_6] -> (unit[1 <= x_2 - x_6] -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6; 1 <= x_2 - x_6] -> (unit -> X) -> X)

(19-1) Abstracting ... DONE!

(19-2) Checking HORS ... DONE!

Error trace::
  main_22017 ... --> 
  main_1015 ... --> 
  s__n_10833 ... --> 
  f_s__n_22024 ... --> 
  f_main_22025 ... --> 
  f_main_22026 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  br_bar_22029 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [1/2] ... --> 
  u_21625 [1/2] ... --> 
  f_u_22018 [1/2] ... --> 
  f_x_22020 ... --> 
  f_x_22021 ... --> 
  f_bar_22022 ... --> 
  sp_10785 [2/2] ... --> 
  f_bar_22023 [1/2] ... --> 
  bar_1011 [1/2] ... --> 
  x_10771 ... --> 
  u_10776 [2/2] ... --> 
  br_u_22031 [1/2] ... --> 
  u_21608 [2/2] ... --> 
  fail_22034 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 1; 0

(19-3) Checking counterexample ... DONE!

(19-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 20)::
Main: main_22017
  main_22017 -> (main_1015 false false false 0 () f_22028).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when set_flag_10769 ->
      (x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680)).
  bar_1011 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not set_flag_10769) ->
      (br_bar_22029 (x_1012 > 0) s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when b_22030 ->
      (bar_1011 true false true x_1012 (x_1012 - 1) k_bar_20680).
  br_bar_22029 b_22030 s0_10768 s1_10768 set_flag_10769 p_x_10770 x_1012 k_bar_20680 when 
      (not b_22030) -> (k_bar_20680 true false x_1012).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when b_22032 ->
      (u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  br_u_22031 b_22032 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not b_22032) -> (k_bar_x_u_20720 ()).
  f_22028 s__r_main00_21101 s__r_main01_21101 s__r_main1_21101 -> end.
  f_bar_22022 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_20680 x_20812 ->
      (sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812
       (f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680)).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (x_1012 > 0) -> (bar_1011 true sp01_20811 true sp10_20811 (x_1012 - 1) k_bar_20680).
  f_bar_22023 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_20680 sp00_20811 sp01_20811 sp10_20811 when 
      (not (x_1012 > 0)) -> (k_bar_20680 true sp01_20811 x_1012).
  f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955 s__n00_21034 s__n01_21034 s__n1_21034 ->
      (rand_int
       (f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043
        k_main_20955)).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (x_20976 > 0) -> (foo_1013 s__n00_21034 s__n01_21034 set_flag_10829 0 0 k_main_20955).
  f_main_22026 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 k_main_20955 
  x_20976 when (not (x_20976 > 0)) ->
      (bar_1011 s__n00_21034 s__n01_21034 set_flag_10829 0 s__n1_21034
       (f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976
        k_main_20955)).
  f_main_22027 p_x_10830 s0_10828 s1_10828 s__n00_21034 s__n01_21034 s__n1_21034 set_flag_10829 x_2043 x_20976 
  k_main_20955 s__r_bar00_21029 s__r_bar01_21029 s__r_bar1_21029 ->
      (foo_1013 s__r_bar00_21029 s__r_bar01_21029 set_flag_10829 0 s__r_bar1_21029 k_main_20955).
  f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 x_20961 ->
      (k_main_s__n_20959 s0_10828 s1_10828 x_20961).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21632 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (((1 * x_1012) + 0) >= 0) -> (k_bar_x_u_20720 ()).
  f_u_22019 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 u_21615 when 
      (not (((1 * x_1012) + 0) >= 0)) -> _|_.
  f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 u_20737 ->
      (rand_int (f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684)).
  f_x_22021 p_x_10770 s0_10768 s1_10768 set_flag_10769 u_20737 x_1012 k_bar_x_20684 x_20725 ->
      (k_bar_x_20684 (x_20725 = 0)).
  fail_22033 b k -> {fail} => (k ()).
  fail_22034 b k -> {fail} => (k ()).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (x_1014 <= 0) -> (foo_1013 s0_10810 true set_flag_10811 0 x_1014 k_foo_20900).
  foo_1013 s0_10810 s1_10810 set_flag_10811 p_x_10812 x_1014 k_foo_20900 when 
      (not (x_1014 <= 0)) -> (halt_1010 s0_10810 true set_flag_10811 0 () k_foo_20900).
  halt_1010 s0_10752 s1_10752 set_flag_10753 p_x_10754 x_2005 k_halt_20642 -> _|_.
  main_1015 s0_10828 s1_10828 set_flag_10829 p_x_10830 x_2043 k_main_20955 ->
      (s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043
       (f_main_22025 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_20955)).
  s__n_10833 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959 ->
      (rand_int (f_s__n_22024 p_x_10830 s0_10828 s1_10828 set_flag_10829 x_2043 k_main_s__n_20959)).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when x_20812 ->
      (k_bar_sp_20767 false false x_1012).
  sp_10785 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 x_20812 k_bar_sp_20767 when 
      (not x_20812) -> (k_bar_sp_20767 s0_10768 s1_10768 p_x_10770).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not s1_10768) ->
      (u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_u_22018 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720)).
  u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720 when 
      (not (not s1_10768)) -> (br_u_22031 s0_10768 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_20720).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21609 ()).
  u_21608 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21609 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22034 true k_bar_x_u_u_21609).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0)) -> (k_bar_x_u_u_21626 ()).
  u_21625 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_u_u_21626 when 
      (not (((1 * p_x_10770) + 0) > ((1 * x_1012) + 0))) -> (fail_22033 true k_bar_x_u_u_21626).
  x_10771 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684 ->
      (u_10776 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012
       (f_x_22020 p_x_10770 s0_10768 s1_10768 set_flag_10769 x_1012 k_bar_x_20684)).
Types:
  main_22017 : X
  bar_1011 : (bool ->
              x_3:bool ->
              x_4:bool ->
              x_5:int ->
              x_6:int[2 <= x_5 - x_6; (not x_3); 1 <= x_5 - x_6; (not x_4)] -> (bool -> bool -> int -> X) -> X)
  br_bar_22029 : (bool -> bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_u_22031 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_bar_22023 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 x_6:int ->
                 bool ->
                 (bool -> bool -> int -> X) ->
                 bool -> x_14:bool -> x_15:int[(not x_14); 1 <= -x_6 + x_15; x_15 >= x_6] -> X)
  f_main_22026 : (int ->
                  bool ->
                  bool -> bool -> bool -> int -> x_8:bool -> unit -> (bool -> bool -> unit -> X) -> int[(not x_8)] -> X)
  f_u_22018 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  f_u_22019 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_22033 : (bool -> (unit -> X) -> X)
  fail_22034 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  sp_10785 : (x_2:int ->
              bool ->
              x_4:bool ->
              bool ->
              x_6:int ->
              bool[(not x_4); 1 <= x_2 - x_6] ->
              (bool -> x_10:bool -> x_11:int[(not x_10); 1 <= -x_6 + x_11; x_11 >= x_6] -> X) -> X)
  u_10776 : (x_2:int ->
             bool ->
             x_4:bool ->
             bool -> x_6:int[2 <= x_2 - x_6; (not x_4); 1 <= x_2 - x_6] -> (unit[(not x_4); 1 <= x_2 - x_6] -> X) -> X)
  u_21608 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_21625 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6; 1 <= x_2 - x_6] -> (unit -> X) -> X)

(20-1) Abstracting ... DONE!

(20-2) Checking HORS ... DONE!

Safe!

###set_main:
 let rec halt_1010 (s_29084:(bool * bool)) (set_flag_29085:bool) (x_2005:unit) =
   if set_flag_29085
   then
     let x_29086 = let u_29090 = if not (snd s_29084) || fst s_29084 then assert false in
                   rand_int () = 0 in
     let sp_29097 = if x_29086 then ((false, false), ()) else (s_29084, ()) in
     let s_29087 = fst sp_29097 in
     let s__u_29102 = ((fst s_29087, true), ()) in
     let s_29103 = fst s__u_29102 in
     let u_2011 = snd s__u_29102 in
     halt_1010 s_29103 true ()
   else
     let sp_29108 = if true then ((false, false), ()) else (s_29084, ()) in
     let s_29109 = fst sp_29108 in
     let s__u_29111 = ((fst s_29109, true), ()) in
     let s_29112 = fst s__u_29111 in
     let u_29113 = snd s__u_29111 in
     halt_1010 s_29112 true ()
 in
 let rec bar_1011 (s_29119:(bool * bool)) (set_flag_29120:bool) (x_1012:int) =
   let s__u_29125 = ((true, snd s_29119), ()) in
   let s_29126 = fst s__u_29125 in
   let u_2027 = snd s__u_29125 in
   if x_1012 > 0 then bar_1011 s_29126 set_flag_29120 (x_1012 - 1) else (s_29126, x_1012)
 in
 let rec foo_1013 (s_29136:(bool * bool)) (set_flag_29137:bool) (x_1014:int) =
   let s__u_29142 = ((fst s_29136, true), ()) in
   let s_29143 = fst s__u_29142 in
   let u_2041 = snd s__u_29142 in
   if x_1014 <= 0
   then
     foo_1013 s_29143 set_flag_29137 x_1014
   else
     halt_1010 s_29143 set_flag_29137 ()
 in
 let main_1015 (s_29153:(bool * bool)) (set_flag_29154:bool) (x_2043:unit) =
   let s__n_29157 = (s_29153, rand_int ()) in
   let s_29158 = fst s__n_29157 in
   let t_1016 = snd s__n_29157 in
   if rand_int () > 0
   then
     foo_1013 s_29158 set_flag_29154 0
   else
     let s__r_bar_29163 = bar_1011 s_29158 set_flag_29154 t_1016 in
     let s_29164 = fst s__r_bar_29163 in
     let r_bar_2109 = snd s__r_bar_29163 in
     foo_1013 s_29164 set_flag_29154 r_bar_2109
 in
 let s__r_main_29169 = main_1015 (false, false) false () in
 let s_29170 = fst s__r_main_29169 in
 let r_main_2110 = snd s__r_main_29169 in
 r_main_2110

###beta_reduce_trivial:
 let rec halt_1010 (s_29084:(bool * bool)) (set_flag_29085:bool) (x_2005:unit) =
   if set_flag_29085
   then
     let x_29086 = let u_29090 = if not (snd s_29084) || fst s_29084 then assert false in
                   rand_int () = 0 in
     let sp_29097 = if x_29086 then ((false, false), ()) else (s_29084, ()) in
     let s_29087 = fst sp_29097 in
     let s__u_29102 = ((fst s_29087, true), ()) in
     let s_29103 = fst s__u_29102 in
     halt_1010 s_29103 true ()
   else
     let sp_29108 = if true then ((false, false), ()) else (s_29084, ()) in
     let s_29109 = fst sp_29108 in
     let s__u_29111 = ((fst s_29109, true), ()) in
     let s_29112 = fst s__u_29111 in
     halt_1010 s_29112 true ()
 in
 let rec bar_1011 (s_29119:(bool * bool)) (set_flag_29120:bool) (x_1012:int) =
   let s__u_29125 = ((true, snd s_29119), ()) in
   let s_29126 = fst s__u_29125 in
   if x_1012 > 0 then bar_1011 s_29126 set_flag_29120 (x_1012 - 1) else (s_29126, x_1012)
 in
 let rec foo_1013 (s_29136:(bool * bool)) (set_flag_29137:bool) (x_1014:int) =
   let s__u_29142 = ((fst s_29136, true), ()) in
   let s_29143 = fst s__u_29142 in
   if x_1014 <= 0
   then
     foo_1013 s_29143 set_flag_29137 x_1014
   else
     halt_1010 s_29143 set_flag_29137 ()
 in
 let main_1015 (s_29153:(bool * bool)) (set_flag_29154:bool) (x_2043:unit) =
   let s__n_29157 = (s_29153, rand_int ()) in
   let s_29158 = fst s__n_29157 in
   let t_1016 = snd s__n_29157 in
   if rand_int () > 0
   then
     foo_1013 s_29158 set_flag_29154 0
   else
     let s__r_bar_29163 = bar_1011 s_29158 set_flag_29154 t_1016 in
     let s_29164 = fst s__r_bar_29163 in
     let r_bar_2109 = snd s__r_bar_29163 in
     foo_1013 s_29164 set_flag_29154 r_bar_2109
 in
 let s__r_main_29169 = main_1015 (false, false) false () in
 let r_main_2110 = snd s__r_main_29169 in
 r_main_2110

###inline:
 let rec halt_1010 (s_29084:(bool * bool)) (set_flag_29085:bool) (x_2005:unit) =
   if set_flag_29085
   then
     let x_29086 = let u_29090 = if not (snd s_29084) || fst s_29084 then assert false in
                   rand_int () = 0 in
     let sp_29097 = if x_29086 then ((false, false), ()) else (s_29084, ()) in
     let s__u_29102 = ((fst (fst sp_29097), true), ()) in
     halt_1010 (fst s__u_29102) true ()
   else
     let sp_29108 = if true then ((false, false), ()) else (s_29084, ()) in
     let s__u_29111 = ((fst (fst sp_29108), true), ()) in
     halt_1010 (fst s__u_29111) true ()
 in
 let rec bar_1011 (s_29119:(bool * bool)) (set_flag_29120:bool) (x_1012:int) =
   let s__u_29125 = ((true, snd s_29119), ()) in
   if x_1012 > 0
   then
     bar_1011 (fst s__u_29125) set_flag_29120 (x_1012 - 1)
   else
     (fst s__u_29125, x_1012)
 in
 let rec foo_1013 (s_29136:(bool * bool)) (set_flag_29137:bool) (x_1014:int) =
   let s__u_29142 = ((fst s_29136, true), ()) in
   if x_1014 <= 0
   then
     foo_1013 (fst s__u_29142) set_flag_29137 x_1014
   else
     halt_1010 (fst s__u_29142) set_flag_29137 ()
 in
 let main_1015 (s_29153:(bool * bool)) (set_flag_29154:bool) (x_2043:unit) =
   let s__n_29157 = (s_29153, rand_int ()) in
   if rand_int () > 0
   then
     foo_1013 (fst s__n_29157) set_flag_29154 0
   else
     let s__r_bar_29163 = bar_1011 (fst s__n_29157) set_flag_29154 (snd s__n_29157) in
     foo_1013 (fst s__r_bar_29163) set_flag_29154 (snd s__r_bar_29163)
 in
 let s__r_main_29169 = main_1015 (false, false) false () in
 snd s__r_main_29169

###CPS:
 (let rec halt_1010 s_29084 set_flag_29085 x_2005 k_halt_29486 =
    if set_flag_29085
    then
      let x_29086 k_halt_x_29490 =
        let u_29090 k_halt_x_u_29507 =
          if not (snd s_29084)
          then
            <|fail|> () k_halt_x_u_29507
          else
            if fst s_29084 then <|fail|> () k_halt_x_u_29507 else k_halt_x_u_29507 ()
        in
        u_29090 (fun u_29524 -> rand_int_cps () (fun x_29512 -> k_halt_x_29490 (x_29512 = 0)))
      in
      x_29086
        (fun x_29577 ->
           let sp_29097 k_halt_sp_29546 =
             if x_29577 then k_halt_sp_29546 ((false, false), ()) else k_halt_sp_29546 (s_29084, ())
           in
           sp_29097
             (fun sp_29576 ->
                let s__u_29102 k_halt_s__u_29552 = k_halt_s__u_29552 ((fst (fst sp_29576), true), ()) in
                s__u_29102 (fun s__u_29575 -> (halt_1010 (fst s__u_29575) true) () k_halt_29486)))
    else
      (fun sp_30374 ->
         let s__u_30375 k_halt_s__u_30376 = k_halt_s__u_30376 ((fst (fst sp_30374), true), ()) in
         s__u_30375 (fun s__u_30377 -> (halt_1010 (fst s__u_30377) true) () k_halt_29486))
        ((false, false), ())
  in
  let rec bar_1011 s_29119 set_flag_29120 x_1012 k_bar_29642 =
    let s__u_29125 k_bar_s__u_29646 = k_bar_s__u_29646 ((true, snd s_29119), ()) in
    s__u_29125
      (fun s__u_29679 ->
         if x_1012 > 0
         then
           (bar_1011 (fst s__u_29679) set_flag_29120) (x_1012 - 1) k_bar_29642
         else
           k_bar_29642 (fst s__u_29679, x_1012))
  in
  let rec foo_1013 s_29136 set_flag_29137 x_1014 k_foo_29688 =
    let s__u_29142 k_foo_s__u_29692 = k_foo_s__u_29692 ((fst s_29136, true), ()) in
    s__u_29142
      (fun s__u_29731 ->
         if x_1014 <= 0
         then
           (foo_1013 (fst s__u_29731) set_flag_29137) x_1014 k_foo_29688
         else
           (halt_1010 (fst s__u_29731) set_flag_29137) () k_foo_29688)
  in
  let main_1015 s_29153 set_flag_29154 x_2043 k_main_29740 =
    let s__n_29157 k_main_s__n_29744 =
      rand_int_cps () (fun x_29746 -> k_main_s__n_29744 (s_29153, x_29746))
    in
    s__n_29157
      (fun s__n_29816 ->
         rand_int_cps
           () 
           (fun x_29761 ->
              if x_29761 > 0
              then
                (foo_1013 (fst s__n_29816) set_flag_29154) 0 k_main_29740
              else
                let s__r_bar_29163 k_main_s__r_bar_29793 =
                  (bar_1011 (fst s__n_29816) set_flag_29154) (snd s__n_29816) k_main_s__r_bar_29793
                in
                s__r_bar_29163
                  (fun s__r_bar_29811 ->
                     (foo_1013 (fst s__r_bar_29811) set_flag_29154) (snd s__r_bar_29811) k_main_29740)))
  in
  let s__r_main_29169 k_s__r_main_29860 = ((main_1015 (false, false)) false) () k_s__r_main_29860 in
  s__r_main_29169 (fun s__r_main_29866 -> {end}) # [ACPS])

###remove_pair:
 (let rec halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 =
    if set_flag_29085
    then
      let x_29086 k_halt_x_29490 =
        let u_29090 k_halt_x_u_29507 =
          if not s1_29084
          then
            <|fail|> () k_halt_x_u_29507
          else
            if s0_29084 then <|fail|> () k_halt_x_u_29507 else k_halt_x_u_29507 ()
        in
        u_29090 (fun u_29524 -> rand_int_cps () (fun x_29512 -> k_halt_x_29490 (x_29512 = 0)))
      in
      x_29086
        (fun x_29577 ->
           let sp_29097 k_halt_sp_29546 =
             if x_29577 then k_halt_sp_29546 false false () else k_halt_sp_29546 s0_29084 s1_29084 ()
           in
           sp_29097
             (fun sp00_29576 sp01_29576 sp1_29576 -> halt_1010 sp00_29576 true true () k_halt_29486))
    else
      halt_1010 false true true () k_halt_29486
  in
  let rec bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 =
    if x_1012 > 0
    then
      bar_1011 true s1_29119 set_flag_29120 (x_1012 - 1) k_bar_29642
    else
      k_bar_29642 true s1_29119 x_1012
  in
  let rec foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 =
    if x_1014 <= 0
    then
      foo_1013 s0_29136 true set_flag_29137 x_1014 k_foo_29688
    else
      halt_1010 s0_29136 true set_flag_29137 () k_foo_29688
  in
  let main_1015 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 =
    let s__n_29157 k_main_s__n_29744 =
      rand_int_cps () (fun x_29746 -> k_main_s__n_29744 s0_29153 s1_29153 x_29746)
    in
    s__n_29157
      (fun s__n00_29816 s__n01_29816 s__n1_29816 ->
         rand_int_cps
           () 
           (fun x_29761 ->
              if x_29761 > 0
              then
                foo_1013 s__n00_29816 s__n01_29816 set_flag_29154 0 k_main_29740
              else
                bar_1011
                  s__n00_29816 s__n01_29816 set_flag_29154 s__n1_29816 
                  (fun s__r_bar00_29811 s__r_bar01_29811 s__r_bar1_29811 ->
                     foo_1013
                       s__r_bar00_29811 s__r_bar01_29811 set_flag_29154 s__r_bar1_29811 k_main_29740)))
  in
  main_1015 false false false () (fun s__r_main00_29866 s__r_main01_29866 s__r_main1_29866 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 21)::
Main: main_30615
  main_30615 -> (main_1015 false false false () f_30624).
  bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 when (x_1012 > 0) ->
      (bar_1011 true s1_29119 set_flag_29120 (x_1012 - 1) k_bar_29642).
  bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 when (not (x_1012 > 0)) ->
      (k_bar_29642 true s1_29119 x_1012).
  br_u_30625 b_30626 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when b_30626 ->
      (fail_30628 true k_halt_x_u_29507).
  br_u_30625 b_30626 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not b_30626) -> (k_halt_x_u_29507 ()).
  f_30624 s__r_main00_29866 s__r_main01_29866 s__r_main1_29866 -> end.
  f_halt_30618 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 x_29577 ->
      (sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577
       (f_halt_30619 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_29486)).
  f_halt_30619 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_29486 sp00_29576 sp01_29576 sp1_29576 ->
      (halt_1010 sp00_29576 true true () k_halt_29486).
  f_main_30621 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 s__n00_29816 s__n01_29816 s__n1_29816 ->
      (rand_int
       (f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740)).
  f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740 x_29761 when 
      (x_29761 > 0) -> (foo_1013 s__n00_29816 s__n01_29816 set_flag_29154 0 k_main_29740).
  f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740 x_29761 when 
      (not (x_29761 > 0)) ->
      (bar_1011 s__n00_29816 s__n01_29816 set_flag_29154 s__n1_29816
       (f_main_30623 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 x_29761
        k_main_29740)).
  f_main_30623 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 x_29761 k_main_29740 
  s__r_bar00_29811 s__r_bar01_29811 s__r_bar1_29811 ->
      (foo_1013 s__r_bar00_29811 s__r_bar01_29811 set_flag_29154 s__r_bar1_29811 k_main_29740).
  f_s__n_30620 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744 x_29746 ->
      (k_main_s__n_29744 s0_29153 s1_29153 x_29746).
  f_x_30616 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490 u_29524 ->
      (rand_int (f_x_30617 s0_29084 s1_29084 set_flag_29085 u_29524 x_2005 k_halt_x_29490)).
  f_x_30617 s0_29084 s1_29084 set_flag_29085 u_29524 x_2005 k_halt_x_29490 x_29512 -> (k_halt_x_29490 (x_29512 = 0)).
  fail_30627 b k -> {fail} => (k ()).
  fail_30628 b k -> {fail} => (k ()).
  foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 when (x_1014 <= 0) ->
      (foo_1013 s0_29136 true set_flag_29137 x_1014 k_foo_29688).
  foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 when (not (x_1014 <= 0)) ->
      (halt_1010 s0_29136 true set_flag_29137 () k_foo_29688).
  halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 when set_flag_29085 ->
      (x_29086 s0_29084 s1_29084 set_flag_29085 x_2005
       (f_halt_30618 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486)).
  halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 when 
      (not set_flag_29085) -> (halt_1010 false true true () k_halt_29486).
  main_1015 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 ->
      (s__n_29157 s0_29153 s1_29153 set_flag_29154 x_2043
       (f_main_30621 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740)).
  s__n_29157 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744 ->
      (rand_int (f_s__n_30620 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744)).
  sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_sp_29546 when x_29577 ->
      (k_halt_sp_29546 false false ()).
  sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_sp_29546 when 
      (not x_29577) -> (k_halt_sp_29546 s0_29084 s1_29084 ()).
  u_29090 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not s1_29084) -> (fail_30627 true k_halt_x_u_29507).
  u_29090 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not (not s1_29084)) -> (br_u_30625 s0_29084 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507).
  x_29086 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490 ->
      (u_29090 s0_29084 s1_29084 set_flag_29085 x_2005
       (f_x_30616 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490)).
Types:
  main_30615 : X
  bar_1011 : (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X)
  br_u_30625 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_main_30622 : (bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_30627 : (bool -> (unit -> X) -> X)
  fail_30628 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> X)
  halt_1010 : (bool -> bool -> bool -> unit -> (bool -> bool -> unit -> X) -> X)
  sp_29097 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_29090 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)

(21-1) Abstracting ... DONE!

(21-2) Checking HORS ... DONE!

Error trace::
  main_30615 ... --> 
  main_1015 ... --> 
  s__n_29157 ... --> 
  f_s__n_30620 ... --> 
  f_main_30621 ... --> 
  f_main_30622 [1/2] ... --> 
  foo_1013 [2/2] ... --> 
  halt_1010 [1/2] ... --> 
  x_29086 ... --> 
  u_29090 [1/2] ... --> 
  fail_30627 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0

(21-3) Checking counterexample ... DONE!

(21-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 22)::
Main: main_30615
  main_30615 -> (main_1015 false false false () f_30624).
  bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 when (x_1012 > 0) ->
      (bar_1011 true s1_29119 set_flag_29120 (x_1012 - 1) k_bar_29642).
  bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 when (not (x_1012 > 0)) ->
      (k_bar_29642 true s1_29119 x_1012).
  br_u_30625 b_30626 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when b_30626 ->
      (fail_30628 true k_halt_x_u_29507).
  br_u_30625 b_30626 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not b_30626) -> (k_halt_x_u_29507 ()).
  f_30624 s__r_main00_29866 s__r_main01_29866 s__r_main1_29866 -> end.
  f_halt_30618 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 x_29577 ->
      (sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577
       (f_halt_30619 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_29486)).
  f_halt_30619 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_29486 sp00_29576 sp01_29576 sp1_29576 ->
      (halt_1010 sp00_29576 true true () k_halt_29486).
  f_main_30621 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 s__n00_29816 s__n01_29816 s__n1_29816 ->
      (rand_int
       (f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740)).
  f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740 x_29761 when 
      (x_29761 > 0) -> (foo_1013 s__n00_29816 s__n01_29816 set_flag_29154 0 k_main_29740).
  f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740 x_29761 when 
      (not (x_29761 > 0)) ->
      (bar_1011 s__n00_29816 s__n01_29816 set_flag_29154 s__n1_29816
       (f_main_30623 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 x_29761
        k_main_29740)).
  f_main_30623 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 x_29761 k_main_29740 
  s__r_bar00_29811 s__r_bar01_29811 s__r_bar1_29811 ->
      (foo_1013 s__r_bar00_29811 s__r_bar01_29811 set_flag_29154 s__r_bar1_29811 k_main_29740).
  f_s__n_30620 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744 x_29746 ->
      (k_main_s__n_29744 s0_29153 s1_29153 x_29746).
  f_x_30616 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490 u_29524 ->
      (rand_int (f_x_30617 s0_29084 s1_29084 set_flag_29085 u_29524 x_2005 k_halt_x_29490)).
  f_x_30617 s0_29084 s1_29084 set_flag_29085 u_29524 x_2005 k_halt_x_29490 x_29512 -> (k_halt_x_29490 (x_29512 = 0)).
  fail_30627 b k -> {fail} => (k ()).
  fail_30628 b k -> {fail} => (k ()).
  foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 when (x_1014 <= 0) ->
      (foo_1013 s0_29136 true set_flag_29137 x_1014 k_foo_29688).
  foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 when (not (x_1014 <= 0)) ->
      (halt_1010 s0_29136 true set_flag_29137 () k_foo_29688).
  halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 when set_flag_29085 ->
      (x_29086 s0_29084 s1_29084 set_flag_29085 x_2005
       (f_halt_30618 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486)).
  halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 when 
      (not set_flag_29085) -> (halt_1010 false true true () k_halt_29486).
  main_1015 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 ->
      (s__n_29157 s0_29153 s1_29153 set_flag_29154 x_2043
       (f_main_30621 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740)).
  s__n_29157 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744 ->
      (rand_int (f_s__n_30620 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744)).
  sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_sp_29546 when x_29577 ->
      (k_halt_sp_29546 false false ()).
  sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_sp_29546 when 
      (not x_29577) -> (k_halt_sp_29546 s0_29084 s1_29084 ()).
  u_29090 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not s1_29084) -> (fail_30627 true k_halt_x_u_29507).
  u_29090 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not (not s1_29084)) -> (br_u_30625 s0_29084 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507).
  x_29086 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490 ->
      (u_29090 s0_29084 s1_29084 set_flag_29085 x_2005
       (f_x_30616 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490)).
Types:
  main_30615 : X
  bar_1011 : (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X)
  br_u_30625 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_main_30622 : (bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_30627 : (bool -> (unit -> X) -> X)
  fail_30628 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> x_5:int[x_5 <= 0] -> (bool -> bool -> unit -> X) -> X)
  halt_1010 : (bool -> bool -> bool -> unit -> (bool -> bool -> unit -> X) -> X)
  sp_29097 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_29090 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)

(22-1) Abstracting ... DONE!

(22-2) Checking HORS ... DONE!

Error trace::
  main_30615 ... --> 
  main_1015 ... --> 
  s__n_29157 ... --> 
  f_s__n_30620 ... --> 
  f_main_30621 ... --> 
  f_main_30622 [2/2] ... --> 
  bar_1011 [2/2] ... --> 
  f_main_30623 ... --> 
  foo_1013 [2/2] ... --> 
  halt_1010 [1/2] ... --> 
  x_29086 ... --> 
  u_29090 [1/2] ... --> 
  fail_30627 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 1; 0; 1; 0; 0; 0; 0

(22-3) Checking counterexample ... DONE!

(22-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 1; 0; 1

Program with abstraction types (CEGAR-cycle 23)::
Main: main_30615
  main_30615 -> (main_1015 false false false () f_30624).
  bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 when (x_1012 > 0) ->
      (bar_1011 true s1_29119 set_flag_29120 (x_1012 - 1) k_bar_29642).
  bar_1011 s0_29119 s1_29119 set_flag_29120 x_1012 k_bar_29642 when (not (x_1012 > 0)) ->
      (k_bar_29642 true s1_29119 x_1012).
  br_u_30625 b_30626 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when b_30626 ->
      (fail_30628 true k_halt_x_u_29507).
  br_u_30625 b_30626 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not b_30626) -> (k_halt_x_u_29507 ()).
  f_30624 s__r_main00_29866 s__r_main01_29866 s__r_main1_29866 -> end.
  f_halt_30618 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 x_29577 ->
      (sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577
       (f_halt_30619 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_29486)).
  f_halt_30619 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_29486 sp00_29576 sp01_29576 sp1_29576 ->
      (halt_1010 sp00_29576 true true () k_halt_29486).
  f_main_30621 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 s__n00_29816 s__n01_29816 s__n1_29816 ->
      (rand_int
       (f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740)).
  f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740 x_29761 when 
      (x_29761 > 0) -> (foo_1013 s__n00_29816 s__n01_29816 set_flag_29154 0 k_main_29740).
  f_main_30622 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 k_main_29740 x_29761 when 
      (not (x_29761 > 0)) ->
      (bar_1011 s__n00_29816 s__n01_29816 set_flag_29154 s__n1_29816
       (f_main_30623 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 x_29761
        k_main_29740)).
  f_main_30623 s0_29153 s1_29153 s__n00_29816 s__n01_29816 s__n1_29816 set_flag_29154 x_2043 x_29761 k_main_29740 
  s__r_bar00_29811 s__r_bar01_29811 s__r_bar1_29811 ->
      (foo_1013 s__r_bar00_29811 s__r_bar01_29811 set_flag_29154 s__r_bar1_29811 k_main_29740).
  f_s__n_30620 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744 x_29746 ->
      (k_main_s__n_29744 s0_29153 s1_29153 x_29746).
  f_x_30616 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490 u_29524 ->
      (rand_int (f_x_30617 s0_29084 s1_29084 set_flag_29085 u_29524 x_2005 k_halt_x_29490)).
  f_x_30617 s0_29084 s1_29084 set_flag_29085 u_29524 x_2005 k_halt_x_29490 x_29512 -> (k_halt_x_29490 (x_29512 = 0)).
  fail_30627 b k -> {fail} => (k ()).
  fail_30628 b k -> {fail} => (k ()).
  foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 when (x_1014 <= 0) ->
      (foo_1013 s0_29136 true set_flag_29137 x_1014 k_foo_29688).
  foo_1013 s0_29136 s1_29136 set_flag_29137 x_1014 k_foo_29688 when (not (x_1014 <= 0)) ->
      (halt_1010 s0_29136 true set_flag_29137 () k_foo_29688).
  halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 when set_flag_29085 ->
      (x_29086 s0_29084 s1_29084 set_flag_29085 x_2005
       (f_halt_30618 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486)).
  halt_1010 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_29486 when 
      (not set_flag_29085) -> (halt_1010 false true true () k_halt_29486).
  main_1015 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740 ->
      (s__n_29157 s0_29153 s1_29153 set_flag_29154 x_2043
       (f_main_30621 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_29740)).
  s__n_29157 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744 ->
      (rand_int (f_s__n_30620 s0_29153 s1_29153 set_flag_29154 x_2043 k_main_s__n_29744)).
  sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_sp_29546 when x_29577 ->
      (k_halt_sp_29546 false false ()).
  sp_29097 s0_29084 s1_29084 set_flag_29085 x_2005 x_29577 k_halt_sp_29546 when 
      (not x_29577) -> (k_halt_sp_29546 s0_29084 s1_29084 ()).
  u_29090 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not s1_29084) -> (fail_30627 true k_halt_x_u_29507).
  u_29090 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507 when 
      (not (not s1_29084)) -> (br_u_30625 s0_29084 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_u_29507).
  x_29086 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490 ->
      (u_29090 s0_29084 s1_29084 set_flag_29085 x_2005
       (f_x_30616 s0_29084 s1_29084 set_flag_29085 x_2005 k_halt_x_29490)).
Types:
  main_30615 : X
  bar_1011 : (bool -> bool -> bool -> int -> (bool -> bool -> x_9:int[x_9 <= 0] -> X) -> X)
  br_u_30625 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_main_30622 : (bool -> bool -> bool -> bool -> int -> bool -> unit -> (bool -> bool -> unit -> X) -> int -> X)
  fail_30627 : (bool -> (unit -> X) -> X)
  fail_30628 : (bool -> (unit -> X) -> X)
  foo_1013 : (bool -> bool -> bool -> x_5:int[x_5 <= 0] -> (bool -> bool -> unit -> X) -> X)
  halt_1010 : (bool -> bool -> bool -> unit -> (bool -> bool -> unit -> X) -> X)
  sp_29097 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_29090 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)

(23-1) Abstracting ... DONE!

(23-2) Checking HORS ... DONE!

Safe!

Fair terminating!

cycles: 6
CEGAR-cycles: 23
total: 3.220 sec
  abst: 1.056 sec
  mc: 1.144 sec
  refine: 0.540 sec

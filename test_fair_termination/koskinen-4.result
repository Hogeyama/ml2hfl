MoCHi: Model Checker for Higher-Order Programs
  Build: _af132b7 (after 2015-07-27 18:08:37 +0900)
  FPAT version: af132b7
  TRecS version: 1.33
  HorSat version: 0.99
  OCaml version: 4.02.1
  Command: ./mochi.opt -ignore-conf -color -fair-termination -bool-init-empty -fpat '-wp-max 2 -neg-pred' 
           test_fair_termination/koskinen-4.ml -expand-set-flag -rank-widen -horsat

parsed:
 let event_1008 s_1009 = () in
 let g_1010 i_1011 x_1012 = x_1012 - i_1011 in
 let app_1013 f_1014 x_1015 i_1016 = let u_2104 = event_1008 "P" in
                                     f_1014 x_1015 (g_1010 i_1016) in
 let rec ha1_1017 x_1018 = let u_2119 = event_1008 "P" in
                           let u_2117 = event_1008 "Ha" in
                           ha1_1017 x_1018 in
 let rec ha2_1019 x_1020 = let u_2131 = event_1008 "P" in
                           let u_2129 = event_1008 "Ha" in
                           ha2_1019 x_1020 in
 let rec walk_1021 x_1022 f_1023 =
   let u_2180 = event_1008 "P" in
   if x_1022 < 0 then x_1022 else walk_1021 (f_1023 x_1022) f_1023
 in
 let rec run_1024 x_1025 f_1026 =
   let u_2234 = event_1008 "P" in
   if x_1025 < 0 then x_1025 else run_1024 (f_1026 (f_1026 x_1025)) f_1026
 in
 let rec life_1027 x_1028 =
   if rand_int () > 0
   then
     let u_2292 = event_1008 "P" in
     if x_1028 < 0
     then
       ha1_1017 (app_1013 walk_1021 x_1028 1)
     else
       ha2_1019 (app_1013 run_1024 x_1028 1)
   else
     life_1027 x_1028
 in
 let main_1029 x_2295 = life_1027 (rand_int ()) in
 ()

FAIRNESS: {(Always, P), (Ha, Never)}

###set_main:
 let g_1010 (s_2460:(bool * bool)) (set_flag_2461:bool) (i_1011:int) =
   (s_2460, (fun (s_2464:(bool * bool)) (set_flag_2465:bool) (x_1012:int) -> (s_2464, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool -> ((bool * bool) -> bool -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_2479:(bool * bool)) (set_flag_2480:bool) (
             i_1016:int) =
   let s__u_2485 = ((fst s_2479, true), ()) in
   let s_2486 = fst s__u_2485 in
   let u_2310 = snd s__u_2485 in
   let s__r_g_2491 = g_1010 s_2486 set_flag_2480 i_1016 in
   let s_2492 = fst s__r_g_2491 in
   let r_g_2442 = snd s__r_g_2491 in
   f_1014 x_1015 s_2492 set_flag_2480 r_g_2442
 in
 let rec ha1_2305 (s_2510:(bool * bool)) (set_flag_2511:bool) (x_1018:int) =
   let s__u_2516 = ((fst s_2510, true), ()) in
   let s_2517 = fst s__u_2516 in
   let u_2306 = snd s__u_2516 in
   let s__u_2522 = ((true, snd s_2517), ()) in
   let s_2523 = fst s__u_2522 in
   let u_2307 = snd s__u_2522 in
   ha1_2305 s_2523 set_flag_2511 x_1018
 in
 let rec ha2_2302 (s_2531:(bool * bool)) (set_flag_2532:bool) (x_1020:int) =
   let s__u_2537 = ((fst s_2531, true), ()) in
   let s_2538 = fst s__u_2537 in
   let u_2303 = snd s__u_2537 in
   let s__u_2543 = ((true, snd s_2538), ()) in
   let s_2544 = fst s__u_2543 in
   let u_2304 = snd s__u_2543 in
   ha2_2302 s_2544 set_flag_2532 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_2554:(bool * bool)) (set_flag_2555:bool) 
                  (f_1023:((bool * bool) -> bool -> int -> ((bool * bool) * int))) =
   let s__u_2560 = ((fst s_2554, true), ()) in
   let s_2561 = fst s__u_2560 in
   let u_2180 = snd s__u_2560 in
   if x_1022 < 0
   then
     (s_2561, x_1022)
   else
     let s__r_f_2566 = f_1023 s_2561 set_flag_2555 x_1022 in
     let s_2567 = fst s__r_f_2566 in
     let r_f_2443 = snd s__r_f_2566 in
     walk_1021 r_f_2443 s_2567 set_flag_2555 f_1023
 in
 let rec run_1024 (x_1025:int) (s_2583:(bool * bool)) (set_flag_2584:bool) 
                 (f_1026:((bool * bool) -> bool -> int -> ((bool * bool) * int))) =
   let s__u_2589 = ((fst s_2583, true), ()) in
   let s_2590 = fst s__u_2589 in
   let u_2234 = snd s__u_2589 in
   if x_1025 < 0
   then
     (s_2590, x_1025)
   else
     let s__r_f_2595 = f_1026 s_2590 set_flag_2584 x_1025 in
     let s_2596 = fst s__r_f_2595 in
     let r_f_2444 = snd s__r_f_2595 in
     let s__r_f_2599 = f_1026 s_2596 set_flag_2584 r_f_2444 in
     let s_2600 = fst s__r_f_2599 in
     let r_f_2445 = snd s__r_f_2599 in
     run_1024 r_f_2445 s_2600 set_flag_2584 f_1026
 in
 let rec life_2300 (s_2614:(bool * bool)) (set_flag_2615:bool) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_2620 = ((fst s_2614, true), ()) in
     let s_2621 = fst s__u_2620 in
     let u_2301 = snd s__u_2620 in
     if x_1028 < 0
     then
       let s__r_app_2632 = app_2308 walk_1021 x_1028 s_2621 set_flag_2615 1 in
       let s_2633 = fst s__r_app_2632 in
       let r_app_2447 = snd s__r_app_2632 in
       ha1_2305 s_2633 set_flag_2615 r_app_2447
     else
       let s__r_app_2646 = app_2308 run_1024 x_1028 s_2621 set_flag_2615 1 in
       let s_2647 = fst s__r_app_2646 in
       let r_app_2446 = snd s__r_app_2646 in
       ha2_2302 s_2647 set_flag_2615 r_app_2446
   else
     life_2300 s_2614 set_flag_2615 x_1028
 in
 let main_1029 (s_2657:(bool * bool)) (set_flag_2658:bool) (x_2295:unit) =
   if set_flag_2658
   then
     let x_2659 = let u_2663 = if snd s_2657 && not (fst s_2657) then assert false in
                  rand_int () = 0 in
     let sp_2670 = if x_2659 then ((false, false), ()) else (s_2657, ()) in
     let s_2660 = fst sp_2670 in
     life_2300 s_2660 true (rand_int ())
   else
     let sp_2675 = if true then ((false, false), ()) else (s_2657, ()) in
     let s_2676 = fst sp_2675 in
     life_2300 s_2676 true (rand_int ())
 in
 let s__r_main_2680 = main_1029 (false, false) false () in
 let s_2681 = fst s__r_main_2680 in
 let r_main_2448 = snd s__r_main_2680 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_2460:(bool * bool)) (set_flag_2461:bool) (i_1011:int) =
   (s_2460, (fun (s_2464:(bool * bool)) (set_flag_2465:bool) (x_1012:int) -> (s_2464, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool -> ((bool * bool) -> bool -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_2479:(bool * bool)) (set_flag_2480:bool) (
             i_1016:int) =
   let s__u_2485 = ((fst s_2479, true), ()) in
   let s_2486 = fst s__u_2485 in
   let s__r_g_2491 = g_1010 s_2486 set_flag_2480 i_1016 in
   let s_2492 = fst s__r_g_2491 in
   let r_g_2442 = snd s__r_g_2491 in
   f_1014 x_1015 s_2492 set_flag_2480 r_g_2442
 in
 let rec ha1_2305 (s_2510:(bool * bool)) (set_flag_2511:bool) (x_1018:int) =
   let s__u_2516 = ((fst s_2510, true), ()) in
   let s_2517 = fst s__u_2516 in
   let s__u_2522 = ((true, snd s_2517), ()) in
   let s_2523 = fst s__u_2522 in
   ha1_2305 s_2523 set_flag_2511 x_1018
 in
 let rec ha2_2302 (s_2531:(bool * bool)) (set_flag_2532:bool) (x_1020:int) =
   let s__u_2537 = ((fst s_2531, true), ()) in
   let s_2538 = fst s__u_2537 in
   let s__u_2543 = ((true, snd s_2538), ()) in
   let s_2544 = fst s__u_2543 in
   ha2_2302 s_2544 set_flag_2532 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_2554:(bool * bool)) (set_flag_2555:bool) 
                  (f_1023:((bool * bool) -> bool -> int -> ((bool * bool) * int))) =
   let s__u_2560 = ((fst s_2554, true), ()) in
   let s_2561 = fst s__u_2560 in
   if x_1022 < 0
   then
     (s_2561, x_1022)
   else
     let s__r_f_2566 = f_1023 s_2561 set_flag_2555 x_1022 in
     let s_2567 = fst s__r_f_2566 in
     let r_f_2443 = snd s__r_f_2566 in
     walk_1021 r_f_2443 s_2567 set_flag_2555 f_1023
 in
 let rec run_1024 (x_1025:int) (s_2583:(bool * bool)) (set_flag_2584:bool) 
                 (f_1026:((bool * bool) -> bool -> int -> ((bool * bool) * int))) =
   let s__u_2589 = ((fst s_2583, true), ()) in
   let s_2590 = fst s__u_2589 in
   if x_1025 < 0
   then
     (s_2590, x_1025)
   else
     let s__r_f_2595 = f_1026 s_2590 set_flag_2584 x_1025 in
     let s_2596 = fst s__r_f_2595 in
     let r_f_2444 = snd s__r_f_2595 in
     let s__r_f_2599 = f_1026 s_2596 set_flag_2584 r_f_2444 in
     let s_2600 = fst s__r_f_2599 in
     let r_f_2445 = snd s__r_f_2599 in
     run_1024 r_f_2445 s_2600 set_flag_2584 f_1026
 in
 let rec life_2300 (s_2614:(bool * bool)) (set_flag_2615:bool) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_2620 = ((fst s_2614, true), ()) in
     let s_2621 = fst s__u_2620 in
     if x_1028 < 0
     then
       let s__r_app_2632 = app_2308 walk_1021 x_1028 s_2621 set_flag_2615 1 in
       let s_2633 = fst s__r_app_2632 in
       let r_app_2447 = snd s__r_app_2632 in
       ha1_2305 s_2633 set_flag_2615 r_app_2447
     else
       let s__r_app_2646 = app_2308 run_1024 x_1028 s_2621 set_flag_2615 1 in
       let s_2647 = fst s__r_app_2646 in
       let r_app_2446 = snd s__r_app_2646 in
       ha2_2302 s_2647 set_flag_2615 r_app_2446
   else
     life_2300 s_2614 set_flag_2615 x_1028
 in
 let main_1029 (s_2657:(bool * bool)) (set_flag_2658:bool) (x_2295:unit) =
   if set_flag_2658
   then
     let x_2659 = let u_2663 = if snd s_2657 && not (fst s_2657) then assert false in
                  rand_int () = 0 in
     let sp_2670 = if x_2659 then ((false, false), ()) else (s_2657, ()) in
     let s_2660 = fst sp_2670 in
     life_2300 s_2660 true (rand_int ())
   else
     let sp_2675 = if true then ((false, false), ()) else (s_2657, ()) in
     let s_2676 = fst sp_2675 in
     life_2300 s_2676 true (rand_int ())
 in
 let s__r_main_2680 = main_1029 (false, false) false () in
 let r_main_2448 = snd s__r_main_2680 in
 r_main_2448

###inline:
 let g_1010 (s_2460:(bool * bool)) (set_flag_2461:bool) (i_1011:int) =
   (s_2460, (fun (s_2464:(bool * bool)) (set_flag_2465:bool) (x_1012:int) -> (s_2464, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool -> ((bool * bool) -> bool -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_2479:(bool * bool)) (set_flag_2480:bool) (
             i_1016:int) =
   let s__u_2485 = ((fst s_2479, true), ()) in
   let s__r_g_2491 = g_1010 (fst s__u_2485) set_flag_2480 i_1016 in
   f_1014 x_1015 (fst s__r_g_2491) set_flag_2480 (snd s__r_g_2491)
 in
 let rec ha1_2305 (s_2510:(bool * bool)) (set_flag_2511:bool) (x_1018:int) =
   let s__u_2516 = ((fst s_2510, true), ()) in
   let s__u_2522 = ((true, snd (fst s__u_2516)), ()) in
   ha1_2305 (fst s__u_2522) set_flag_2511 x_1018
 in
 let rec ha2_2302 (s_2531:(bool * bool)) (set_flag_2532:bool) (x_1020:int) =
   let s__u_2537 = ((fst s_2531, true), ()) in
   let s__u_2543 = ((true, snd (fst s__u_2537)), ()) in
   ha2_2302 (fst s__u_2543) set_flag_2532 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_2554:(bool * bool)) (set_flag_2555:bool) 
                  (f_1023:((bool * bool) -> bool -> int -> ((bool * bool) * int))) =
   let s__u_2560 = ((fst s_2554, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_2560, x_1022)
   else
     let s__r_f_2566 = f_1023 (fst s__u_2560) set_flag_2555 x_1022 in
     walk_1021 (snd s__r_f_2566) (fst s__r_f_2566) set_flag_2555 f_1023
 in
 let rec run_1024 (x_1025:int) (s_2583:(bool * bool)) (set_flag_2584:bool) 
                 (f_1026:((bool * bool) -> bool -> int -> ((bool * bool) * int))) =
   let s__u_2589 = ((fst s_2583, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_2589, x_1025)
   else
     let s__r_f_2595 = f_1026 (fst s__u_2589) set_flag_2584 x_1025 in
     let s__r_f_2599 = f_1026 (fst s__r_f_2595) set_flag_2584 (snd s__r_f_2595) in
     run_1024 (snd s__r_f_2599) (fst s__r_f_2599) set_flag_2584 f_1026
 in
 let rec life_2300 (s_2614:(bool * bool)) (set_flag_2615:bool) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_2620 = ((fst s_2614, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_2632 = app_2308 walk_1021 x_1028 (fst s__u_2620) set_flag_2615 1 in
       ha1_2305 (fst s__r_app_2632) set_flag_2615 (snd s__r_app_2632)
     else
       let s__r_app_2646 = app_2308 run_1024 x_1028 (fst s__u_2620) set_flag_2615 1 in
       ha2_2302 (fst s__r_app_2646) set_flag_2615 (snd s__r_app_2646)
   else
     life_2300 s_2614 set_flag_2615 x_1028
 in
 let main_1029 (s_2657:(bool * bool)) (set_flag_2658:bool) (x_2295:unit) =
   if set_flag_2658
   then
     let x_2659 = let u_2663 = if snd s_2657 && not (fst s_2657) then assert false in
                  rand_int () = 0 in
     let sp_2670 = if x_2659 then ((false, false), ()) else (s_2657, ()) in
     life_2300 (fst sp_2670) true (rand_int ())
   else
     let sp_2675 = if true then ((false, false), ()) else (s_2657, ()) in
     life_2300 (fst sp_2675) true (rand_int ())
 in
 let s__r_main_2680 = main_1029 (false, false) false () in
 snd s__r_main_2680

###CPS:
 (let g_1010 s_2460 set_flag_2461 i_1011 k_g_3290 =
    k_g_3290 (s_2460, (fun s_2464 set_flag_2465 x_1012 k_g_3308 -> k_g_3308 (s_2464, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_2479 set_flag_2480 i_1016 k_app_3339 =
    let s__u_2485 k_app_s__u_3343 = k_app_s__u_3343 ((fst s_2479, true), ()) in
    s__u_2485
      (fun s__u_3432 ->
         let s__r_g_2491 k_app_s__r_g_3372 = (g_1010 (fst s__u_3432) set_flag_2480) i_1016 k_app_s__r_g_3372 in
         s__r_g_2491 (fun s__r_g_3431 -> (f_1014 x_1015 (fst s__r_g_3431) set_flag_2480) (snd s__r_g_3431) k_app_3339))
  in
  let rec ha1_2305 s_2510 set_flag_2511 x_1018 k_ha1_3454 =
    let s__u_2516 k_ha1_s__u_3458 = k_ha1_s__u_3458 ((fst s_2510, true), ()) in
    s__u_2516
      (fun s__u_3496 ->
         let s__u_2522 k_ha1_s__u_3472 = k_ha1_s__u_3472 ((true, snd (fst s__u_3496)), ()) in
         s__u_2522 (fun s__u_3495 -> (ha1_2305 (fst s__u_3495) set_flag_2511) x_1018 k_ha1_3454))
  in
  let rec ha2_2302 s_2531 set_flag_2532 x_1020 k_ha2_3505 =
    let s__u_2537 k_ha2_s__u_3509 = k_ha2_s__u_3509 ((fst s_2531, true), ()) in
    s__u_2537
      (fun s__u_3547 ->
         let s__u_2543 k_ha2_s__u_3523 = k_ha2_s__u_3523 ((true, snd (fst s__u_3547)), ()) in
         s__u_2543 (fun s__u_3546 -> (ha2_2302 (fst s__u_3546) set_flag_2532) x_1020 k_ha2_3505))
  in
  let rec walk_1021 x_1022 s_2554 set_flag_2555 f_1023 k_walk_3561 =
    let s__u_2560 k_walk_s__u_3565 = k_walk_s__u_3565 ((fst s_2554, true), ()) in
    s__u_2560
      (fun s__u_3634 ->
         if x_1022 < 0
         then
           k_walk_3561 (fst s__u_3634, x_1022)
         else
           let s__r_f_2566 k_walk_s__r_f_3590 = (f_1023 (fst s__u_3634) set_flag_2555) x_1022 k_walk_s__r_f_3590 in
           s__r_f_2566
             (fun s__r_f_3629 -> (walk_1021 (snd s__r_f_3629) (fst s__r_f_3629) set_flag_2555) f_1023 k_walk_3561))
  in
  let rec run_1024 x_1025 s_2583 set_flag_2584 f_1026 k_run_3654 =
    let s__u_2589 k_run_s__u_3658 = k_run_s__u_3658 ((fst s_2583, true), ()) in
    s__u_2589
      (fun s__u_3742 ->
         if x_1025 < 0
         then
           k_run_3654 (fst s__u_3742, x_1025)
         else
           let s__r_f_2595 k_run_s__r_f_3683 = (f_1026 (fst s__u_3742) set_flag_2584) x_1025 k_run_s__r_f_3683 in
           s__r_f_2595
             (fun s__r_f_3737 ->
                let s__r_f_2599 k_run_s__r_f_3697 =
                  (f_1026 (fst s__r_f_3737) set_flag_2584) (snd s__r_f_3737) k_run_s__r_f_3697
                in
                s__r_f_2599
                  (fun s__r_f_3736 -> (run_1024 (snd s__r_f_3736) (fst s__r_f_3736) set_flag_2584) f_1026 k_run_3654)))
  in
  let rec life_2300 s_2614 set_flag_2615 x_1028 k_life_3757 =
    rand_int_cps
      () 
      (fun x_3760 ->
         if x_3760 > 0
         then
           let s__u_2620 k_life_s__u_3775 = k_life_s__u_3775 ((fst s_2614, true), ()) in
           s__u_2620
             (fun s__u_3892 ->
                if x_1028 < 0
                then
                  let s__r_app_2632 k_life_s__r_app_3818 =
                    (app_2308 walk_1021 x_1028 (fst s__u_3892) set_flag_2615) 1 k_life_s__r_app_3818
                  in
                  s__r_app_2632
                    (fun s__r_app_3836 -> (ha1_2305 (fst s__r_app_3836) set_flag_2615) (snd s__r_app_3836) k_life_3757)
                else
                  let s__r_app_2646 k_life_s__r_app_3869 =
                    (app_2308 run_1024 x_1028 (fst s__u_3892) set_flag_2615) 1 k_life_s__r_app_3869
                  in
                  s__r_app_2646
                    (fun s__r_app_3887 -> (ha2_2302 (fst s__r_app_3887) set_flag_2615) (snd s__r_app_3887) k_life_3757))
         else
           (life_2300 s_2614 set_flag_2615) x_1028 k_life_3757)
  in
  let main_1029 s_2657 set_flag_2658 x_2295 k_main_3917 =
    if set_flag_2658
    then
      let x_2659 k_main_x_3921 =
        let u_2663 k_main_x_u_3938 =
          if snd s_2657
          then
            if not (fst s_2657) then <|fail|> () k_main_x_u_3938 else k_main_x_u_3938 ()
          else
            k_main_x_u_3938 ()
        in
        u_2663 (fun u_3955 -> rand_int_cps () (fun x_3943 -> k_main_x_3921 (x_3943 = 0)))
      in
      x_2659
        (fun x_4003 ->
           let sp_2670 k_main_sp_3977 =
             if x_4003 then k_main_sp_3977 ((false, false), ()) else k_main_sp_3977 (s_2657, ())
           in
           sp_2670
             (fun sp_4002 ->
                rand_int_cps () (fun x_4001 -> (life_2300 (fst sp_4002) true) x_4001 k_main_3917)))
    else
      (fun sp_4965 ->
         rand_int_cps () (fun x_4966 -> (life_2300 (fst sp_4965) true) x_4966 k_main_3917))
        ((false, false), ())
  in
  let s__r_main_2680 k_s__r_main_4098 = ((main_1029 (false, false)) false) () k_s__r_main_4098 in
  s__r_main_2680 (fun s__r_main_4104 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_2460 s1_2460 set_flag_2461 i_1011 k_g_3290 =
    k_g_3290
      s0_2460 s1_2460 (fun s0_2464 s1_2464 set_flag_2465 x_1012 k_g_3308 -> k_g_3308 s0_2464 s1_2464 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_2510 s1_2510 set_flag_2511 x_1018 k_ha1_3454 = ha1_2305 true true set_flag_2511 x_1018 k_ha1_3454 in
  let rec ha2_2302 s0_2531 s1_2531 set_flag_2532 x_1020 k_ha2_3505 = ha2_2302 true true set_flag_2532 x_1020 k_ha2_3505 in
  let rec walk_1021 x_1022 s0_2554 s1_2554 set_flag_2555 f_1023 k_walk_3561 =
    if x_1022 < 0
    then
      k_walk_3561 s0_2554 true x_1022
    else
      f_1023
        s0_2554 true set_flag_2555 x_1022 
        (fun s__r_f00_3629 s__r_f01_3629 s__r_f1_3629 ->
           walk_1021 s__r_f1_3629 s__r_f00_3629 s__r_f01_3629 set_flag_2555 f_1023 k_walk_3561)
  in
  let rec run_1024 x_1025 s0_2583 s1_2583 set_flag_2584 f_1026 k_run_3654 =
    if x_1025 < 0
    then
      k_run_3654 s0_2583 true x_1025
    else
      f_1026
        s0_2583 true set_flag_2584 x_1025 
        (fun s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 ->
           f_1026
             s__r_f00_3737 s__r_f01_3737 set_flag_2584 s__r_f1_3737 
             (fun s__r_f00_3736 s__r_f01_3736 s__r_f1_3736 ->
                run_1024 s__r_f1_3736 s__r_f00_3736 s__r_f01_3736 set_flag_2584 f_1026 k_run_3654))
  in
  let rec life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 =
    rand_int_cps
      () 
      (fun x_3760 ->
         if x_3760 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_2614 true set_flag_2615 1 
               (fun s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
                  walk_1021
                    x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 
                    s__r_g1_3431 
                    (fun s__r_app00_3836 s__r_app01_3836 s__r_app1_3836 ->
                       ha1_2305 s__r_app00_3836 s__r_app01_3836 set_flag_2615 s__r_app1_3836 k_life_3757))
           else
             g_1010
               s0_2614 true set_flag_2615 1 
               (fun s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
                  run_1024
                    x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 
                    s__r_g1_3431 
                    (fun s__r_app00_3887 s__r_app01_3887 s__r_app1_3887 ->
                       ha2_2302 s__r_app00_3887 s__r_app01_3887 set_flag_2615 s__r_app1_3887 k_life_3757))
         else
           life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757)
  in
  let main_1029 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 =
    if set_flag_2658
    then
      let x_2659 k_main_x_3921 =
        let u_2663 k_main_x_u_3938 =
          if s1_2657
          then
            if not s0_2657 then <|fail|> () k_main_x_u_3938 else k_main_x_u_3938 ()
          else
            k_main_x_u_3938 ()
        in
        u_2663 (fun u_3955 -> rand_int_cps () (fun x_3943 -> k_main_x_3921 (x_3943 = 0)))
      in
      x_2659
        (fun x_4003 ->
           let sp_2670 k_main_sp_3977 =
             if x_4003 then k_main_sp_3977 false false () else k_main_sp_3977 s0_2657 s1_2657 ()
           in
           sp_2670
             (fun sp00_4002 sp01_4002 sp1_4002 ->
                rand_int_cps () (fun x_4001 -> life_2300 sp00_4002 sp01_4002 true x_4001 k_main_3917)))
    else
      rand_int_cps () (fun x_4966 -> life_2300 false false true x_4966 k_main_3917)
  in
  main_1029 false false false () (fun s__r_main00_4104 s__r_main01_4104 s__r_main1_4104 -> {end}) #
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_2460 s1_2460 set_flag_2461 i_1011 k_g_3290 =
    k_g_3290
      s0_2460 s1_2460 (fun s0_2464 s1_2464 set_flag_2465 x_1012 k_g_3308 -> k_g_3308 s0_2464 s1_2464 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_2510 s1_2510 set_flag_2511 x_1018 k_ha1_3454 = _|_ in
  let rec ha2_2302 s0_2531 s1_2531 set_flag_2532 x_1020 k_ha2_3505 = _|_ in
  let rec walk_1021 x_1022 s0_2554 s1_2554 set_flag_2555 f_1023 k_walk_3561 =
    if x_1022 < 0
    then
      k_walk_3561 s0_2554 true x_1022
    else
      f_1023
        s0_2554 true set_flag_2555 x_1022 
        (fun s__r_f00_3629 s__r_f01_3629 s__r_f1_3629 ->
           walk_1021 s__r_f1_3629 s__r_f00_3629 s__r_f01_3629 set_flag_2555 f_1023 k_walk_3561)
  in
  let rec run_1024 x_1025 s0_2583 s1_2583 set_flag_2584 f_1026 k_run_3654 =
    if x_1025 < 0
    then
      k_run_3654 s0_2583 true x_1025
    else
      f_1026
        s0_2583 true set_flag_2584 x_1025 
        (fun s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 ->
           f_1026
             s__r_f00_3737 s__r_f01_3737 set_flag_2584 s__r_f1_3737 
             (fun s__r_f00_3736 s__r_f01_3736 s__r_f1_3736 ->
                run_1024 s__r_f1_3736 s__r_f00_3736 s__r_f01_3736 set_flag_2584 f_1026 k_run_3654))
  in
  let rec life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 =
    rand_int_cps
      () 
      (fun x_3760 ->
         if x_3760 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_2614 true set_flag_2615 1 
               (fun s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
                  walk_1021
                    x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 
                    s__r_g1_3431 
                    (fun s__r_app00_3836 s__r_app01_3836 s__r_app1_3836 ->
                       ha1_2305 s__r_app00_3836 s__r_app01_3836 set_flag_2615 s__r_app1_3836 k_life_3757))
           else
             g_1010
               s0_2614 true set_flag_2615 1 
               (fun s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
                  run_1024
                    x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 
                    s__r_g1_3431 
                    (fun s__r_app00_3887 s__r_app01_3887 s__r_app1_3887 ->
                       ha2_2302 s__r_app00_3887 s__r_app01_3887 set_flag_2615 s__r_app1_3887 k_life_3757))
         else
           life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757)
  in
  let main_1029 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 =
    if set_flag_2658
    then
      let x_2659 k_main_x_3921 =
        let u_2663 k_main_x_u_3938 =
          if s1_2657
          then
            if not s0_2657 then <|fail|> () k_main_x_u_3938 else k_main_x_u_3938 ()
          else
            k_main_x_u_3938 ()
        in
        u_2663 (fun u_3955 -> rand_int_cps () (fun x_3943 -> k_main_x_3921 (x_3943 = 0)))
      in
      x_2659
        (fun x_4003 ->
           let sp_2670 k_main_sp_3977 =
             if x_4003 then k_main_sp_3977 false false () else k_main_sp_3977 s0_2657 s1_2657 ()
           in
           sp_2670
             (fun sp00_4002 sp01_4002 sp1_4002 ->
                rand_int_cps () (fun x_4001 -> life_2300 sp00_4002 sp01_4002 true x_4001 k_main_3917)))
    else
      rand_int_cps () (fun x_4966 -> life_2300 false false true x_4966 k_main_3917)
  in
  main_1029 false false false () (fun s__r_main00_4104 s__r_main01_4104 s__r_main1_4104 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 0)::
Main: main_5389
  main_5389 -> (main_1029 false false false () f_5405).
  br_f_life_5406 b_5407 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when b_5407 ->
      (g_1010 s0_2614 true set_flag_2615 1 (f_life_5395 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757)).
  br_f_life_5406 b_5407 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when 
      (not b_5407) ->
      (g_1010 s0_2614 true set_flag_2615 1 (f_life_5397 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757)).
  br_u_5408 b_5409 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when b_5409 ->
      (fail_5410 true k_main_x_u_3938).
  br_u_5408 b_5409 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when (not b_5409) -> (k_main_x_u_3938 ()).
  f_5405 s__r_main00_4104 s__r_main01_4104 s__r_main1_4104 -> end.
  f_g_5390 i_1011 s0_2460 s1_2460 set_flag_2461 s0_2464 s1_2464 set_flag_2465 x_1012 k_g_3308 ->
      (k_g_3308 s0_2464 s1_2464 (x_1012 - i_1011)).
  f_life_5394 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when 
      (x_3760 > 0) -> (br_f_life_5406 (x_1028 < 0) s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760).
  f_life_5394 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when 
      (not (x_3760 > 0)) -> (life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757).
  f_life_5395 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
      (walk_1021 x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 s__r_g1_3431
       (f_life_5396 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757)).
  f_life_5396 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_app00_3836 
  s__r_app01_3836 s__r_app1_3836 ->
      (ha1_2305 s__r_app00_3836 s__r_app01_3836 set_flag_2615 s__r_app1_3836 k_life_3757).
  f_life_5397 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
      (run_1024 x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 s__r_g1_3431
       (f_life_5398 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757)).
  f_life_5398 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_app00_3887 
  s__r_app01_3887 s__r_app1_3887 ->
      (ha2_2302 s__r_app00_3887 s__r_app01_3887 set_flag_2615 s__r_app1_3887 k_life_3757).
  f_main_5401 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 x_4003 ->
      (sp_2670 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003
       (f_main_5402 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_3917)).
  f_main_5402 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_3917 sp00_4002 sp01_4002 sp1_4002 ->
      (rand_int (f_main_5403 s0_2657 s1_2657 set_flag_2658 sp00_4002 sp01_4002 sp1_4002 x_2295 x_4003 k_main_3917)).
  f_main_5403 s0_2657 s1_2657 set_flag_2658 sp00_4002 sp01_4002 sp1_4002 x_2295 x_4003 k_main_3917 x_4001 ->
      (life_2300 sp00_4002 sp01_4002 true x_4001 k_main_3917).
  f_main_5404 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 x_4966 ->
      (life_2300 false false true x_4966 k_main_3917).
  f_run_5392 s0_2583 s1_2583 set_flag_2584 x_1025 f_1026 k_run_3654 s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 ->
      (f_1026 s__r_f00_3737 s__r_f01_3737 set_flag_2584 s__r_f1_3737
       (f_run_5393 s0_2583 s1_2583 s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 set_flag_2584 x_1025 f_1026 k_run_3654)).
  f_run_5393 s0_2583 s1_2583 s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 set_flag_2584 x_1025 f_1026 k_run_3654 
  s__r_f00_3736 s__r_f01_3736 s__r_f1_3736 ->
      (run_1024 s__r_f1_3736 s__r_f00_3736 s__r_f01_3736 set_flag_2584 f_1026 k_run_3654).
  f_walk_5391 s0_2554 s1_2554 set_flag_2555 x_1022 f_1023 k_walk_3561 s__r_f00_3629 s__r_f01_3629 s__r_f1_3629 ->
      (walk_1021 s__r_f1_3629 s__r_f00_3629 s__r_f01_3629 set_flag_2555 f_1023 k_walk_3561).
  f_x_5399 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_3921 u_3955 ->
      (rand_int (f_x_5400 s0_2657 s1_2657 set_flag_2658 u_3955 x_2295 k_main_x_3921)).
  f_x_5400 s0_2657 s1_2657 set_flag_2658 u_3955 x_2295 k_main_x_3921 x_3943 -> (k_main_x_3921 (x_3943 = 0)).
  fail_5410 b k -> {fail} => (k ()).
  g_1010 s0_2460 s1_2460 set_flag_2461 i_1011 k_g_3290 ->
      (k_g_3290 s0_2460 s1_2460 (f_g_5390 i_1011 s0_2460 s1_2460 set_flag_2461)).
  ha1_2305 s0_2510 s1_2510 set_flag_2511 x_1018 k_ha1_3454 -> _|_.
  ha2_2302 s0_2531 s1_2531 set_flag_2532 x_1020 k_ha2_3505 -> _|_.
  life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 ->
      (rand_int (f_life_5394 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757)).
  main_1029 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 when set_flag_2658 ->
      (x_2659 s0_2657 s1_2657 set_flag_2658 x_2295 (f_main_5401 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917)).
  main_1029 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 when (not set_flag_2658) ->
      (rand_int (f_main_5404 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917)).
  run_1024 x_1025 s0_2583 s1_2583 set_flag_2584 f_1026 k_run_3654 when 
      (x_1025 < 0) -> (k_run_3654 s0_2583 true x_1025).
  run_1024 x_1025 s0_2583 s1_2583 set_flag_2584 f_1026 k_run_3654 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_2583 true set_flag_2584 x_1025 (f_run_5392 s0_2583 s1_2583 set_flag_2584 x_1025 f_1026 k_run_3654)).
  sp_2670 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_sp_3977 when x_4003 -> (k_main_sp_3977 false false ()).
  sp_2670 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_sp_3977 when 
      (not x_4003) -> (k_main_sp_3977 s0_2657 s1_2657 ()).
  u_2663 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when s1_2657 ->
      (br_u_5408 (not s0_2657) s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938).
  u_2663 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when (not s1_2657) -> (k_main_x_u_3938 ()).
  walk_1021 x_1022 s0_2554 s1_2554 set_flag_2555 f_1023 k_walk_3561 when 
      (x_1022 < 0) -> (k_walk_3561 s0_2554 true x_1022).
  walk_1021 x_1022 s0_2554 s1_2554 set_flag_2555 f_1023 k_walk_3561 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_2554 true set_flag_2555 x_1022 (f_walk_5391 s0_2554 s1_2554 set_flag_2555 x_1022 f_1023 k_walk_3561)).
  x_2659 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_3921 ->
      (u_2663 s0_2657 s1_2657 set_flag_2658 x_2295 (f_x_5399 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_3921)).
Types:
  main_5389 : X
  br_f_life_5406 : (bool -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_5408 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_life_5394 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_5410 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool -> int -> (bool -> bool -> (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> X)
  main_1029 : (bool -> bool -> bool -> unit -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X) -> (bool -> bool -> int -> X) -> X)
  sp_2670 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_2663 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X) -> (bool -> bool -> int -> X) -> X)

(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_5389 ... --> 
  main_1029 [1/2] ... --> 
  x_2659 ... --> 
  u_2663 [1/2] ... --> 
  br_u_5408 [1/2] ... --> 
  fail_5410 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0

(0-3) Checking counterexample ... DONE!

(0-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0

Program with abstraction types (CEGAR-cycle 1)::
Main: main_5389
  main_5389 -> (main_1029 false false false () f_5405).
  br_f_life_5406 b_5407 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when b_5407 ->
      (g_1010 s0_2614 true set_flag_2615 1 (f_life_5395 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757)).
  br_f_life_5406 b_5407 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when 
      (not b_5407) ->
      (g_1010 s0_2614 true set_flag_2615 1 (f_life_5397 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757)).
  br_u_5408 b_5409 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when b_5409 ->
      (fail_5410 true k_main_x_u_3938).
  br_u_5408 b_5409 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when (not b_5409) -> (k_main_x_u_3938 ()).
  f_5405 s__r_main00_4104 s__r_main01_4104 s__r_main1_4104 -> end.
  f_g_5390 i_1011 s0_2460 s1_2460 set_flag_2461 s0_2464 s1_2464 set_flag_2465 x_1012 k_g_3308 ->
      (k_g_3308 s0_2464 s1_2464 (x_1012 - i_1011)).
  f_life_5394 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when 
      (x_3760 > 0) -> (br_f_life_5406 (x_1028 < 0) s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760).
  f_life_5394 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 x_3760 when 
      (not (x_3760 > 0)) -> (life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757).
  f_life_5395 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
      (walk_1021 x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 s__r_g1_3431
       (f_life_5396 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757)).
  f_life_5396 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_app00_3836 
  s__r_app01_3836 s__r_app1_3836 ->
      (ha1_2305 s__r_app00_3836 s__r_app01_3836 set_flag_2615 s__r_app1_3836 k_life_3757).
  f_life_5397 s0_2614 s1_2614 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_g00_3431 s__r_g01_3431 s__r_g1_3431 ->
      (run_1024 x_1028 s__r_g00_3431 s__r_g01_3431 set_flag_2615 s__r_g1_3431
       (f_life_5398 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757)).
  f_life_5398 s0_2614 s1_2614 s__r_g00_3431 s__r_g01_3431 set_flag_2615 x_1028 x_3760 k_life_3757 s__r_app00_3887 
  s__r_app01_3887 s__r_app1_3887 ->
      (ha2_2302 s__r_app00_3887 s__r_app01_3887 set_flag_2615 s__r_app1_3887 k_life_3757).
  f_main_5401 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 x_4003 ->
      (sp_2670 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003
       (f_main_5402 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_3917)).
  f_main_5402 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_3917 sp00_4002 sp01_4002 sp1_4002 ->
      (rand_int (f_main_5403 s0_2657 s1_2657 set_flag_2658 sp00_4002 sp01_4002 sp1_4002 x_2295 x_4003 k_main_3917)).
  f_main_5403 s0_2657 s1_2657 set_flag_2658 sp00_4002 sp01_4002 sp1_4002 x_2295 x_4003 k_main_3917 x_4001 ->
      (life_2300 sp00_4002 sp01_4002 true x_4001 k_main_3917).
  f_main_5404 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 x_4966 ->
      (life_2300 false false true x_4966 k_main_3917).
  f_run_5392 s0_2583 s1_2583 set_flag_2584 x_1025 f_1026 k_run_3654 s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 ->
      (f_1026 s__r_f00_3737 s__r_f01_3737 set_flag_2584 s__r_f1_3737
       (f_run_5393 s0_2583 s1_2583 s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 set_flag_2584 x_1025 f_1026 k_run_3654)).
  f_run_5393 s0_2583 s1_2583 s__r_f00_3737 s__r_f01_3737 s__r_f1_3737 set_flag_2584 x_1025 f_1026 k_run_3654 
  s__r_f00_3736 s__r_f01_3736 s__r_f1_3736 ->
      (run_1024 s__r_f1_3736 s__r_f00_3736 s__r_f01_3736 set_flag_2584 f_1026 k_run_3654).
  f_walk_5391 s0_2554 s1_2554 set_flag_2555 x_1022 f_1023 k_walk_3561 s__r_f00_3629 s__r_f01_3629 s__r_f1_3629 ->
      (walk_1021 s__r_f1_3629 s__r_f00_3629 s__r_f01_3629 set_flag_2555 f_1023 k_walk_3561).
  f_x_5399 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_3921 u_3955 ->
      (rand_int (f_x_5400 s0_2657 s1_2657 set_flag_2658 u_3955 x_2295 k_main_x_3921)).
  f_x_5400 s0_2657 s1_2657 set_flag_2658 u_3955 x_2295 k_main_x_3921 x_3943 -> (k_main_x_3921 (x_3943 = 0)).
  fail_5410 b k -> {fail} => (k ()).
  g_1010 s0_2460 s1_2460 set_flag_2461 i_1011 k_g_3290 ->
      (k_g_3290 s0_2460 s1_2460 (f_g_5390 i_1011 s0_2460 s1_2460 set_flag_2461)).
  ha1_2305 s0_2510 s1_2510 set_flag_2511 x_1018 k_ha1_3454 -> _|_.
  ha2_2302 s0_2531 s1_2531 set_flag_2532 x_1020 k_ha2_3505 -> _|_.
  life_2300 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757 ->
      (rand_int (f_life_5394 s0_2614 s1_2614 set_flag_2615 x_1028 k_life_3757)).
  main_1029 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 when set_flag_2658 ->
      (x_2659 s0_2657 s1_2657 set_flag_2658 x_2295 (f_main_5401 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917)).
  main_1029 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917 when (not set_flag_2658) ->
      (rand_int (f_main_5404 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_3917)).
  run_1024 x_1025 s0_2583 s1_2583 set_flag_2584 f_1026 k_run_3654 when 
      (x_1025 < 0) -> (k_run_3654 s0_2583 true x_1025).
  run_1024 x_1025 s0_2583 s1_2583 set_flag_2584 f_1026 k_run_3654 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_2583 true set_flag_2584 x_1025 (f_run_5392 s0_2583 s1_2583 set_flag_2584 x_1025 f_1026 k_run_3654)).
  sp_2670 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_sp_3977 when x_4003 -> (k_main_sp_3977 false false ()).
  sp_2670 s0_2657 s1_2657 set_flag_2658 x_2295 x_4003 k_main_sp_3977 when 
      (not x_4003) -> (k_main_sp_3977 s0_2657 s1_2657 ()).
  u_2663 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when s1_2657 ->
      (br_u_5408 (not s0_2657) s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938).
  u_2663 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_u_3938 when (not s1_2657) -> (k_main_x_u_3938 ()).
  walk_1021 x_1022 s0_2554 s1_2554 set_flag_2555 f_1023 k_walk_3561 when 
      (x_1022 < 0) -> (k_walk_3561 s0_2554 true x_1022).
  walk_1021 x_1022 s0_2554 s1_2554 set_flag_2555 f_1023 k_walk_3561 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_2554 true set_flag_2555 x_1022 (f_walk_5391 s0_2554 s1_2554 set_flag_2555 x_1022 f_1023 k_walk_3561)).
  x_2659 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_3921 ->
      (u_2663 s0_2657 s1_2657 set_flag_2658 x_2295 (f_x_5399 s0_2657 s1_2657 set_flag_2658 x_2295 k_main_x_3921)).
Types:
  main_5389 : X
  br_f_life_5406 : (bool -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_5408 : (bool -> bool -> bool -> bool -> unit -> (unit -> X) -> X)
  f_life_5394 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_5410 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool -> int -> (bool -> bool -> (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> X)
  main_1029 : (bool -> bool -> x_4:bool -> unit[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X) -> (bool -> bool -> int -> X) -> X)
  sp_2670 : (bool -> bool -> bool -> unit -> bool -> (bool -> bool -> unit -> X) -> X)
  u_2663 : (bool -> bool -> bool -> unit -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               (bool -> bool -> bool -> int -> (bool -> bool -> int -> X) -> X) -> (bool -> bool -> int -> X) -> X)

(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_7085:(bool * bool)) (set_flag_7086:bool) (p_x_7087:int) (i_1011:int) =
   (s_7085, (fun (s_7090:(bool * bool)) (set_flag_7091:bool) (p_x_7092:int) (x_1012:int) -> (s_7090, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_7106:(bool * bool)) (set_flag_7107:bool) (
             p_x_7108:int) (i_1016:int) =
   let s__u_7113 = ((fst s_7106, true), ()) in
   let s_7114 = fst s__u_7113 in
   let u_2310 = snd s__u_7113 in
   let s__r_g_7119 = g_1010 s_7114 set_flag_7107 0 i_1016 in
   let s_7120 = fst s__r_g_7119 in
   let r_g_2442 = snd s__r_g_7119 in
   f_1014 x_1015 s_7120 set_flag_7107 0 r_g_2442
 in
 let rec ha1_2305 (s_7138:(bool * bool)) (set_flag_7139:bool) (p_x_7140:int) (x_1018:int) =
   let s__u_7145 = ((fst s_7138, true), ()) in
   let s_7146 = fst s__u_7145 in
   let u_2306 = snd s__u_7145 in
   let s__u_7151 = ((true, snd s_7146), ()) in
   let s_7152 = fst s__u_7151 in
   let u_2307 = snd s__u_7151 in
   ha1_2305 s_7152 set_flag_7139 0 x_1018
 in
 let rec ha2_2302 (s_7160:(bool * bool)) (set_flag_7161:bool) (p_x_7162:int) (x_1020:int) =
   let s__u_7167 = ((fst s_7160, true), ()) in
   let s_7168 = fst s__u_7167 in
   let u_2303 = snd s__u_7167 in
   let s__u_7173 = ((true, snd s_7168), ()) in
   let s_7174 = fst s__u_7173 in
   let u_2304 = snd s__u_7173 in
   ha2_2302 s_7174 set_flag_7161 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_7184:(bool * bool)) (set_flag_7185:bool) (
                  p_x_7186:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_7191 = ((fst s_7184, true), ()) in
   let s_7192 = fst s__u_7191 in
   let u_2180 = snd s__u_7191 in
   if x_1022 < 0
   then
     (s_7192, x_1022)
   else
     let s__r_f_7197 = f_1023 s_7192 set_flag_7185 0 x_1022 in
     let s_7198 = fst s__r_f_7197 in
     let r_f_2443 = snd s__r_f_7197 in
     walk_1021 r_f_2443 s_7198 set_flag_7185 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_7214:(bool * bool)) (set_flag_7215:bool) (
                 p_x_7216:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_7221 = ((fst s_7214, true), ()) in
   let s_7222 = fst s__u_7221 in
   let u_2234 = snd s__u_7221 in
   if x_1025 < 0
   then
     (s_7222, x_1025)
   else
     let s__r_f_7227 = f_1026 s_7222 set_flag_7215 0 x_1025 in
     let s_7228 = fst s__r_f_7227 in
     let r_f_2444 = snd s__r_f_7227 in
     let s__r_f_7231 = f_1026 s_7228 set_flag_7215 0 r_f_2444 in
     let s_7232 = fst s__r_f_7231 in
     let r_f_2445 = snd s__r_f_7231 in
     run_1024 r_f_2445 s_7232 set_flag_7215 0 f_1026
 in
 let rec life_2300 (s_7246:(bool * bool)) (set_flag_7247:bool) (p_x_7248:int) (x_1028:int) =
   if set_flag_7247
   then
     let x_7249 = let u_7254 = if snd s_7246 && not (fst s_7246) then assert false in
                  rand_int () = 0 in
     let sp_7263 = if x_7249 then ((false, false), (x_1028)) else (s_7246, (p_x_7248)) in
     let s_7250 = fst sp_7263 in
     let p_x_7252 = #0 (snd sp_7263) in
     if rand_int () > 0
     then
       let s__u_7268 = ((fst s_7250, true), ()) in
       let s_7269 = fst s__u_7268 in
       let u_2301 = snd s__u_7268 in
       if x_1028 < 0
       then
         let s__r_app_7280 = app_2308 walk_1021 x_1028 s_7269 true p_x_7252 1 in
         let s_7281 = fst s__r_app_7280 in
         let r_app_2447 = snd s__r_app_7280 in
         ha1_2305 s_7281 true p_x_7252 r_app_2447
       else
         let s__r_app_7294 = app_2308 run_1024 x_1028 s_7269 true p_x_7252 1 in
         let s_7295 = fst s__r_app_7294 in
         let r_app_2446 = snd s__r_app_7294 in
         ha2_2302 s_7295 true p_x_7252 r_app_2446
     else
       life_2300 s_7250 true p_x_7252 x_1028
   else
     let sp_7302 = if true then ((false, false), (x_1028)) else (s_7246, (p_x_7248)) in
     let s_7303 = fst sp_7302 in
     let p_x_7305 = #0 (snd sp_7302) in
     if rand_int () > 0
     then
       let s__u_7306 = ((fst s_7303, true), ()) in
       let s_7307 = fst s__u_7306 in
       let u_7308 = snd s__u_7306 in
       if x_1028 < 0
       then
         let s__r_app_7312 = app_2308 walk_1021 x_1028 s_7307 true p_x_7305 1 in
         let s_7313 = fst s__r_app_7312 in
         let r_app_7314 = snd s__r_app_7312 in
         ha1_2305 s_7313 true p_x_7305 r_app_7314
       else
         let s__r_app_7309 = app_2308 run_1024 x_1028 s_7307 true p_x_7305 1 in
         let s_7310 = fst s__r_app_7309 in
         let r_app_7311 = snd s__r_app_7309 in
         ha2_2302 s_7310 true p_x_7305 r_app_7311
     else
       life_2300 s_7303 true p_x_7305 x_1028
 in
 let main_1029 (s_7320:(bool * bool)) (set_flag_7321:bool) (p_x_7322:int) (x_2295:unit) =
   life_2300 s_7320 set_flag_7321 0 (rand_int ())
 in
 let s__r_main_7327 = main_1029 (false, false) false 0 () in
 let s_7328 = fst s__r_main_7327 in
 let r_main_2448 = snd s__r_main_7327 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_7085:(bool * bool)) (set_flag_7086:bool) (p_x_7087:int) (i_1011:int) =
   (s_7085, (fun (s_7090:(bool * bool)) (set_flag_7091:bool) (p_x_7092:int) (x_1012:int) -> (s_7090, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_7106:(bool * bool)) (set_flag_7107:bool) (
             p_x_7108:int) (i_1016:int) =
   let s__u_7113 = ((fst s_7106, true), ()) in
   let s_7114 = fst s__u_7113 in
   let s__r_g_7119 = g_1010 s_7114 set_flag_7107 0 i_1016 in
   let s_7120 = fst s__r_g_7119 in
   let r_g_2442 = snd s__r_g_7119 in
   f_1014 x_1015 s_7120 set_flag_7107 0 r_g_2442
 in
 let rec ha1_2305 (s_7138:(bool * bool)) (set_flag_7139:bool) (p_x_7140:int) (x_1018:int) =
   let s__u_7145 = ((fst s_7138, true), ()) in
   let s_7146 = fst s__u_7145 in
   let s__u_7151 = ((true, snd s_7146), ()) in
   let s_7152 = fst s__u_7151 in
   ha1_2305 s_7152 set_flag_7139 0 x_1018
 in
 let rec ha2_2302 (s_7160:(bool * bool)) (set_flag_7161:bool) (p_x_7162:int) (x_1020:int) =
   let s__u_7167 = ((fst s_7160, true), ()) in
   let s_7168 = fst s__u_7167 in
   let s__u_7173 = ((true, snd s_7168), ()) in
   let s_7174 = fst s__u_7173 in
   ha2_2302 s_7174 set_flag_7161 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_7184:(bool * bool)) (set_flag_7185:bool) (
                  p_x_7186:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_7191 = ((fst s_7184, true), ()) in
   let s_7192 = fst s__u_7191 in
   if x_1022 < 0
   then
     (s_7192, x_1022)
   else
     let s__r_f_7197 = f_1023 s_7192 set_flag_7185 0 x_1022 in
     let s_7198 = fst s__r_f_7197 in
     let r_f_2443 = snd s__r_f_7197 in
     walk_1021 r_f_2443 s_7198 set_flag_7185 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_7214:(bool * bool)) (set_flag_7215:bool) (
                 p_x_7216:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_7221 = ((fst s_7214, true), ()) in
   let s_7222 = fst s__u_7221 in
   if x_1025 < 0
   then
     (s_7222, x_1025)
   else
     let s__r_f_7227 = f_1026 s_7222 set_flag_7215 0 x_1025 in
     let s_7228 = fst s__r_f_7227 in
     let r_f_2444 = snd s__r_f_7227 in
     let s__r_f_7231 = f_1026 s_7228 set_flag_7215 0 r_f_2444 in
     let s_7232 = fst s__r_f_7231 in
     let r_f_2445 = snd s__r_f_7231 in
     run_1024 r_f_2445 s_7232 set_flag_7215 0 f_1026
 in
 let rec life_2300 (s_7246:(bool * bool)) (set_flag_7247:bool) (p_x_7248:int) (x_1028:int) =
   if set_flag_7247
   then
     let x_7249 = let u_7254 = if snd s_7246 && not (fst s_7246) then assert false in
                  rand_int () = 0 in
     let sp_7263 = if x_7249 then ((false, false), (x_1028)) else (s_7246, (p_x_7248)) in
     let s_7250 = fst sp_7263 in
     let p_x_7252 = #0 (snd sp_7263) in
     if rand_int () > 0
     then
       let s__u_7268 = ((fst s_7250, true), ()) in
       let s_7269 = fst s__u_7268 in
       if x_1028 < 0
       then
         let s__r_app_7280 = app_2308 walk_1021 x_1028 s_7269 true p_x_7252 1 in
         let s_7281 = fst s__r_app_7280 in
         let r_app_2447 = snd s__r_app_7280 in
         ha1_2305 s_7281 true p_x_7252 r_app_2447
       else
         let s__r_app_7294 = app_2308 run_1024 x_1028 s_7269 true p_x_7252 1 in
         let s_7295 = fst s__r_app_7294 in
         let r_app_2446 = snd s__r_app_7294 in
         ha2_2302 s_7295 true p_x_7252 r_app_2446
     else
       life_2300 s_7250 true p_x_7252 x_1028
   else
     let sp_7302 = if true then ((false, false), (x_1028)) else (s_7246, (p_x_7248)) in
     let s_7303 = fst sp_7302 in
     let p_x_7305 = #0 (snd sp_7302) in
     if rand_int () > 0
     then
       let s__u_7306 = ((fst s_7303, true), ()) in
       let s_7307 = fst s__u_7306 in
       if x_1028 < 0
       then
         let s__r_app_7312 = app_2308 walk_1021 x_1028 s_7307 true p_x_7305 1 in
         let s_7313 = fst s__r_app_7312 in
         let r_app_7314 = snd s__r_app_7312 in
         ha1_2305 s_7313 true p_x_7305 r_app_7314
       else
         let s__r_app_7309 = app_2308 run_1024 x_1028 s_7307 true p_x_7305 1 in
         let s_7310 = fst s__r_app_7309 in
         let r_app_7311 = snd s__r_app_7309 in
         ha2_2302 s_7310 true p_x_7305 r_app_7311
     else
       life_2300 s_7303 true p_x_7305 x_1028
 in
 let main_1029 (s_7320:(bool * bool)) (set_flag_7321:bool) (p_x_7322:int) (x_2295:unit) =
   life_2300 s_7320 set_flag_7321 0 (rand_int ())
 in
 let s__r_main_7327 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_7327 in
 r_main_2448

###inline:
 let g_1010 (s_7085:(bool * bool)) (set_flag_7086:bool) (p_x_7087:int) (i_1011:int) =
   (s_7085, (fun (s_7090:(bool * bool)) (set_flag_7091:bool) (p_x_7092:int) (x_1012:int) -> (s_7090, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_7106:(bool * bool)) (set_flag_7107:bool) (
             p_x_7108:int) (i_1016:int) =
   let s__u_7113 = ((fst s_7106, true), ()) in
   let s__r_g_7119 = g_1010 (fst s__u_7113) set_flag_7107 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_7119) set_flag_7107 0 (snd s__r_g_7119)
 in
 let rec ha1_2305 (s_7138:(bool * bool)) (set_flag_7139:bool) (p_x_7140:int) (x_1018:int) =
   let s__u_7145 = ((fst s_7138, true), ()) in
   let s__u_7151 = ((true, snd (fst s__u_7145)), ()) in
   ha1_2305 (fst s__u_7151) set_flag_7139 0 x_1018
 in
 let rec ha2_2302 (s_7160:(bool * bool)) (set_flag_7161:bool) (p_x_7162:int) (x_1020:int) =
   let s__u_7167 = ((fst s_7160, true), ()) in
   let s__u_7173 = ((true, snd (fst s__u_7167)), ()) in
   ha2_2302 (fst s__u_7173) set_flag_7161 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_7184:(bool * bool)) (set_flag_7185:bool) (
                  p_x_7186:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_7191 = ((fst s_7184, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_7191, x_1022)
   else
     let s__r_f_7197 = f_1023 (fst s__u_7191) set_flag_7185 0 x_1022 in
     walk_1021 (snd s__r_f_7197) (fst s__r_f_7197) set_flag_7185 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_7214:(bool * bool)) (set_flag_7215:bool) (
                 p_x_7216:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_7221 = ((fst s_7214, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_7221, x_1025)
   else
     let s__r_f_7227 = f_1026 (fst s__u_7221) set_flag_7215 0 x_1025 in
     let s__r_f_7231 = f_1026 (fst s__r_f_7227) set_flag_7215 0 (snd s__r_f_7227) in
     run_1024 (snd s__r_f_7231) (fst s__r_f_7231) set_flag_7215 0 f_1026
 in
 let rec life_2300 (s_7246:(bool * bool)) (set_flag_7247:bool) (p_x_7248:int) (x_1028:int) =
   if set_flag_7247
   then
     let x_7249 = let u_7254 = if snd s_7246 && not (fst s_7246) then assert false in
                  rand_int () = 0 in
     let sp_7263 = if x_7249 then ((false, false), (x_1028)) else (s_7246, (p_x_7248)) in
     let p_x_7252 = #0 (snd sp_7263) in
     if rand_int () > 0
     then
       let s__u_7268 = ((fst (fst sp_7263), true), ()) in
       if x_1028 < 0
       then
         let s__r_app_7280 = app_2308 walk_1021 x_1028 (fst s__u_7268) true p_x_7252 1 in
         ha1_2305 (fst s__r_app_7280) true p_x_7252 (snd s__r_app_7280)
       else
         let s__r_app_7294 = app_2308 run_1024 x_1028 (fst s__u_7268) true p_x_7252 1 in
         ha2_2302 (fst s__r_app_7294) true p_x_7252 (snd s__r_app_7294)
     else
       life_2300 (fst sp_7263) true p_x_7252 x_1028
   else
     let sp_7302 = if true then ((false, false), (x_1028)) else (s_7246, (p_x_7248)) in
     let p_x_7305 = #0 (snd sp_7302) in
     if rand_int () > 0
     then
       let s__u_7306 = ((fst (fst sp_7302), true), ()) in
       if x_1028 < 0
       then
         let s__r_app_7312 = app_2308 walk_1021 x_1028 (fst s__u_7306) true p_x_7305 1 in
         ha1_2305 (fst s__r_app_7312) true p_x_7305 (snd s__r_app_7312)
       else
         let s__r_app_7309 = app_2308 run_1024 x_1028 (fst s__u_7306) true p_x_7305 1 in
         ha2_2302 (fst s__r_app_7309) true p_x_7305 (snd s__r_app_7309)
     else
       life_2300 (fst sp_7302) true p_x_7305 x_1028
 in
 let main_1029 (s_7320:(bool * bool)) (set_flag_7321:bool) (p_x_7322:int) (x_2295:unit) =
   life_2300 s_7320 set_flag_7321 0 (rand_int ())
 in
 let s__r_main_7327 = main_1029 (false, false) false 0 () in
 snd s__r_main_7327

###CPS:
 (let g_1010 s_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 =
    k_g_8273 (s_7085, (fun s_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 -> k_g_8293 (s_7090, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_7106 set_flag_7107 p_x_7108 i_1016 k_app_8328 =
    let s__u_7113 k_app_s__u_8332 = k_app_s__u_8332 ((fst s_7106, true), ()) in
    s__u_7113
      (fun s__u_8433 ->
         let s__r_g_7119 k_app_s__r_g_8364 = (g_1010 (fst s__u_8433) set_flag_7107 0) i_1016 k_app_s__r_g_8364 in
         s__r_g_7119
           (fun s__r_g_8432 -> (f_1014 x_1015 (fst s__r_g_8432) set_flag_7107 0) (snd s__r_g_8432) k_app_8328))
  in
  let rec ha1_2305 s_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 =
    let s__u_7145 k_ha1_s__u_8462 = k_ha1_s__u_8462 ((fst s_7138, true), ()) in
    s__u_7145
      (fun s__u_8501 ->
         let s__u_7151 k_ha1_s__u_8476 = k_ha1_s__u_8476 ((true, snd (fst s__u_8501)), ()) in
         s__u_7151 (fun s__u_8500 -> (ha1_2305 (fst s__u_8500) set_flag_7139 0) x_1018 k_ha1_8458))
  in
  let rec ha2_2302 s_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 =
    let s__u_7167 k_ha2_s__u_8515 = k_ha2_s__u_8515 ((fst s_7160, true), ()) in
    s__u_7167
      (fun s__u_8554 ->
         let s__u_7173 k_ha2_s__u_8529 = k_ha2_s__u_8529 ((true, snd (fst s__u_8554)), ()) in
         s__u_7173 (fun s__u_8553 -> (ha2_2302 (fst s__u_8553) set_flag_7161 0) x_1020 k_ha2_8511))
  in
  let rec walk_1021 x_1022 s_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 =
    let s__u_7191 k_walk_s__u_8574 = k_walk_s__u_8574 ((fst s_7184, true), ()) in
    s__u_7191
      (fun s__u_8649 ->
         if x_1022 < 0
         then
           k_walk_8570 (fst s__u_8649, x_1022)
         else
           let s__r_f_7197 k_walk_s__r_f_8600 = (f_1023 (fst s__u_8649) set_flag_7185 0) x_1022 k_walk_s__r_f_8600 in
           s__r_f_7197
             (fun s__r_f_8644 -> (walk_1021 (snd s__r_f_8644) (fst s__r_f_8644) set_flag_7185 0) f_1023 k_walk_8570))
  in
  let rec run_1024 x_1025 s_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 =
    let s__u_7221 k_run_s__u_8676 = k_run_s__u_8676 ((fst s_7214, true), ()) in
    s__u_7221
      (fun s__u_8767 ->
         if x_1025 < 0
         then
           k_run_8672 (fst s__u_8767, x_1025)
         else
           let s__r_f_7227 k_run_s__r_f_8702 = (f_1026 (fst s__u_8767) set_flag_7215 0) x_1025 k_run_s__r_f_8702 in
           s__r_f_7227
             (fun s__r_f_8762 ->
                let s__r_f_7231 k_run_s__r_f_8717 =
                  (f_1026 (fst s__r_f_8762) set_flag_7215 0) (snd s__r_f_8762) k_run_s__r_f_8717
                in
                s__r_f_7231
                  (fun s__r_f_8761 -> (run_1024 (snd s__r_f_8761) (fst s__r_f_8761) set_flag_7215 0) f_1026 k_run_8672)))
  in
  let rec life_2300 s_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 =
    if set_flag_7247
    then
      let x_7249 k_life_x_8788 =
        let u_7254 k_life_x_u_8805 =
          if snd s_7246
          then
            if not (fst s_7246) then <|fail|> () k_life_x_u_8805 else k_life_x_u_8805 ()
          else
            k_life_x_u_8805 ()
        in
        u_7254 (fun u_8822 -> rand_int_cps () (fun x_8810 -> k_life_x_8788 (x_8810 = 0)))
      in
      x_7249
        (fun x_9023 ->
           let sp_7263 k_life_sp_8852 =
             if x_9023
             then
               k_life_sp_8852 ((false, false), (x_1028))
             else
               k_life_sp_8852 (s_7246, (p_x_7248))
           in
           sp_7263
             (fun sp_9022 ->
                rand_int_cps
                  () 
                  (fun x_8859 ->
                     if x_8859 > 0
                     then
                       let s__u_7268 k_life_s__u_8874 = k_life_s__u_8874 ((fst (fst sp_9022), true), ()) in
                       s__u_7268
                         (fun s__u_9003 ->
                            if x_1028 < 0
                            then
                              let s__r_app_7280 k_life_s__r_app_8922 =
                                (app_2308 walk_1021 x_1028 (fst s__u_9003) true (#0 (snd sp_9022)))
                                  1 k_life_s__r_app_8922
                              in
                              s__r_app_7280
                                (fun s__r_app_8941 ->
                                   (ha1_2305 (fst s__r_app_8941) true (#0 (snd sp_9022)))
                                     (snd s__r_app_8941) k_life_8784)
                            else
                              let s__r_app_7294 k_life_s__r_app_8979 =
                                (app_2308 run_1024 x_1028 (fst s__u_9003) true (#0 (snd sp_9022)))
                                  1 k_life_s__r_app_8979
                              in
                              s__r_app_7294
                                (fun s__r_app_8998 ->
                                   (ha2_2302 (fst s__r_app_8998) true (#0 (snd sp_9022)))
                                     (snd s__r_app_8998) k_life_8784))
                     else
                       (life_2300 (fst sp_9022) true (#0 (snd sp_9022))) x_1028 k_life_8784)))
    else
      let sp_7302 k_life_sp_9053 = k_life_sp_9053 ((false, false), (x_1028)) in
      sp_7302
        (fun sp_9223 ->
           rand_int_cps
             () 
             (fun x_9060 ->
                if x_9060 > 0
                then
                  let s__u_7306 k_life_s__u_9075 = k_life_s__u_9075 ((fst (fst sp_9223), true), ()) in
                  s__u_7306
                    (fun s__u_9204 ->
                       if x_1028 < 0
                       then
                         let s__r_app_7312 k_life_s__r_app_9123 =
                           (app_2308 walk_1021 x_1028 (fst s__u_9204) true (#0 (snd sp_9223)))
                             1 k_life_s__r_app_9123
                         in
                         s__r_app_7312
                           (fun s__r_app_9142 ->
                              (ha1_2305 (fst s__r_app_9142) true (#0 (snd sp_9223)))
                                (snd s__r_app_9142) k_life_8784)
                       else
                         let s__r_app_7309 k_life_s__r_app_9180 =
                           (app_2308 run_1024 x_1028 (fst s__u_9204) true (#0 (snd sp_9223)))
                             1 k_life_s__r_app_9180
                         in
                         s__r_app_7309
                           (fun s__r_app_9199 ->
                              (ha2_2302 (fst s__r_app_9199) true (#0 (snd sp_9223)))
                                (snd s__r_app_9199) k_life_8784))
                else
                  (life_2300 (fst sp_9223) true (#0 (snd sp_9223))) x_1028 k_life_8784))
  in
  let main_1029 s_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 =
    rand_int_cps () (fun x_9260 -> (life_2300 s_7320 set_flag_7321 0) x_9260 k_main_9237)
  in
  let s__r_main_7327 k_s__r_main_9321 = (((main_1029 (false, false)) false) 0) () k_s__r_main_9321 in
  s__r_main_7327 (fun s__r_main_9327 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_7085 s1_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 =
    k_g_8273
      s0_7085 s1_7085 
      (fun s0_7090 s1_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 -> k_g_8293 s0_7090 s1_7090 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_7138 s1_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 =
    ha1_2305 true true set_flag_7139 0 x_1018 k_ha1_8458
  in
  let rec ha2_2302 s0_7160 s1_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 =
    ha2_2302 true true set_flag_7161 0 x_1020 k_ha2_8511
  in
  let rec walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 =
    if x_1022 < 0
    then
      k_walk_8570 s0_7184 true x_1022
    else
      f_1023
        s0_7184 true set_flag_7185 0 x_1022 
        (fun s__r_f00_8644 s__r_f01_8644 s__r_f1_8644 ->
           walk_1021 s__r_f1_8644 s__r_f00_8644 s__r_f01_8644 set_flag_7185 0 f_1023 k_walk_8570)
  in
  let rec run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 =
    if x_1025 < 0
    then
      k_run_8672 s0_7214 true x_1025
    else
      f_1026
        s0_7214 true set_flag_7215 0 x_1025 
        (fun s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 ->
           f_1026
             s__r_f00_8762 s__r_f01_8762 set_flag_7215 0 s__r_f1_8762 
             (fun s__r_f00_8761 s__r_f01_8761 s__r_f1_8761 ->
                run_1024 s__r_f1_8761 s__r_f00_8761 s__r_f01_8761 set_flag_7215 0 f_1026 k_run_8672))
  in
  let rec life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 =
    if set_flag_7247
    then
      let x_7249 k_life_x_8788 =
        let u_7254 k_life_x_u_8805 =
          if s1_7246
          then
            if not s0_7246 then <|fail|> () k_life_x_u_8805 else k_life_x_u_8805 ()
          else
            k_life_x_u_8805 ()
        in
        u_7254 (fun u_8822 -> rand_int_cps () (fun x_8810 -> k_life_x_8788 (x_8810 = 0)))
      in
      x_7249
        (fun x_9023 ->
           let sp_7263 k_life_sp_8852 =
             if x_9023 then k_life_sp_8852 false false x_1028 else k_life_sp_8852 s0_7246 s1_7246 p_x_7248
           in
           sp_7263
             (fun sp00_9022 sp01_9022 sp10_9022 ->
                rand_int_cps
                  () 
                  (fun x_8859 ->
                     if x_8859 > 0
                     then
                       if x_1028 < 0
                       then
                         g_1010
                           sp00_9022 true true 0 1 
                           (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                              walk_1021
                                x_1028 s__r_g00_8432 s__r_g01_8432 true 
                                0 s__r_g1_8432 
                                (fun s__r_app00_8941 s__r_app01_8941 s__r_app1_8941 ->
                                   ha1_2305
                                     s__r_app00_8941 s__r_app01_8941 
                                     true sp10_9022 s__r_app1_8941 k_life_8784))
                       else
                         g_1010
                           sp00_9022 true true 0 1 
                           (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                              run_1024
                                x_1028 s__r_g00_8432 s__r_g01_8432 true 
                                0 s__r_g1_8432 
                                (fun s__r_app00_8998 s__r_app01_8998 s__r_app1_8998 ->
                                   ha2_2302
                                     s__r_app00_8998 s__r_app01_8998 
                                     true sp10_9022 s__r_app1_8998 k_life_8784))
                     else
                       life_2300 sp00_9022 sp01_9022 true sp10_9022 x_1028 k_life_8784)))
    else
      rand_int_cps
        () 
        (fun x_9060 ->
           if x_9060 > 0
           then
             if x_1028 < 0
             then
               g_1010
                 false true true 0 1 
                 (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                    walk_1021
                      x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432 
                      (fun s__r_app00_9142 s__r_app01_9142 s__r_app1_9142 ->
                         ha1_2305
                           s__r_app00_9142 s__r_app01_9142 true x_1028 s__r_app1_9142 k_life_8784))
             else
               g_1010
                 false true true 0 1 
                 (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                    run_1024
                      x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432 
                      (fun s__r_app00_9199 s__r_app01_9199 s__r_app1_9199 ->
                         ha2_2302
                           s__r_app00_9199 s__r_app01_9199 true x_1028 s__r_app1_9199 k_life_8784))
           else
             life_2300 false false true x_1028 x_1028 k_life_8784)
  in
  let main_1029 s0_7320 s1_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 =
    rand_int_cps () (fun x_9260 -> life_2300 s0_7320 s1_7320 set_flag_7321 0 x_9260 k_main_9237)
  in
  main_1029 false false false 0 () (fun s__r_main00_9327 s__r_main01_9327 s__r_main1_9327 -> {end}) #
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_7085 s1_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 =
    k_g_8273
      s0_7085 s1_7085 
      (fun s0_7090 s1_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 -> k_g_8293 s0_7090 s1_7090 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_7138 s1_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 = _|_ in
  let rec ha2_2302 s0_7160 s1_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 = _|_ in
  let rec walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 =
    if x_1022 < 0
    then
      k_walk_8570 s0_7184 true x_1022
    else
      f_1023
        s0_7184 true set_flag_7185 0 x_1022 
        (fun s__r_f00_8644 s__r_f01_8644 s__r_f1_8644 ->
           walk_1021 s__r_f1_8644 s__r_f00_8644 s__r_f01_8644 set_flag_7185 0 f_1023 k_walk_8570)
  in
  let rec run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 =
    if x_1025 < 0
    then
      k_run_8672 s0_7214 true x_1025
    else
      f_1026
        s0_7214 true set_flag_7215 0 x_1025 
        (fun s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 ->
           f_1026
             s__r_f00_8762 s__r_f01_8762 set_flag_7215 0 s__r_f1_8762 
             (fun s__r_f00_8761 s__r_f01_8761 s__r_f1_8761 ->
                run_1024 s__r_f1_8761 s__r_f00_8761 s__r_f01_8761 set_flag_7215 0 f_1026 k_run_8672))
  in
  let rec life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 =
    if set_flag_7247
    then
      let x_7249 k_life_x_8788 =
        let u_7254 k_life_x_u_8805 =
          if s1_7246
          then
            if not s0_7246 then <|fail|> () k_life_x_u_8805 else k_life_x_u_8805 ()
          else
            k_life_x_u_8805 ()
        in
        u_7254 (fun u_8822 -> rand_int_cps () (fun x_8810 -> k_life_x_8788 (x_8810 = 0)))
      in
      x_7249
        (fun x_9023 ->
           let sp_7263 k_life_sp_8852 =
             if x_9023 then k_life_sp_8852 false false x_1028 else k_life_sp_8852 s0_7246 s1_7246 p_x_7248
           in
           sp_7263
             (fun sp00_9022 sp01_9022 sp10_9022 ->
                rand_int_cps
                  () 
                  (fun x_8859 ->
                     if x_8859 > 0
                     then
                       if x_1028 < 0
                       then
                         g_1010
                           sp00_9022 true true 0 1 
                           (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                              walk_1021
                                x_1028 s__r_g00_8432 s__r_g01_8432 true 
                                0 s__r_g1_8432 
                                (fun s__r_app00_8941 s__r_app01_8941 s__r_app1_8941 ->
                                   ha1_2305
                                     s__r_app00_8941 s__r_app01_8941 
                                     true sp10_9022 s__r_app1_8941 k_life_8784))
                       else
                         g_1010
                           sp00_9022 true true 0 1 
                           (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                              run_1024
                                x_1028 s__r_g00_8432 s__r_g01_8432 true 
                                0 s__r_g1_8432 
                                (fun s__r_app00_8998 s__r_app01_8998 s__r_app1_8998 ->
                                   ha2_2302
                                     s__r_app00_8998 s__r_app01_8998 
                                     true sp10_9022 s__r_app1_8998 k_life_8784))
                     else
                       life_2300 sp00_9022 sp01_9022 true sp10_9022 x_1028 k_life_8784)))
    else
      rand_int_cps
        () 
        (fun x_9060 ->
           if x_9060 > 0
           then
             if x_1028 < 0
             then
               g_1010
                 false true true 0 1 
                 (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                    walk_1021
                      x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432 
                      (fun s__r_app00_9142 s__r_app01_9142 s__r_app1_9142 ->
                         ha1_2305
                           s__r_app00_9142 s__r_app01_9142 true x_1028 s__r_app1_9142 k_life_8784))
             else
               g_1010
                 false true true 0 1 
                 (fun s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
                    run_1024
                      x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432 
                      (fun s__r_app00_9199 s__r_app01_9199 s__r_app1_9199 ->
                         ha2_2302
                           s__r_app00_9199 s__r_app01_9199 true x_1028 s__r_app1_9199 k_life_8784))
           else
             life_2300 false false true x_1028 x_1028 k_life_8784)
  in
  let main_1029 s0_7320 s1_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 =
    rand_int_cps () (fun x_9260 -> life_2300 s0_7320 s1_7320 set_flag_7321 0 x_9260 k_main_9237)
  in
  main_1029 false false false 0 () (fun s__r_main00_9327 s__r_main01_9327 s__r_main1_9327 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 2)::
Main: main_10982
  main_10982 -> (main_1029 false false false 0 () f_11002).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when b_11006 ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when (not b_11006) ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when b_11008 ->
      (g_1010 false true true 0 1 (f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not b_11008) ->
      (g_1010 false true true 0 1 (f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when b_11004 ->
      (fail_11009 true k_life_x_u_8805).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when 
      (not b_11004) -> (k_life_x_u_8805 ()).
  f_11002 s__r_main00_9327 s__r_main01_9327 s__r_main1_9327 -> end.
  f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086 s0_7090 s1_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 ->
      (k_g_8293 s0_7090 s1_7090 (x_1012 - i_1011)).
  f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9023 ->
      (sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023
       (f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784)).
  f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784 sp00_9022 sp01_9022 sp10_9022 ->
      (rand_int
       (f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784)).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (x_8859 > 0) ->
      (br_f_life_11005 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023
       k_life_8784 x_8859).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (not (x_8859 > 0)) -> (life_2300 sp00_9022 sp01_9022 true sp10_9022 x_1028 k_life_8784).
  f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8941 s__r_app01_8941 s__r_app1_8941 ->
      (ha1_2305 s__r_app00_8941 s__r_app01_8941 true sp10_9022 s__r_app1_8941 k_life_8784).
  f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8998 s__r_app01_8998 s__r_app1_8998 ->
      (ha2_2302 s__r_app00_8998 s__r_app01_8998 true sp10_9022 s__r_app1_8998 k_life_8784).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (x_9060 > 0) -> (br_f_life_11007 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not (x_9060 > 0)) -> (life_2300 false false true x_1028 x_1028 k_life_8784).
  f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9142 s__r_app01_9142 s__r_app1_9142 ->
      (ha1_2305 s__r_app00_9142 s__r_app01_9142 true x_1028 s__r_app1_9142 k_life_8784).
  f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9199 s__r_app01_9199 s__r_app1_9199 ->
      (ha2_2302 s__r_app00_9199 s__r_app01_9199 true x_1028 s__r_app1_9199 k_life_8784).
  f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237 x_9260 ->
      (life_2300 s0_7320 s1_7320 set_flag_7321 0 x_9260 k_main_9237).
  f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 ->
      (f_1026 s__r_f00_8762 s__r_f01_8762 set_flag_7215 0 s__r_f1_8762
       (f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026
        k_run_8672)).
  f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026 k_run_8672 
  s__r_f00_8761 s__r_f01_8761 s__r_f1_8761 ->
      (run_1024 s__r_f1_8761 s__r_f00_8761 s__r_f01_8761 set_flag_7215 0 f_1026 k_run_8672).
  f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570 s__r_f00_8644 s__r_f01_8644 
  s__r_f1_8644 -> (walk_1021 s__r_f1_8644 s__r_f00_8644 s__r_f01_8644 set_flag_7185 0 f_1023 k_walk_8570).
  f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 u_8822 ->
      (rand_int (f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788)).
  f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788 x_8810 -> (k_life_x_8788 (x_8810 = 0)).
  fail_11009 b k -> {fail} => (k ()).
  g_1010 s0_7085 s1_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 ->
      (k_g_8273 s0_7085 s1_7085 (f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086)).
  ha1_2305 s0_7138 s1_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 -> _|_.
  ha2_2302 s0_7160 s1_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 -> _|_.
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when set_flag_7247 ->
      (x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when 
      (not set_flag_7247) -> (rand_int (f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  main_1029 s0_7320 s1_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 ->
      (rand_int (f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237)).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (x_1025 < 0) -> (k_run_8672 s0_7214 true x_1025).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_7214 true set_flag_7215 0 x_1025
       (f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672)).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when x_9023 ->
      (k_life_sp_8852 false false x_1028).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when 
      (not x_9023) -> (k_life_sp_8852 s0_7246 s1_7246 p_x_7248).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when s1_7246 ->
      (br_u_11003 (not s0_7246) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when (not s1_7246) -> (k_life_x_u_8805 ()).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (x_1022 < 0) -> (k_walk_8570 s0_7184 true x_1022).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_7184 true set_flag_7185 0 x_1022
       (f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570)).
  x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 ->
      (u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788)).
Types:
  main_10982 : X
  br_f_life_11005 : (bool ->
                     int ->
                     bool ->
                     bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  br_f_life_11007 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_11003 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_10991 : (int ->
                  bool -> bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  f_life_10996 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_11009 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_7263 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_7254 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_10982 ... --> 
  main_1029 ... --> 
  f_main_11001 ... --> 
  life_2300 [1/2] ... --> 
  x_7249 ... --> 
  u_7254 [1/2] ... --> 
  br_u_11003 [1/2] ... --> 
  fail_11009 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0

(2-3) Checking counterexample ... DONE!

(2-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_10982
  main_10982 -> (main_1029 false false false 0 () f_11002).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when b_11006 ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when (not b_11006) ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when b_11008 ->
      (g_1010 false true true 0 1 (f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not b_11008) ->
      (g_1010 false true true 0 1 (f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when b_11004 ->
      (fail_11009 true k_life_x_u_8805).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when 
      (not b_11004) -> (k_life_x_u_8805 ()).
  f_11002 s__r_main00_9327 s__r_main01_9327 s__r_main1_9327 -> end.
  f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086 s0_7090 s1_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 ->
      (k_g_8293 s0_7090 s1_7090 (x_1012 - i_1011)).
  f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9023 ->
      (sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023
       (f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784)).
  f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784 sp00_9022 sp01_9022 sp10_9022 ->
      (rand_int
       (f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784)).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (x_8859 > 0) ->
      (br_f_life_11005 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023
       k_life_8784 x_8859).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (not (x_8859 > 0)) -> (life_2300 sp00_9022 sp01_9022 true sp10_9022 x_1028 k_life_8784).
  f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8941 s__r_app01_8941 s__r_app1_8941 ->
      (ha1_2305 s__r_app00_8941 s__r_app01_8941 true sp10_9022 s__r_app1_8941 k_life_8784).
  f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8998 s__r_app01_8998 s__r_app1_8998 ->
      (ha2_2302 s__r_app00_8998 s__r_app01_8998 true sp10_9022 s__r_app1_8998 k_life_8784).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (x_9060 > 0) -> (br_f_life_11007 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not (x_9060 > 0)) -> (life_2300 false false true x_1028 x_1028 k_life_8784).
  f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9142 s__r_app01_9142 s__r_app1_9142 ->
      (ha1_2305 s__r_app00_9142 s__r_app01_9142 true x_1028 s__r_app1_9142 k_life_8784).
  f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9199 s__r_app01_9199 s__r_app1_9199 ->
      (ha2_2302 s__r_app00_9199 s__r_app01_9199 true x_1028 s__r_app1_9199 k_life_8784).
  f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237 x_9260 ->
      (life_2300 s0_7320 s1_7320 set_flag_7321 0 x_9260 k_main_9237).
  f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 ->
      (f_1026 s__r_f00_8762 s__r_f01_8762 set_flag_7215 0 s__r_f1_8762
       (f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026
        k_run_8672)).
  f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026 k_run_8672 
  s__r_f00_8761 s__r_f01_8761 s__r_f1_8761 ->
      (run_1024 s__r_f1_8761 s__r_f00_8761 s__r_f01_8761 set_flag_7215 0 f_1026 k_run_8672).
  f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570 s__r_f00_8644 s__r_f01_8644 
  s__r_f1_8644 -> (walk_1021 s__r_f1_8644 s__r_f00_8644 s__r_f01_8644 set_flag_7185 0 f_1023 k_walk_8570).
  f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 u_8822 ->
      (rand_int (f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788)).
  f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788 x_8810 -> (k_life_x_8788 (x_8810 = 0)).
  fail_11009 b k -> {fail} => (k ()).
  g_1010 s0_7085 s1_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 ->
      (k_g_8273 s0_7085 s1_7085 (f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086)).
  ha1_2305 s0_7138 s1_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 -> _|_.
  ha2_2302 s0_7160 s1_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 -> _|_.
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when set_flag_7247 ->
      (x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when 
      (not set_flag_7247) -> (rand_int (f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  main_1029 s0_7320 s1_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 ->
      (rand_int (f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237)).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (x_1025 < 0) -> (k_run_8672 s0_7214 true x_1025).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_7214 true set_flag_7215 0 x_1025
       (f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672)).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when x_9023 ->
      (k_life_sp_8852 false false x_1028).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when 
      (not x_9023) -> (k_life_sp_8852 s0_7246 s1_7246 p_x_7248).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when s1_7246 ->
      (br_u_11003 (not s0_7246) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when (not s1_7246) -> (k_life_x_u_8805 ()).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (x_1022 < 0) -> (k_walk_8570 s0_7184 true x_1022).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_7184 true set_flag_7185 0 x_1022
       (f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570)).
  x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 ->
      (u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788)).
Types:
  main_10982 : X
  br_f_life_11005 : (bool ->
                     int ->
                     bool ->
                     bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  br_f_life_11007 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_11003 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_10991 : (int ->
                  bool -> bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  f_life_10996 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_11009 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_7263 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_7254 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_10982 ... --> 
  main_1029 ... --> 
  f_main_11001 ... --> 
  life_2300 [2/2] ... --> 
  f_life_10996 [2/2] ... --> 
  life_2300 [1/2] ... --> 
  x_7249 ... --> 
  u_7254 [1/2] ... --> 
  br_u_11003 [1/2] ... --> 
  fail_11009 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 1; 1; 0; 0; 0; 0; 0

(3-3) Checking counterexample ... DONE!

(3-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 1; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 4)::
Main: main_10982
  main_10982 -> (main_1029 false false false 0 () f_11002).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when b_11006 ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when (not b_11006) ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when b_11008 ->
      (g_1010 false true true 0 1 (f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not b_11008) ->
      (g_1010 false true true 0 1 (f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when b_11004 ->
      (fail_11009 true k_life_x_u_8805).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when 
      (not b_11004) -> (k_life_x_u_8805 ()).
  f_11002 s__r_main00_9327 s__r_main01_9327 s__r_main1_9327 -> end.
  f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086 s0_7090 s1_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 ->
      (k_g_8293 s0_7090 s1_7090 (x_1012 - i_1011)).
  f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9023 ->
      (sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023
       (f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784)).
  f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784 sp00_9022 sp01_9022 sp10_9022 ->
      (rand_int
       (f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784)).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (x_8859 > 0) ->
      (br_f_life_11005 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023
       k_life_8784 x_8859).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (not (x_8859 > 0)) -> (life_2300 sp00_9022 sp01_9022 true sp10_9022 x_1028 k_life_8784).
  f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8941 s__r_app01_8941 s__r_app1_8941 ->
      (ha1_2305 s__r_app00_8941 s__r_app01_8941 true sp10_9022 s__r_app1_8941 k_life_8784).
  f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8998 s__r_app01_8998 s__r_app1_8998 ->
      (ha2_2302 s__r_app00_8998 s__r_app01_8998 true sp10_9022 s__r_app1_8998 k_life_8784).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (x_9060 > 0) -> (br_f_life_11007 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not (x_9060 > 0)) -> (life_2300 false false true x_1028 x_1028 k_life_8784).
  f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9142 s__r_app01_9142 s__r_app1_9142 ->
      (ha1_2305 s__r_app00_9142 s__r_app01_9142 true x_1028 s__r_app1_9142 k_life_8784).
  f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9199 s__r_app01_9199 s__r_app1_9199 ->
      (ha2_2302 s__r_app00_9199 s__r_app01_9199 true x_1028 s__r_app1_9199 k_life_8784).
  f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237 x_9260 ->
      (life_2300 s0_7320 s1_7320 set_flag_7321 0 x_9260 k_main_9237).
  f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 ->
      (f_1026 s__r_f00_8762 s__r_f01_8762 set_flag_7215 0 s__r_f1_8762
       (f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026
        k_run_8672)).
  f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026 k_run_8672 
  s__r_f00_8761 s__r_f01_8761 s__r_f1_8761 ->
      (run_1024 s__r_f1_8761 s__r_f00_8761 s__r_f01_8761 set_flag_7215 0 f_1026 k_run_8672).
  f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570 s__r_f00_8644 s__r_f01_8644 
  s__r_f1_8644 -> (walk_1021 s__r_f1_8644 s__r_f00_8644 s__r_f01_8644 set_flag_7185 0 f_1023 k_walk_8570).
  f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 u_8822 ->
      (rand_int (f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788)).
  f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788 x_8810 -> (k_life_x_8788 (x_8810 = 0)).
  fail_11009 b k -> {fail} => (k ()).
  g_1010 s0_7085 s1_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 ->
      (k_g_8273 s0_7085 s1_7085 (f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086)).
  ha1_2305 s0_7138 s1_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 -> _|_.
  ha2_2302 s0_7160 s1_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 -> _|_.
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when set_flag_7247 ->
      (x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when 
      (not set_flag_7247) -> (rand_int (f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  main_1029 s0_7320 s1_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 ->
      (rand_int (f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237)).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (x_1025 < 0) -> (k_run_8672 s0_7214 true x_1025).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_7214 true set_flag_7215 0 x_1025
       (f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672)).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when x_9023 ->
      (k_life_sp_8852 false false x_1028).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when 
      (not x_9023) -> (k_life_sp_8852 s0_7246 s1_7246 p_x_7248).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when s1_7246 ->
      (br_u_11003 (not s0_7246) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when (not s1_7246) -> (k_life_x_u_8805 ()).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (x_1022 < 0) -> (k_walk_8570 s0_7184 true x_1022).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_7184 true set_flag_7185 0 x_1022
       (f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570)).
  x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 ->
      (u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788)).
Types:
  main_10982 : X
  br_f_life_11005 : (bool ->
                     int ->
                     bool ->
                     bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  br_f_life_11007 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_11003 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_10991 : (int ->
                  bool -> bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  f_life_10996 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_11009 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> x_3:bool -> x_4:bool -> int -> int[(not x_3); (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_7263 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_7254 : (int -> bool -> x_4:bool -> bool -> int[(not x_4)] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_10982 ... --> 
  main_1029 ... --> 
  f_main_11001 ... --> 
  life_2300 [2/2] ... --> 
  f_life_10996 [2/2] ... --> 
  life_2300 [1/2] ... --> 
  x_7249 ... --> 
  u_7254 [2/2] ... --> 
  f_x_10987 ... --> 
  f_x_10988 ... --> 
  f_life_10989 ... --> 
  sp_7263 [2/2] ... --> 
  f_life_10990 ... --> 
  f_life_10991 [2/2] ... --> 
  life_2300 [1/2] ... --> 
  x_7249 ... --> 
  u_7254 [1/2] ... --> 
  br_u_11003 [1/2] ... --> 
  fail_11009 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 1; 1; 0; 0; 1; 0; 0; 0; 1; 0; 1; 0; 0; 0; 0; 0

(4-3) Checking counterexample ... DONE!

(4-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 1; 1; 0; 0; 1; 0; 0; 0; 1; 0; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 5)::
Main: main_10982
  main_10982 -> (main_1029 false false false 0 () f_11002).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when b_11006 ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11005 b_11006 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 
  k_life_8784 x_8859 when (not b_11006) ->
      (g_1010 sp00_9022 true true 0 1
       (f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023
        k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when b_11008 ->
      (g_1010 false true true 0 1 (f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_f_life_11007 b_11008 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not b_11008) ->
      (g_1010 false true true 0 1 (f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784)).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when b_11004 ->
      (fail_11009 true k_life_x_u_8805).
  br_u_11003 b_11004 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when 
      (not b_11004) -> (k_life_x_u_8805 ()).
  f_11002 s__r_main00_9327 s__r_main01_9327 s__r_main1_9327 -> end.
  f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086 s0_7090 s1_7090 set_flag_7091 p_x_7092 x_1012 k_g_8293 ->
      (k_g_8293 s0_7090 s1_7090 (x_1012 - i_1011)).
  f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9023 ->
      (sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023
       (f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784)).
  f_life_10990 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_8784 sp00_9022 sp01_9022 sp10_9022 ->
      (rand_int
       (f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784)).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (x_8859 > 0) ->
      (br_f_life_11005 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023
       k_life_8784 x_8859).
  f_life_10991 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_9023 k_life_8784 x_8859 when 
      (not (x_8859 > 0)) -> (life_2300 sp00_9022 sp01_9022 true sp10_9022 x_1028 k_life_8784).
  f_life_10992 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10993 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8941 s__r_app01_8941 s__r_app1_8941 ->
      (ha1_2305 s__r_app00_8941 s__r_app01_8941 true sp10_9022 s__r_app1_8941 k_life_8784).
  f_life_10994 p_x_7248 s0_7246 s1_7246 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 x_8859 x_9023 k_life_8784 
  s__r_g00_8432 s__r_g01_8432 s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022
        x_1028 x_8859 x_9023 k_life_8784)).
  f_life_10995 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 sp00_9022 sp01_9022 sp10_9022 x_1028 
  x_8859 x_9023 k_life_8784 s__r_app00_8998 s__r_app01_8998 s__r_app1_8998 ->
      (ha2_2302 s__r_app00_8998 s__r_app01_8998 true sp10_9022 s__r_app1_8998 k_life_8784).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (x_9060 > 0) -> (br_f_life_11007 (x_1028 < 0) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060).
  f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784 x_9060 when 
      (not (x_9060 > 0)) -> (life_2300 false false true x_1028 x_1028 k_life_8784).
  f_life_10997 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (walk_1021 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_10998 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9142 s__r_app01_9142 s__r_app1_9142 ->
      (ha1_2305 s__r_app00_9142 s__r_app01_9142 true x_1028 s__r_app1_9142 k_life_8784).
  f_life_10999 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9060 k_life_8784 s__r_g00_8432 s__r_g01_8432 
  s__r_g1_8432 ->
      (run_1024 x_1028 s__r_g00_8432 s__r_g01_8432 true 0 s__r_g1_8432
       (f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784)).
  f_life_11000 p_x_7248 s0_7246 s1_7246 s__r_g00_8432 s__r_g01_8432 set_flag_7247 x_1028 x_9060 k_life_8784 
  s__r_app00_9199 s__r_app01_9199 s__r_app1_9199 ->
      (ha2_2302 s__r_app00_9199 s__r_app01_9199 true x_1028 s__r_app1_9199 k_life_8784).
  f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237 x_9260 ->
      (life_2300 s0_7320 s1_7320 set_flag_7321 0 x_9260 k_main_9237).
  f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 ->
      (f_1026 s__r_f00_8762 s__r_f01_8762 set_flag_7215 0 s__r_f1_8762
       (f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026
        k_run_8672)).
  f_run_10986 p_x_7216 s0_7214 s1_7214 s__r_f00_8762 s__r_f01_8762 s__r_f1_8762 set_flag_7215 x_1025 f_1026 k_run_8672 
  s__r_f00_8761 s__r_f01_8761 s__r_f1_8761 ->
      (run_1024 s__r_f1_8761 s__r_f00_8761 s__r_f01_8761 set_flag_7215 0 f_1026 k_run_8672).
  f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570 s__r_f00_8644 s__r_f01_8644 
  s__r_f1_8644 -> (walk_1021 s__r_f1_8644 s__r_f00_8644 s__r_f01_8644 set_flag_7185 0 f_1023 k_walk_8570).
  f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 u_8822 ->
      (rand_int (f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788)).
  f_x_10988 p_x_7248 s0_7246 s1_7246 set_flag_7247 u_8822 x_1028 k_life_x_8788 x_8810 -> (k_life_x_8788 (x_8810 = 0)).
  fail_11009 b k -> {fail} => (k ()).
  g_1010 s0_7085 s1_7085 set_flag_7086 p_x_7087 i_1011 k_g_8273 ->
      (k_g_8273 s0_7085 s1_7085 (f_g_10983 i_1011 p_x_7087 s0_7085 s1_7085 set_flag_7086)).
  ha1_2305 s0_7138 s1_7138 set_flag_7139 p_x_7140 x_1018 k_ha1_8458 -> _|_.
  ha2_2302 s0_7160 s1_7160 set_flag_7161 p_x_7162 x_1020 k_ha2_8511 -> _|_.
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when set_flag_7247 ->
      (x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_life_10989 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  life_2300 s0_7246 s1_7246 set_flag_7247 p_x_7248 x_1028 k_life_8784 when 
      (not set_flag_7247) -> (rand_int (f_life_10996 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_8784)).
  main_1029 s0_7320 s1_7320 set_flag_7321 p_x_7322 x_2295 k_main_9237 ->
      (rand_int (f_main_11001 p_x_7322 s0_7320 s1_7320 set_flag_7321 x_2295 k_main_9237)).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (x_1025 < 0) -> (k_run_8672 s0_7214 true x_1025).
  run_1024 x_1025 s0_7214 s1_7214 set_flag_7215 p_x_7216 f_1026 k_run_8672 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_7214 true set_flag_7215 0 x_1025
       (f_run_10985 p_x_7216 s0_7214 s1_7214 set_flag_7215 x_1025 f_1026 k_run_8672)).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when x_9023 ->
      (k_life_sp_8852 false false x_1028).
  sp_7263 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 x_9023 k_life_sp_8852 when 
      (not x_9023) -> (k_life_sp_8852 s0_7246 s1_7246 p_x_7248).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when s1_7246 ->
      (br_u_11003 (not s0_7246) p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805).
  u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_u_8805 when (not s1_7246) -> (k_life_x_u_8805 ()).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (x_1022 < 0) -> (k_walk_8570 s0_7184 true x_1022).
  walk_1021 x_1022 s0_7184 s1_7184 set_flag_7185 p_x_7186 f_1023 k_walk_8570 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_7184 true set_flag_7185 0 x_1022
       (f_walk_10984 p_x_7186 s0_7184 s1_7184 set_flag_7185 x_1022 f_1023 k_walk_8570)).
  x_7249 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788 ->
      (u_7254 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028
       (f_x_10987 p_x_7248 s0_7246 s1_7246 set_flag_7247 x_1028 k_life_x_8788)).
Types:
  main_10982 : X
  br_f_life_11005 : (bool ->
                     int ->
                     bool ->
                     bool -> bool -> bool -> bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int -> X)
  br_f_life_11007 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_11003 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_10991 : (int ->
                  bool ->
                  bool ->
                  bool -> bool -> x_7:bool -> int -> int -> bool -> (bool -> bool -> unit -> X) -> int[(not x_7)] -> X)
  f_life_10996 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_11009 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> x_3:bool -> x_4:bool -> int -> int[(not x_3); (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_7263 : (int ->
             bool -> x_4:bool -> bool -> int -> bool[(not x_4)] -> (bool -> x_10:bool -> int[(not x_10)] -> X) -> X)
  u_7254 : (int -> bool -> x_4:bool -> bool -> int[(not x_4)] -> (unit[(not x_4)] -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s_17302 = fst s__u_17301 in
   let u_2310 = snd s__u_17301 in
   let s__r_g_17307 = g_1010 s_17302 set_flag_17295 0 i_1016 in
   let s_17308 = fst s__r_g_17307 in
   let r_g_2442 = snd s__r_g_17307 in
   f_1014 x_1015 s_17308 set_flag_17295 0 r_g_2442
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s_17334 = fst s__u_17333 in
   let u_2306 = snd s__u_17333 in
   let s__u_17339 = ((true, snd s_17334), ()) in
   let s_17340 = fst s__u_17339 in
   let u_2307 = snd s__u_17339 in
   ha1_2305 s_17340 set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s_17356 = fst s__u_17355 in
   let u_2303 = snd s__u_17355 in
   let s__u_17361 = ((true, snd s_17356), ()) in
   let s_17362 = fst s__u_17361 in
   let u_2304 = snd s__u_17361 in
   ha2_2302 s_17362 set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   let s_17380 = fst s__u_17379 in
   let u_2180 = snd s__u_17379 in
   if x_1022 < 0
   then
     (s_17380, x_1022)
   else
     let s__r_f_17385 = f_1023 s_17380 set_flag_17373 0 x_1022 in
     let s_17386 = fst s__r_f_17385 in
     let r_f_2443 = snd s__r_f_17385 in
     walk_1021 r_f_2443 s_17386 set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 = let u_17410 = if snd s_17402 && not (fst s_17402) then assert false in
                   rand_int () = 0 in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17406 = fst sp_17419 in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst s_17406, true), ()) in
     let s_17425 = fst s__u_17424 in
     let u_2234 = snd s__u_17424 in
     if x_1025 < 0
     then
       (s_17425, x_1025)
     else
       let s__r_f_17430 = f_1026 s_17425 true p_x_17408 x_1025 in
       let s_17431 = fst s__r_f_17430 in
       let r_f_2444 = snd s__r_f_17430 in
       let s__r_f_17434 = f_1026 s_17431 true p_x_17408 r_f_2444 in
       let s_17435 = fst s__r_f_17434 in
       let r_f_2445 = snd s__r_f_17434 in
       run_1024 r_f_2445 s_17435 true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17445 = fst sp_17444 in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst s_17445, true), ()) in
     let s_17449 = fst s__u_17448 in
     let u_17450 = snd s__u_17448 in
     if x_1025 < 0
     then
       (s_17449, x_1025)
     else
       let s__r_f_17452 = f_1026 s_17449 true p_x_17447 x_1025 in
       let s_17453 = fst s__r_f_17452 in
       let r_f_17454 = snd s__r_f_17452 in
       let s__r_f_17451 = f_1026 s_17453 true p_x_17447 r_f_17454 in
       let s_17455 = fst s__r_f_17451 in
       let r_f_17456 = snd s__r_f_17451 in
       run_1024 r_f_17456 s_17455 true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     let s_17472 = fst s__u_17471 in
     let u_2301 = snd s__u_17471 in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17484 = fst s__r_app_17483 in
       let r_app_2447 = snd s__r_app_17483 in
       ha1_2305 s_17484 set_flag_17465 0 r_app_2447
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17498 = fst s__r_app_17497 in
       let r_app_2446 = snd s__r_app_17497 in
       ha2_2302 s_17498 set_flag_17465 0 r_app_2446
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 let s_17516 = fst s__r_main_17515 in
 let r_main_2448 = snd s__r_main_17515 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s_17302 = fst s__u_17301 in
   let s__r_g_17307 = g_1010 s_17302 set_flag_17295 0 i_1016 in
   let s_17308 = fst s__r_g_17307 in
   let r_g_2442 = snd s__r_g_17307 in
   f_1014 x_1015 s_17308 set_flag_17295 0 r_g_2442
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s_17334 = fst s__u_17333 in
   let s__u_17339 = ((true, snd s_17334), ()) in
   let s_17340 = fst s__u_17339 in
   ha1_2305 s_17340 set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s_17356 = fst s__u_17355 in
   let s__u_17361 = ((true, snd s_17356), ()) in
   let s_17362 = fst s__u_17361 in
   ha2_2302 s_17362 set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   let s_17380 = fst s__u_17379 in
   if x_1022 < 0
   then
     (s_17380, x_1022)
   else
     let s__r_f_17385 = f_1023 s_17380 set_flag_17373 0 x_1022 in
     let s_17386 = fst s__r_f_17385 in
     let r_f_2443 = snd s__r_f_17385 in
     walk_1021 r_f_2443 s_17386 set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 = let u_17410 = if snd s_17402 && not (fst s_17402) then assert false in
                   rand_int () = 0 in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17406 = fst sp_17419 in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst s_17406, true), ()) in
     let s_17425 = fst s__u_17424 in
     if x_1025 < 0
     then
       (s_17425, x_1025)
     else
       let s__r_f_17430 = f_1026 s_17425 true p_x_17408 x_1025 in
       let s_17431 = fst s__r_f_17430 in
       let r_f_2444 = snd s__r_f_17430 in
       let s__r_f_17434 = f_1026 s_17431 true p_x_17408 r_f_2444 in
       let s_17435 = fst s__r_f_17434 in
       let r_f_2445 = snd s__r_f_17434 in
       run_1024 r_f_2445 s_17435 true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17445 = fst sp_17444 in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst s_17445, true), ()) in
     let s_17449 = fst s__u_17448 in
     if x_1025 < 0
     then
       (s_17449, x_1025)
     else
       let s__r_f_17452 = f_1026 s_17449 true p_x_17447 x_1025 in
       let s_17453 = fst s__r_f_17452 in
       let r_f_17454 = snd s__r_f_17452 in
       let s__r_f_17451 = f_1026 s_17453 true p_x_17447 r_f_17454 in
       let s_17455 = fst s__r_f_17451 in
       let r_f_17456 = snd s__r_f_17451 in
       run_1024 r_f_17456 s_17455 true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     let s_17472 = fst s__u_17471 in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17484 = fst s__r_app_17483 in
       let r_app_2447 = snd s__r_app_17483 in
       ha1_2305 s_17484 set_flag_17465 0 r_app_2447
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17498 = fst s__r_app_17497 in
       let r_app_2446 = snd s__r_app_17497 in
       ha2_2302 s_17498 set_flag_17465 0 r_app_2446
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_17515 in
 r_main_2448

###inline:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s__r_g_17307 = g_1010 (fst s__u_17301) set_flag_17295 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_17307) set_flag_17295 0 (snd s__r_g_17307)
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s__u_17339 = ((true, snd (fst s__u_17333)), ()) in
   ha1_2305 (fst s__u_17339) set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s__u_17361 = ((true, snd (fst s__u_17355)), ()) in
   ha2_2302 (fst s__u_17361) set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_17379, x_1022)
   else
     let s__r_f_17385 = f_1023 (fst s__u_17379) set_flag_17373 0 x_1022 in
     walk_1021 (snd s__r_f_17385) (fst s__r_f_17385) set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 = let u_17410 = if snd s_17402 && not (fst s_17402) then assert false in
                   rand_int () = 0 in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst (fst sp_17419), true), ()) in
     if x_1025 < 0
     then
       (fst s__u_17424, x_1025)
     else
       let s__r_f_17430 = f_1026 (fst s__u_17424) true p_x_17408 x_1025 in
       let s__r_f_17434 = f_1026 (fst s__r_f_17430) true p_x_17408 (snd s__r_f_17430) in
       run_1024 (snd s__r_f_17434) (fst s__r_f_17434) true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst (fst sp_17444), true), ()) in
     if x_1025 < 0
     then
       (fst s__u_17448, x_1025)
     else
       let s__r_f_17452 = f_1026 (fst s__u_17448) true p_x_17447 x_1025 in
       let s__r_f_17451 = f_1026 (fst s__r_f_17452) true p_x_17447 (snd s__r_f_17452) in
       run_1024 (snd s__r_f_17451) (fst s__r_f_17451) true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 (fst s__u_17471) set_flag_17465 0 1 in
       ha1_2305 (fst s__r_app_17483) set_flag_17465 0 (snd s__r_app_17483)
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 (fst s__u_17471) set_flag_17465 0 1 in
       ha2_2302 (fst s__r_app_17497) set_flag_17465 0 (snd s__r_app_17497)
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 snd s__r_main_17515

###CPS:
 (let g_1010 s_17273 set_flag_17274 p_x_17275 i_1011 k_g_18353 =
    k_g_18353
      (s_17273, (fun s_17278 set_flag_17279 p_x_17280 x_1012 k_g_18373 -> k_g_18373 (s_17278, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_17294 set_flag_17295 p_x_17296 i_1016 k_app_18408 =
    let s__u_17301 k_app_s__u_18412 = k_app_s__u_18412 ((fst s_17294, true), ()) in
    s__u_17301
      (fun s__u_18513 ->
         let s__r_g_17307 k_app_s__r_g_18444 = (g_1010 (fst s__u_18513) set_flag_17295 0) i_1016 k_app_s__r_g_18444 in
         s__r_g_17307
           (fun s__r_g_18512 -> (f_1014 x_1015 (fst s__r_g_18512) set_flag_17295 0) (snd s__r_g_18512) k_app_18408))
  in
  let rec ha1_2305 s_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_18538 =
    let s__u_17333 k_ha1_s__u_18542 = k_ha1_s__u_18542 ((fst s_17326, true), ()) in
    s__u_17333
      (fun s__u_18581 ->
         let s__u_17339 k_ha1_s__u_18556 = k_ha1_s__u_18556 ((true, snd (fst s__u_18581)), ()) in
         s__u_17339 (fun s__u_18580 -> (ha1_2305 (fst s__u_18580) set_flag_17327 0) x_1018 k_ha1_18538))
  in
  let rec ha2_2302 s_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_18591 =
    let s__u_17355 k_ha2_s__u_18595 = k_ha2_s__u_18595 ((fst s_17348, true), ()) in
    s__u_17355
      (fun s__u_18634 ->
         let s__u_17361 k_ha2_s__u_18609 = k_ha2_s__u_18609 ((true, snd (fst s__u_18634)), ()) in
         s__u_17361 (fun s__u_18633 -> (ha2_2302 (fst s__u_18633) set_flag_17349 0) x_1020 k_ha2_18591))
  in
  let rec walk_1021 x_1022 s_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 =
    let s__u_17379 k_walk_s__u_18654 = k_walk_s__u_18654 ((fst s_17372, true), ()) in
    s__u_17379
      (fun s__u_18729 ->
         if x_1022 < 0
         then
           k_walk_18650 (fst s__u_18729, x_1022)
         else
           let s__r_f_17385 k_walk_s__r_f_18680 = (f_1023 (fst s__u_18729) set_flag_17373 0) x_1022 k_walk_s__r_f_18680 in
           s__r_f_17385
             (fun s__r_f_18724 ->
                (walk_1021 (snd s__r_f_18724) (fst s__r_f_18724) set_flag_17373 0) f_1023 k_walk_18650))
  in
  let rec run_1024 x_1025 s_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 =
    if set_flag_17403
    then
      let x_17405 k_run_x_18756 =
        let u_17410 k_run_x_u_18773 =
          if snd s_17402
          then
            if not (fst s_17402) then <|fail|> () k_run_x_u_18773 else k_run_x_u_18773 ()
          else
            k_run_x_u_18773 ()
        in
        u_17410 (fun u_18790 -> rand_int_cps () (fun x_18778 -> k_run_x_18756 (x_18778 = 0)))
      in
      x_17405
        (fun x_18922 ->
           let sp_17419 k_run_sp_18820 =
             if x_18922
             then
               k_run_sp_18820 ((false, false), (x_1025))
             else
               k_run_sp_18820 (s_17402, (p_x_17404))
           in
           sp_17419
             (fun sp_18921 ->
                let s__u_17424 k_run_s__u_18828 = k_run_s__u_18828 ((fst (fst sp_18921), true), ()) in
                s__u_17424
                  (fun s__u_18919 ->
                     if x_1025 < 0
                     then
                       k_run_18752 (fst s__u_18919, x_1025)
                     else
                       let s__r_f_17430 k_run_s__r_f_18854 =
                         (f_1026 (fst s__u_18919) true (#0 (snd sp_18921))) x_1025 k_run_s__r_f_18854
                       in
                       s__r_f_17430
                         (fun s__r_f_18914 ->
                            let s__r_f_17434 k_run_s__r_f_18869 =
                              (f_1026 (fst s__r_f_18914) true (#0 (snd sp_18921)))
                                (snd s__r_f_18914) k_run_s__r_f_18869
                            in
                            s__r_f_17434
                              (fun s__r_f_18913 ->
                                 (run_1024 (snd s__r_f_18913) (fst s__r_f_18913) true (#0 (snd sp_18921)))
                                   f_1026 k_run_18752)))))
    else
      let sp_17444 k_run_sp_18952 = k_run_sp_18952 ((false, false), (x_1025)) in
      sp_17444
        (fun sp_19053 ->
           let s__u_17448 k_run_s__u_18960 = k_run_s__u_18960 ((fst (fst sp_19053), true), ()) in
           s__u_17448
             (fun s__u_19051 ->
                if x_1025 < 0
                then
                  k_run_18752 (fst s__u_19051, x_1025)
                else
                  let s__r_f_17452 k_run_s__r_f_18986 =
                    (f_1026 (fst s__u_19051) true (#0 (snd sp_19053))) x_1025 k_run_s__r_f_18986
                  in
                  s__r_f_17452
                    (fun s__r_f_19046 ->
                       let s__r_f_17451 k_run_s__r_f_19001 =
                         (f_1026 (fst s__r_f_19046) true (#0 (snd sp_19053)))
                           (snd s__r_f_19046) k_run_s__r_f_19001
                       in
                       s__r_f_17451
                         (fun s__r_f_19045 ->
                            (run_1024 (snd s__r_f_19045) (fst s__r_f_19045) true (#0 (snd sp_19053)))
                              f_1026 k_run_18752))))
  in
  let rec life_2300 s_17464 set_flag_17465 p_x_17466 x_1028 k_life_19074 =
    rand_int_cps
      () 
      (fun x_19077 ->
         if x_19077 > 0
         then
           let s__u_17471 k_life_s__u_19092 = k_life_s__u_19092 ((fst s_17464, true), ()) in
           s__u_17471
             (fun s__u_19221 ->
                if x_1028 < 0
                then
                  let s__r_app_17483 k_life_s__r_app_19140 =
                    (app_2308 walk_1021 x_1028 (fst s__u_19221) set_flag_17465 0) 1 k_life_s__r_app_19140
                  in
                  s__r_app_17483
                    (fun s__r_app_19159 ->
                       (ha1_2305 (fst s__r_app_19159) set_flag_17465 0) (snd s__r_app_19159) k_life_19074)
                else
                  let s__r_app_17497 k_life_s__r_app_19197 =
                    (app_2308 run_1024 x_1028 (fst s__u_19221) set_flag_17465 0) 1 k_life_s__r_app_19197
                  in
                  s__r_app_17497
                    (fun s__r_app_19216 ->
                       (ha2_2302 (fst s__r_app_19216) set_flag_17465 0) (snd s__r_app_19216) k_life_19074))
         else
           (life_2300 s_17464 set_flag_17465 0) x_1028 k_life_19074)
  in
  let main_1029 s_17508 set_flag_17509 p_x_17510 x_2295 k_main_19248 =
    rand_int_cps () (fun x_19271 -> (life_2300 s_17508 set_flag_17509 0) x_19271 k_main_19248)
  in
  let s__r_main_17515 k_s__r_main_19332 = (((main_1029 (false, false)) false) 0) () k_s__r_main_19332 in
  s__r_main_17515 (fun s__r_main_19338 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_18353 =
    k_g_18353
      s0_17273 s1_17273 
      (fun s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 k_g_18373 ->
         k_g_18373 s0_17278 s1_17278 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_18538 =
    ha1_2305 true true set_flag_17327 0 x_1018 k_ha1_18538
  in
  let rec ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_18591 =
    ha2_2302 true true set_flag_17349 0 x_1020 k_ha2_18591
  in
  let rec walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 =
    if x_1022 < 0
    then
      k_walk_18650 s0_17372 true x_1022
    else
      f_1023
        s0_17372 true set_flag_17373 0 x_1022 
        (fun s__r_f00_18724 s__r_f01_18724 s__r_f1_18724 ->
           walk_1021 s__r_f1_18724 s__r_f00_18724 s__r_f01_18724 set_flag_17373 0 f_1023 k_walk_18650)
  in
  let rec run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 =
    if set_flag_17403
    then
      let x_17405 k_run_x_18756 =
        let u_17410 k_run_x_u_18773 =
          if s1_17402
          then
            if not s0_17402 then <|fail|> () k_run_x_u_18773 else k_run_x_u_18773 ()
          else
            k_run_x_u_18773 ()
        in
        u_17410 (fun u_18790 -> rand_int_cps () (fun x_18778 -> k_run_x_18756 (x_18778 = 0)))
      in
      x_17405
        (fun x_18922 ->
           let sp_17419 k_run_sp_18820 =
             if x_18922
             then
               k_run_sp_18820 false false x_1025
             else
               k_run_sp_18820 s0_17402 s1_17402 p_x_17404
           in
           sp_17419
             (fun sp00_18921 sp01_18921 sp10_18921 ->
                if x_1025 < 0
                then
                  k_run_18752 sp00_18921 true x_1025
                else
                  f_1026
                    sp00_18921 true true sp10_18921 x_1025 
                    (fun s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 ->
                       f_1026
                         s__r_f00_18914 s__r_f01_18914 true sp10_18921 
                         s__r_f1_18914 
                         (fun s__r_f00_18913 s__r_f01_18913 s__r_f1_18913 ->
                            run_1024
                              s__r_f1_18913 s__r_f00_18913 s__r_f01_18913 true sp10_18921 f_1026 k_run_18752))))
    else
      if x_1025 < 0
      then
        k_run_18752 false true x_1025
      else
        f_1026
          false true true x_1025 x_1025 
          (fun s__r_f00_19046 s__r_f01_19046 s__r_f1_19046 ->
             f_1026
               s__r_f00_19046 s__r_f01_19046 true x_1025 s__r_f1_19046 
               (fun s__r_f00_19045 s__r_f01_19045 s__r_f1_19045 ->
                  run_1024 s__r_f1_19045 s__r_f00_19045 s__r_f01_19045 true x_1025 f_1026 k_run_18752))
  in
  let rec life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_19074 =
    rand_int_cps
      () 
      (fun x_19077 ->
         if x_19077 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_18512 s__r_g01_18512 s__r_g1_18512 ->
                  walk_1021
                    x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 
                    0 s__r_g1_18512 
                    (fun s__r_app00_19159 s__r_app01_19159 s__r_app1_19159 ->
                       ha1_2305 s__r_app00_19159 s__r_app01_19159 set_flag_17465 0 s__r_app1_19159 k_life_19074))
           else
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_18512 s__r_g01_18512 s__r_g1_18512 ->
                  run_1024
                    x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 
                    0 s__r_g1_18512 
                    (fun s__r_app00_19216 s__r_app01_19216 s__r_app1_19216 ->
                       ha2_2302 s__r_app00_19216 s__r_app01_19216 set_flag_17465 0 s__r_app1_19216 k_life_19074))
         else
           life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_19074)
  in
  let main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_19248 =
    rand_int_cps () (fun x_19271 -> life_2300 s0_17508 s1_17508 set_flag_17509 0 x_19271 k_main_19248)
  in
  main_1029 false false false 0 () (fun s__r_main00_19338 s__r_main01_19338 s__r_main1_19338 -> {end}) # 
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_18353 =
    k_g_18353
      s0_17273 s1_17273 
      (fun s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 k_g_18373 ->
         k_g_18373 s0_17278 s1_17278 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_18538 = _|_ in
  let rec ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_18591 = _|_ in
  let rec walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 =
    if x_1022 < 0
    then
      k_walk_18650 s0_17372 true x_1022
    else
      f_1023
        s0_17372 true set_flag_17373 0 x_1022 
        (fun s__r_f00_18724 s__r_f01_18724 s__r_f1_18724 ->
           walk_1021 s__r_f1_18724 s__r_f00_18724 s__r_f01_18724 set_flag_17373 0 f_1023 k_walk_18650)
  in
  let rec run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 =
    if set_flag_17403
    then
      let x_17405 k_run_x_18756 =
        let u_17410 k_run_x_u_18773 =
          if s1_17402
          then
            if not s0_17402 then <|fail|> () k_run_x_u_18773 else k_run_x_u_18773 ()
          else
            k_run_x_u_18773 ()
        in
        u_17410 (fun u_18790 -> rand_int_cps () (fun x_18778 -> k_run_x_18756 (x_18778 = 0)))
      in
      x_17405
        (fun x_18922 ->
           let sp_17419 k_run_sp_18820 =
             if x_18922
             then
               k_run_sp_18820 false false x_1025
             else
               k_run_sp_18820 s0_17402 s1_17402 p_x_17404
           in
           sp_17419
             (fun sp00_18921 sp01_18921 sp10_18921 ->
                if x_1025 < 0
                then
                  k_run_18752 sp00_18921 true x_1025
                else
                  f_1026
                    sp00_18921 true true sp10_18921 x_1025 
                    (fun s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 ->
                       f_1026
                         s__r_f00_18914 s__r_f01_18914 true sp10_18921 
                         s__r_f1_18914 
                         (fun s__r_f00_18913 s__r_f01_18913 s__r_f1_18913 ->
                            run_1024
                              s__r_f1_18913 s__r_f00_18913 s__r_f01_18913 true sp10_18921 f_1026 k_run_18752))))
    else
      if x_1025 < 0
      then
        k_run_18752 false true x_1025
      else
        f_1026
          false true true x_1025 x_1025 
          (fun s__r_f00_19046 s__r_f01_19046 s__r_f1_19046 ->
             f_1026
               s__r_f00_19046 s__r_f01_19046 true x_1025 s__r_f1_19046 
               (fun s__r_f00_19045 s__r_f01_19045 s__r_f1_19045 ->
                  run_1024 s__r_f1_19045 s__r_f00_19045 s__r_f01_19045 true x_1025 f_1026 k_run_18752))
  in
  let rec life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_19074 =
    rand_int_cps
      () 
      (fun x_19077 ->
         if x_19077 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_18512 s__r_g01_18512 s__r_g1_18512 ->
                  walk_1021
                    x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 
                    0 s__r_g1_18512 
                    (fun s__r_app00_19159 s__r_app01_19159 s__r_app1_19159 ->
                       ha1_2305 s__r_app00_19159 s__r_app01_19159 set_flag_17465 0 s__r_app1_19159 k_life_19074))
           else
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_18512 s__r_g01_18512 s__r_g1_18512 ->
                  run_1024
                    x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 
                    0 s__r_g1_18512 
                    (fun s__r_app00_19216 s__r_app01_19216 s__r_app1_19216 ->
                       ha2_2302 s__r_app00_19216 s__r_app01_19216 set_flag_17465 0 s__r_app1_19216 k_life_19074))
         else
           life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_19074)
  in
  let main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_19248 =
    rand_int_cps () (fun x_19271 -> life_2300 s0_17508 s1_17508 set_flag_17509 0 x_19271 k_main_19248)
  in
  main_1029 false false false 0 () (fun s__r_main00_19338 s__r_main01_19338 s__r_main1_19338 -> {end}) # 
  [ACPS])

Program with abstraction types (CEGAR-cycle 6)::
Main: main_20883
  main_20883 -> (main_1029 false false false 0 () f_20900).
  br_f_life_20905 b_20906 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when b_20906 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_20895 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074)).
  br_f_life_20905 b_20906 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when 
      (not b_20906) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_20897 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074)).
  br_run_20901 b_20902 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when b_20902 ->
      (k_run_18752 false true x_1025).
  br_run_20901 b_20902 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when 
      (not b_20902) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_20892 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752)).
  br_u_20903 b_20904 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when b_20904 ->
      (fail_20907 true k_run_x_u_18773).
  br_u_20903 b_20904 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when 
      (not b_20904) -> (k_run_x_u_18773 ()).
  f_20900 s__r_main00_19338 s__r_main01_19338 s__r_main1_19338 -> end.
  f_g_20884 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_18373 -> (k_g_18373 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_20894 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when 
      (x_19077 > 0) ->
      (br_f_life_20905 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077).
  f_life_20894 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when 
      (not (x_19077 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_19074).
  f_life_20895 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074 s__r_g00_18512 s__r_g01_18512 
  s__r_g1_18512 ->
      (walk_1021 x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 0 s__r_g1_18512
       (f_life_20896 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077
        k_life_19074)).
  f_life_20896 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077 k_life_19074 
  s__r_app00_19159 s__r_app01_19159 s__r_app1_19159 ->
      (ha1_2305 s__r_app00_19159 s__r_app01_19159 set_flag_17465 0 s__r_app1_19159 k_life_19074).
  f_life_20897 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074 s__r_g00_18512 s__r_g01_18512 
  s__r_g1_18512 ->
      (run_1024 x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 0 s__r_g1_18512
       (f_life_20898 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077
        k_life_19074)).
  f_life_20898 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077 k_life_19074 
  s__r_app00_19216 s__r_app01_19216 s__r_app1_19216 ->
      (ha2_2302 s__r_app00_19216 s__r_app01_19216 set_flag_17465 0 s__r_app1_19216 k_life_19074).
  f_main_20899 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_19248 x_19271 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_19271 k_main_19248).
  f_run_20888 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752 x_18922 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922
       (f_run_20889 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 f_1026 k_run_18752)).
  f_run_20889 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 f_1026 k_run_18752 sp00_18921 sp01_18921 
  sp10_18921 when (x_1025 < 0) -> (k_run_18752 sp00_18921 true x_1025).
  f_run_20889 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 f_1026 k_run_18752 sp00_18921 sp01_18921 
  sp10_18921 when (not (x_1025 < 0)) ->
      (f_1026 sp00_18921 true true sp10_18921 x_1025
       (f_run_20890 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_18921 sp01_18921 sp10_18921 x_1025 x_18922 f_1026
        k_run_18752)).
  f_run_20890 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_18921 sp01_18921 sp10_18921 x_1025 x_18922 f_1026 
  k_run_18752 s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 ->
      (f_1026 s__r_f00_18914 s__r_f01_18914 true sp10_18921 s__r_f1_18914
       (f_run_20891 p_x_17404 s0_17402 s1_17402 s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 set_flag_17403 sp00_18921
        sp01_18921 sp10_18921 x_1025 x_18922 f_1026 k_run_18752)).
  f_run_20891 p_x_17404 s0_17402 s1_17402 s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 set_flag_17403 sp00_18921 
  sp01_18921 sp10_18921 x_1025 x_18922 f_1026 k_run_18752 s__r_f00_18913 s__r_f01_18913 s__r_f1_18913 ->
      (run_1024 s__r_f1_18913 s__r_f00_18913 s__r_f01_18913 true sp10_18921 f_1026 k_run_18752).
  f_run_20892 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752 s__r_f00_19046 s__r_f01_19046 
  s__r_f1_19046 ->
      (f_1026 s__r_f00_19046 s__r_f01_19046 true x_1025 s__r_f1_19046
       (f_run_20893 p_x_17404 s0_17402 s1_17402 s__r_f00_19046 s__r_f01_19046 s__r_f1_19046 set_flag_17403 x_1025
        f_1026 k_run_18752)).
  f_run_20893 p_x_17404 s0_17402 s1_17402 s__r_f00_19046 s__r_f01_19046 s__r_f1_19046 set_flag_17403 x_1025 f_1026 
  k_run_18752 s__r_f00_19045 s__r_f01_19045 s__r_f1_19045 ->
      (run_1024 s__r_f1_19045 s__r_f00_19045 s__r_f01_19045 true x_1025 f_1026 k_run_18752).
  f_walk_20885 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_18650 s__r_f00_18724 s__r_f01_18724 
  s__r_f1_18724 -> (walk_1021 s__r_f1_18724 s__r_f00_18724 s__r_f01_18724 set_flag_17373 0 f_1023 k_walk_18650).
  f_x_20886 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_18756 u_18790 ->
      (rand_int (f_x_20887 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_18790 x_1025 k_run_x_18756)).
  f_x_20887 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_18790 x_1025 k_run_x_18756 x_18778 ->
      (k_run_x_18756 (x_18778 = 0)).
  fail_20907 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_18353 ->
      (k_g_18353 s0_17273 s1_17273 (f_g_20884 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_18538 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_18591 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_19074 ->
      (rand_int (f_life_20894 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_19248 ->
      (rand_int (f_main_20899 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_19248)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_20888 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when 
      (not set_flag_17403) ->
      (br_run_20901 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 k_run_sp_18820 when x_18922 ->
      (k_run_sp_18820 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 k_run_sp_18820 when 
      (not x_18922) -> (k_run_sp_18820 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when s1_17402 ->
      (br_u_20903 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when 
      (not s1_17402) -> (k_run_x_u_18773 ()).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 when 
      (x_1022 < 0) -> (k_walk_18650 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_20885 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_18650)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_18756 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_20886 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_18756)).
Types:
  main_20883 : X
  br_f_life_20905 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_run_20901 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_20903 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_20894 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  f_run_20889 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  fail_20907 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Error trace::
  main_20883 ... --> 
  main_1029 ... --> 
  f_main_20899 ... --> 
  life_2300 ... --> 
  f_life_20894 [1/2] ... --> 
  br_f_life_20905 [2/2] ... --> 
  g_1010 ... --> 
  f_life_20897 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_20903 [1/2] ... --> 
  fail_20907 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0

(6-3) Checking counterexample ... DONE!

(6-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 7)::
Main: main_20883
  main_20883 -> (main_1029 false false false 0 () f_20900).
  br_f_life_20905 b_20906 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when b_20906 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_20895 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074)).
  br_f_life_20905 b_20906 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when 
      (not b_20906) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_20897 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074)).
  br_run_20901 b_20902 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when b_20902 ->
      (k_run_18752 false true x_1025).
  br_run_20901 b_20902 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when 
      (not b_20902) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_20892 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752)).
  br_u_20903 b_20904 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when b_20904 ->
      (fail_20907 true k_run_x_u_18773).
  br_u_20903 b_20904 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when 
      (not b_20904) -> (k_run_x_u_18773 ()).
  f_20900 s__r_main00_19338 s__r_main01_19338 s__r_main1_19338 -> end.
  f_g_20884 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_18373 -> (k_g_18373 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_20894 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when 
      (x_19077 > 0) ->
      (br_f_life_20905 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077).
  f_life_20894 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074 x_19077 when 
      (not (x_19077 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_19074).
  f_life_20895 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074 s__r_g00_18512 s__r_g01_18512 
  s__r_g1_18512 ->
      (walk_1021 x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 0 s__r_g1_18512
       (f_life_20896 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077
        k_life_19074)).
  f_life_20896 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077 k_life_19074 
  s__r_app00_19159 s__r_app01_19159 s__r_app1_19159 ->
      (ha1_2305 s__r_app00_19159 s__r_app01_19159 set_flag_17465 0 s__r_app1_19159 k_life_19074).
  f_life_20897 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_19077 k_life_19074 s__r_g00_18512 s__r_g01_18512 
  s__r_g1_18512 ->
      (run_1024 x_1028 s__r_g00_18512 s__r_g01_18512 set_flag_17465 0 s__r_g1_18512
       (f_life_20898 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077
        k_life_19074)).
  f_life_20898 p_x_17466 s0_17464 s1_17464 s__r_g00_18512 s__r_g01_18512 set_flag_17465 x_1028 x_19077 k_life_19074 
  s__r_app00_19216 s__r_app01_19216 s__r_app1_19216 ->
      (ha2_2302 s__r_app00_19216 s__r_app01_19216 set_flag_17465 0 s__r_app1_19216 k_life_19074).
  f_main_20899 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_19248 x_19271 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_19271 k_main_19248).
  f_run_20888 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752 x_18922 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922
       (f_run_20889 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 f_1026 k_run_18752)).
  f_run_20889 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 f_1026 k_run_18752 sp00_18921 sp01_18921 
  sp10_18921 when (x_1025 < 0) -> (k_run_18752 sp00_18921 true x_1025).
  f_run_20889 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 f_1026 k_run_18752 sp00_18921 sp01_18921 
  sp10_18921 when (not (x_1025 < 0)) ->
      (f_1026 sp00_18921 true true sp10_18921 x_1025
       (f_run_20890 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_18921 sp01_18921 sp10_18921 x_1025 x_18922 f_1026
        k_run_18752)).
  f_run_20890 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_18921 sp01_18921 sp10_18921 x_1025 x_18922 f_1026 
  k_run_18752 s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 ->
      (f_1026 s__r_f00_18914 s__r_f01_18914 true sp10_18921 s__r_f1_18914
       (f_run_20891 p_x_17404 s0_17402 s1_17402 s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 set_flag_17403 sp00_18921
        sp01_18921 sp10_18921 x_1025 x_18922 f_1026 k_run_18752)).
  f_run_20891 p_x_17404 s0_17402 s1_17402 s__r_f00_18914 s__r_f01_18914 s__r_f1_18914 set_flag_17403 sp00_18921 
  sp01_18921 sp10_18921 x_1025 x_18922 f_1026 k_run_18752 s__r_f00_18913 s__r_f01_18913 s__r_f1_18913 ->
      (run_1024 s__r_f1_18913 s__r_f00_18913 s__r_f01_18913 true sp10_18921 f_1026 k_run_18752).
  f_run_20892 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752 s__r_f00_19046 s__r_f01_19046 
  s__r_f1_19046 ->
      (f_1026 s__r_f00_19046 s__r_f01_19046 true x_1025 s__r_f1_19046
       (f_run_20893 p_x_17404 s0_17402 s1_17402 s__r_f00_19046 s__r_f01_19046 s__r_f1_19046 set_flag_17403 x_1025
        f_1026 k_run_18752)).
  f_run_20893 p_x_17404 s0_17402 s1_17402 s__r_f00_19046 s__r_f01_19046 s__r_f1_19046 set_flag_17403 x_1025 f_1026 
  k_run_18752 s__r_f00_19045 s__r_f01_19045 s__r_f1_19045 ->
      (run_1024 s__r_f1_19045 s__r_f00_19045 s__r_f01_19045 true x_1025 f_1026 k_run_18752).
  f_walk_20885 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_18650 s__r_f00_18724 s__r_f01_18724 
  s__r_f1_18724 -> (walk_1021 s__r_f1_18724 s__r_f00_18724 s__r_f01_18724 set_flag_17373 0 f_1023 k_walk_18650).
  f_x_20886 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_18756 u_18790 ->
      (rand_int (f_x_20887 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_18790 x_1025 k_run_x_18756)).
  f_x_20887 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_18790 x_1025 k_run_x_18756 x_18778 ->
      (k_run_x_18756 (x_18778 = 0)).
  fail_20907 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_18353 ->
      (k_g_18353 s0_17273 s1_17273 (f_g_20884 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_18538 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_18591 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_19074 ->
      (rand_int (f_life_20894 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_19074)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_19248 ->
      (rand_int (f_main_20899 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_19248)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_20888 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_18752)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752 when 
      (not set_flag_17403) ->
      (br_run_20901 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_18752).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 k_run_sp_18820 when x_18922 ->
      (k_run_sp_18820 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_18922 k_run_sp_18820 when 
      (not x_18922) -> (k_run_sp_18820 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when s1_17402 ->
      (br_u_20903 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_18773 when 
      (not s1_17402) -> (k_run_x_u_18773 ()).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 when 
      (x_1022 < 0) -> (k_walk_18650 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_18650 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_20885 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_18650)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_18756 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_20886 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_18756)).
Types:
  main_20883 : X
  br_f_life_20905 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_20901 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_20903 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_20894 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_20889 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  fail_20907 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              x_5:bool ->
              int[(not x_5)] ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Error trace::
  main_20883 ... --> 
  main_1029 ... --> 
  f_main_20899 ... --> 
  life_2300 ... --> 
  f_life_20894 [1/2] ... --> 
  br_f_life_20905 [2/2] ... --> 
  g_1010 ... --> 
  f_life_20897 ... --> 
  run_1024 [2/2] ... --> 
  br_run_20901 [2/2] ... --> 
  f_g_20884 ... --> 
  f_run_20892 ... --> 
  f_g_20884 ... --> 
  f_run_20893 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_20903 [1/2] ... --> 
  fail_20907 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0

(7-3) Checking counterexample ... DONE!

(7-4) Discovering ranking function ... 
DONE!

###set_main:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s_17302 = fst s__u_17301 in
   let u_2310 = snd s__u_17301 in
   let s__r_g_17307 = g_1010 s_17302 set_flag_17295 0 i_1016 in
   let s_17308 = fst s__r_g_17307 in
   let r_g_2442 = snd s__r_g_17307 in
   f_1014 x_1015 s_17308 set_flag_17295 0 r_g_2442
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s_17334 = fst s__u_17333 in
   let u_2306 = snd s__u_17333 in
   let s__u_17339 = ((true, snd s_17334), ()) in
   let s_17340 = fst s__u_17339 in
   let u_2307 = snd s__u_17339 in
   ha1_2305 s_17340 set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s_17356 = fst s__u_17355 in
   let u_2303 = snd s__u_17355 in
   let s__u_17361 = ((true, snd s_17356), ()) in
   let s_17362 = fst s__u_17361 in
   let u_2304 = snd s__u_17361 in
   ha2_2302 s_17362 set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   let s_17380 = fst s__u_17379 in
   let u_2180 = snd s__u_17379 in
   if x_1022 < 0
   then
     (s_17380, x_1022)
   else
     let s__r_f_17385 = f_1023 s_17380 set_flag_17373 0 x_1022 in
     let s_17386 = fst s__r_f_17385 in
     let r_f_2443 = snd s__r_f_17385 in
     walk_1021 r_f_2443 s_17386 set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 =
       let u_17410 =
         if snd s_17402 && not (fst s_17402)
         then
           let u_23129 = if (1 * p_x_17404) + 2 > (1 * x_1025) + 2 then () else _|_ () in
           assert ((1 * x_1025) + 2 >= 0)
       in
       rand_int () = 0
     in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17406 = fst sp_17419 in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst s_17406, true), ()) in
     let s_17425 = fst s__u_17424 in
     let u_2234 = snd s__u_17424 in
     if x_1025 < 0
     then
       (s_17425, x_1025)
     else
       let s__r_f_17430 = f_1026 s_17425 true p_x_17408 x_1025 in
       let s_17431 = fst s__r_f_17430 in
       let r_f_2444 = snd s__r_f_17430 in
       let s__r_f_17434 = f_1026 s_17431 true p_x_17408 r_f_2444 in
       let s_17435 = fst s__r_f_17434 in
       let r_f_2445 = snd s__r_f_17434 in
       run_1024 r_f_2445 s_17435 true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17445 = fst sp_17444 in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst s_17445, true), ()) in
     let s_17449 = fst s__u_17448 in
     let u_17450 = snd s__u_17448 in
     if x_1025 < 0
     then
       (s_17449, x_1025)
     else
       let s__r_f_17452 = f_1026 s_17449 true p_x_17447 x_1025 in
       let s_17453 = fst s__r_f_17452 in
       let r_f_17454 = snd s__r_f_17452 in
       let s__r_f_17451 = f_1026 s_17453 true p_x_17447 r_f_17454 in
       let s_17455 = fst s__r_f_17451 in
       let r_f_17456 = snd s__r_f_17451 in
       run_1024 r_f_17456 s_17455 true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     let s_17472 = fst s__u_17471 in
     let u_2301 = snd s__u_17471 in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17484 = fst s__r_app_17483 in
       let r_app_2447 = snd s__r_app_17483 in
       ha1_2305 s_17484 set_flag_17465 0 r_app_2447
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17498 = fst s__r_app_17497 in
       let r_app_2446 = snd s__r_app_17497 in
       ha2_2302 s_17498 set_flag_17465 0 r_app_2446
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 let s_17516 = fst s__r_main_17515 in
 let r_main_2448 = snd s__r_main_17515 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s_17302 = fst s__u_17301 in
   let s__r_g_17307 = g_1010 s_17302 set_flag_17295 0 i_1016 in
   let s_17308 = fst s__r_g_17307 in
   let r_g_2442 = snd s__r_g_17307 in
   f_1014 x_1015 s_17308 set_flag_17295 0 r_g_2442
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s_17334 = fst s__u_17333 in
   let s__u_17339 = ((true, snd s_17334), ()) in
   let s_17340 = fst s__u_17339 in
   ha1_2305 s_17340 set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s_17356 = fst s__u_17355 in
   let s__u_17361 = ((true, snd s_17356), ()) in
   let s_17362 = fst s__u_17361 in
   ha2_2302 s_17362 set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   let s_17380 = fst s__u_17379 in
   if x_1022 < 0
   then
     (s_17380, x_1022)
   else
     let s__r_f_17385 = f_1023 s_17380 set_flag_17373 0 x_1022 in
     let s_17386 = fst s__r_f_17385 in
     let r_f_2443 = snd s__r_f_17385 in
     walk_1021 r_f_2443 s_17386 set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 =
       let u_17410 =
         if snd s_17402 && not (fst s_17402)
         then
           let u_23129 = if (1 * p_x_17404) + 2 > (1 * x_1025) + 2 then () else _|_ () in
           assert ((1 * x_1025) + 2 >= 0)
       in
       rand_int () = 0
     in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17406 = fst sp_17419 in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst s_17406, true), ()) in
     let s_17425 = fst s__u_17424 in
     if x_1025 < 0
     then
       (s_17425, x_1025)
     else
       let s__r_f_17430 = f_1026 s_17425 true p_x_17408 x_1025 in
       let s_17431 = fst s__r_f_17430 in
       let r_f_2444 = snd s__r_f_17430 in
       let s__r_f_17434 = f_1026 s_17431 true p_x_17408 r_f_2444 in
       let s_17435 = fst s__r_f_17434 in
       let r_f_2445 = snd s__r_f_17434 in
       run_1024 r_f_2445 s_17435 true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17445 = fst sp_17444 in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst s_17445, true), ()) in
     let s_17449 = fst s__u_17448 in
     if x_1025 < 0
     then
       (s_17449, x_1025)
     else
       let s__r_f_17452 = f_1026 s_17449 true p_x_17447 x_1025 in
       let s_17453 = fst s__r_f_17452 in
       let r_f_17454 = snd s__r_f_17452 in
       let s__r_f_17451 = f_1026 s_17453 true p_x_17447 r_f_17454 in
       let s_17455 = fst s__r_f_17451 in
       let r_f_17456 = snd s__r_f_17451 in
       run_1024 r_f_17456 s_17455 true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     let s_17472 = fst s__u_17471 in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17484 = fst s__r_app_17483 in
       let r_app_2447 = snd s__r_app_17483 in
       ha1_2305 s_17484 set_flag_17465 0 r_app_2447
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17498 = fst s__r_app_17497 in
       let r_app_2446 = snd s__r_app_17497 in
       ha2_2302 s_17498 set_flag_17465 0 r_app_2446
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_17515 in
 r_main_2448

###inline:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s__r_g_17307 = g_1010 (fst s__u_17301) set_flag_17295 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_17307) set_flag_17295 0 (snd s__r_g_17307)
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s__u_17339 = ((true, snd (fst s__u_17333)), ()) in
   ha1_2305 (fst s__u_17339) set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s__u_17361 = ((true, snd (fst s__u_17355)), ()) in
   ha2_2302 (fst s__u_17361) set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_17379, x_1022)
   else
     let s__r_f_17385 = f_1023 (fst s__u_17379) set_flag_17373 0 x_1022 in
     walk_1021 (snd s__r_f_17385) (fst s__r_f_17385) set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 =
       let u_17410 =
         if snd s_17402 && not (fst s_17402)
         then
           let u_23129 = if (1 * p_x_17404) + 2 > (1 * x_1025) + 2 then () else _|_ () in
           assert ((1 * x_1025) + 2 >= 0)
       in
       rand_int () = 0
     in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst (fst sp_17419), true), ()) in
     if x_1025 < 0
     then
       (fst s__u_17424, x_1025)
     else
       let s__r_f_17430 = f_1026 (fst s__u_17424) true p_x_17408 x_1025 in
       let s__r_f_17434 = f_1026 (fst s__r_f_17430) true p_x_17408 (snd s__r_f_17430) in
       run_1024 (snd s__r_f_17434) (fst s__r_f_17434) true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst (fst sp_17444), true), ()) in
     if x_1025 < 0
     then
       (fst s__u_17448, x_1025)
     else
       let s__r_f_17452 = f_1026 (fst s__u_17448) true p_x_17447 x_1025 in
       let s__r_f_17451 = f_1026 (fst s__r_f_17452) true p_x_17447 (snd s__r_f_17452) in
       run_1024 (snd s__r_f_17451) (fst s__r_f_17451) true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 (fst s__u_17471) set_flag_17465 0 1 in
       ha1_2305 (fst s__r_app_17483) set_flag_17465 0 (snd s__r_app_17483)
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 (fst s__u_17471) set_flag_17465 0 1 in
       ha2_2302 (fst s__r_app_17497) set_flag_17465 0 (snd s__r_app_17497)
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 snd s__r_main_17515

###CPS:
 (let g_1010 s_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 =
    k_g_23969
      (s_17273, (fun s_17278 set_flag_17279 p_x_17280 x_1012 k_g_23989 -> k_g_23989 (s_17278, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_17294 set_flag_17295 p_x_17296 i_1016 k_app_24024 =
    let s__u_17301 k_app_s__u_24028 = k_app_s__u_24028 ((fst s_17294, true), ()) in
    s__u_17301
      (fun s__u_24129 ->
         let s__r_g_17307 k_app_s__r_g_24060 = (g_1010 (fst s__u_24129) set_flag_17295 0) i_1016 k_app_s__r_g_24060 in
         s__r_g_17307
           (fun s__r_g_24128 -> (f_1014 x_1015 (fst s__r_g_24128) set_flag_17295 0) (snd s__r_g_24128) k_app_24024))
  in
  let rec ha1_2305 s_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 =
    let s__u_17333 k_ha1_s__u_24158 = k_ha1_s__u_24158 ((fst s_17326, true), ()) in
    s__u_17333
      (fun s__u_24197 ->
         let s__u_17339 k_ha1_s__u_24172 = k_ha1_s__u_24172 ((true, snd (fst s__u_24197)), ()) in
         s__u_17339 (fun s__u_24196 -> (ha1_2305 (fst s__u_24196) set_flag_17327 0) x_1018 k_ha1_24154))
  in
  let rec ha2_2302 s_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 =
    let s__u_17355 k_ha2_s__u_24211 = k_ha2_s__u_24211 ((fst s_17348, true), ()) in
    s__u_17355
      (fun s__u_24250 ->
         let s__u_17361 k_ha2_s__u_24225 = k_ha2_s__u_24225 ((true, snd (fst s__u_24250)), ()) in
         s__u_17361 (fun s__u_24249 -> (ha2_2302 (fst s__u_24249) set_flag_17349 0) x_1020 k_ha2_24207))
  in
  let rec walk_1021 x_1022 s_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 =
    let s__u_17379 k_walk_s__u_24270 = k_walk_s__u_24270 ((fst s_17372, true), ()) in
    s__u_17379
      (fun s__u_24345 ->
         if x_1022 < 0
         then
           k_walk_24266 (fst s__u_24345, x_1022)
         else
           let s__r_f_17385 k_walk_s__r_f_24296 = (f_1023 (fst s__u_24345) set_flag_17373 0) x_1022 k_walk_s__r_f_24296 in
           s__r_f_17385
             (fun s__r_f_24340 ->
                (walk_1021 (snd s__r_f_24340) (fst s__r_f_24340) set_flag_17373 0) f_1023 k_walk_24266))
  in
  let rec run_1024 x_1025 s_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 =
    if set_flag_17403
    then
      let x_17405 k_run_x_24372 =
        let u_17410 k_run_x_u_24408 =
          if snd s_17402
          then
            if not (fst s_17402)
            then
              let u_25864 k_run_x_u_u_25865 =
                if (1 * p_x_17404) + 2 > (1 * x_1025) + 2 then k_run_x_u_u_25865 () else _|_
              in
              u_25864
                (fun u_25872 ->
                   if (1 * x_1025) + 2 >= 0 then k_run_x_u_24408 () else <|fail|> () k_run_x_u_24408)
            else
              k_run_x_u_24408 ()
          else
            k_run_x_u_24408 ()
        in
        u_17410 (fun u_24425 -> rand_int_cps () (fun x_24413 -> k_run_x_24372 (x_24413 = 0)))
      in
      x_17405
        (fun x_24557 ->
           let sp_17419 k_run_sp_24455 =
             if x_24557
             then
               k_run_sp_24455 ((false, false), (x_1025))
             else
               k_run_sp_24455 (s_17402, (p_x_17404))
           in
           sp_17419
             (fun sp_24556 ->
                let s__u_17424 k_run_s__u_24463 = k_run_s__u_24463 ((fst (fst sp_24556), true), ()) in
                s__u_17424
                  (fun s__u_24554 ->
                     if x_1025 < 0
                     then
                       k_run_24368 (fst s__u_24554, x_1025)
                     else
                       let s__r_f_17430 k_run_s__r_f_24489 =
                         (f_1026 (fst s__u_24554) true (#0 (snd sp_24556))) x_1025 k_run_s__r_f_24489
                       in
                       s__r_f_17430
                         (fun s__r_f_24549 ->
                            let s__r_f_17434 k_run_s__r_f_24504 =
                              (f_1026 (fst s__r_f_24549) true (#0 (snd sp_24556)))
                                (snd s__r_f_24549) k_run_s__r_f_24504
                            in
                            s__r_f_17434
                              (fun s__r_f_24548 ->
                                 (run_1024
                                   (snd s__r_f_24548) (fst s__r_f_24548) true (#0 (snd sp_24556)))
                                   f_1026 k_run_24368)))))
    else
      let sp_17444 k_run_sp_24587 = k_run_sp_24587 ((false, false), (x_1025)) in
      sp_17444
        (fun sp_24688 ->
           let s__u_17448 k_run_s__u_24595 = k_run_s__u_24595 ((fst (fst sp_24688), true), ()) in
           s__u_17448
             (fun s__u_24686 ->
                if x_1025 < 0
                then
                  k_run_24368 (fst s__u_24686, x_1025)
                else
                  let s__r_f_17452 k_run_s__r_f_24621 =
                    (f_1026 (fst s__u_24686) true (#0 (snd sp_24688))) x_1025 k_run_s__r_f_24621
                  in
                  s__r_f_17452
                    (fun s__r_f_24681 ->
                       let s__r_f_17451 k_run_s__r_f_24636 =
                         (f_1026 (fst s__r_f_24681) true (#0 (snd sp_24688)))
                           (snd s__r_f_24681) k_run_s__r_f_24636
                       in
                       s__r_f_17451
                         (fun s__r_f_24680 ->
                            (run_1024 (snd s__r_f_24680) (fst s__r_f_24680) true (#0 (snd sp_24688)))
                              f_1026 k_run_24368))))
  in
  let rec life_2300 s_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 =
    rand_int_cps
      () 
      (fun x_24712 ->
         if x_24712 > 0
         then
           let s__u_17471 k_life_s__u_24727 = k_life_s__u_24727 ((fst s_17464, true), ()) in
           s__u_17471
             (fun s__u_24856 ->
                if x_1028 < 0
                then
                  let s__r_app_17483 k_life_s__r_app_24775 =
                    (app_2308 walk_1021 x_1028 (fst s__u_24856) set_flag_17465 0)
                      1 k_life_s__r_app_24775
                  in
                  s__r_app_17483
                    (fun s__r_app_24794 ->
                       (ha1_2305 (fst s__r_app_24794) set_flag_17465 0)
                         (snd s__r_app_24794) k_life_24709)
                else
                  let s__r_app_17497 k_life_s__r_app_24832 =
                    (app_2308 run_1024 x_1028 (fst s__u_24856) set_flag_17465 0)
                      1 k_life_s__r_app_24832
                  in
                  s__r_app_17497
                    (fun s__r_app_24851 ->
                       (ha2_2302 (fst s__r_app_24851) set_flag_17465 0)
                         (snd s__r_app_24851) k_life_24709))
         else
           (life_2300 s_17464 set_flag_17465 0) x_1028 k_life_24709)
  in
  let main_1029 s_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 =
    rand_int_cps () (fun x_24906 -> (life_2300 s_17508 set_flag_17509 0) x_24906 k_main_24883)
  in
  let s__r_main_17515 k_s__r_main_24967 = (((main_1029 (false, false)) false) 0) () k_s__r_main_24967 in
  s__r_main_17515 (fun s__r_main_24973 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 =
    k_g_23969
      s0_17273 s1_17273 
      (fun s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 k_g_23989 ->
         k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 =
    ha1_2305 true true set_flag_17327 0 x_1018 k_ha1_24154
  in
  let rec ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 =
    ha2_2302 true true set_flag_17349 0 x_1020 k_ha2_24207
  in
  let rec walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 =
    if x_1022 < 0
    then
      k_walk_24266 s0_17372 true x_1022
    else
      f_1023
        s0_17372 true set_flag_17373 0 x_1022 
        (fun s__r_f00_24340 s__r_f01_24340 s__r_f1_24340 ->
           walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266)
  in
  let rec run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 =
    if set_flag_17403
    then
      let x_17405 k_run_x_24372 =
        let u_17410 k_run_x_u_24408 =
          if s1_17402
          then
            if not s0_17402
            then
              let u_25864 k_run_x_u_u_25865 =
                if (1 * p_x_17404) + 2 > (1 * x_1025) + 2 then k_run_x_u_u_25865 () else _|_
              in
              u_25864
                (fun u_25872 ->
                   if (1 * x_1025) + 2 >= 0 then k_run_x_u_24408 () else <|fail|> () k_run_x_u_24408)
            else
              k_run_x_u_24408 ()
          else
            k_run_x_u_24408 ()
        in
        u_17410 (fun u_24425 -> rand_int_cps () (fun x_24413 -> k_run_x_24372 (x_24413 = 0)))
      in
      x_17405
        (fun x_24557 ->
           let sp_17419 k_run_sp_24455 =
             if x_24557
             then
               k_run_sp_24455 false false x_1025
             else
               k_run_sp_24455 s0_17402 s1_17402 p_x_17404
           in
           sp_17419
             (fun sp00_24556 sp01_24556 sp10_24556 ->
                if x_1025 < 0
                then
                  k_run_24368 sp00_24556 true x_1025
                else
                  f_1026
                    sp00_24556 true true sp10_24556 x_1025 
                    (fun s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
                       f_1026
                         s__r_f00_24549 s__r_f01_24549 true sp10_24556 
                         s__r_f1_24549 
                         (fun s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
                            run_1024
                              s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 
                              true sp10_24556 f_1026 k_run_24368))))
    else
      if x_1025 < 0
      then
        k_run_24368 false true x_1025
      else
        f_1026
          false true true x_1025 x_1025 
          (fun s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 ->
             f_1026
               s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681 
               (fun s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
                  run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368))
  in
  let rec life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 =
    rand_int_cps
      () 
      (fun x_24712 ->
         if x_24712 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_24128 s__r_g01_24128 s__r_g1_24128 ->
                  walk_1021
                    x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 
                    0 s__r_g1_24128 
                    (fun s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
                       ha1_2305
                         s__r_app00_24794 s__r_app01_24794 set_flag_17465 
                         0 s__r_app1_24794 k_life_24709))
           else
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_24128 s__r_g01_24128 s__r_g1_24128 ->
                  run_1024
                    x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 
                    0 s__r_g1_24128 
                    (fun s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
                       ha2_2302
                         s__r_app00_24851 s__r_app01_24851 set_flag_17465 
                         0 s__r_app1_24851 k_life_24709))
         else
           life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709)
  in
  let main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 =
    rand_int_cps () (fun x_24906 -> life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883)
  in
  main_1029 false false false 0 () (fun s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> {end})
  # [ACPS])

###replace_bottom_def:
 (let g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 =
    k_g_23969
      s0_17273 s1_17273 
      (fun s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 k_g_23989 ->
         k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 = _|_ in
  let rec ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 = _|_ in
  let rec walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 =
    if x_1022 < 0
    then
      k_walk_24266 s0_17372 true x_1022
    else
      f_1023
        s0_17372 true set_flag_17373 0 x_1022 
        (fun s__r_f00_24340 s__r_f01_24340 s__r_f1_24340 ->
           walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266)
  in
  let rec run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 =
    if set_flag_17403
    then
      let x_17405 k_run_x_24372 =
        let u_17410 k_run_x_u_24408 =
          if s1_17402
          then
            if not s0_17402
            then
              let u_25864 k_run_x_u_u_25865 =
                if (1 * p_x_17404) + 2 > (1 * x_1025) + 2 then k_run_x_u_u_25865 () else _|_
              in
              u_25864
                (fun u_25872 ->
                   if (1 * x_1025) + 2 >= 0 then k_run_x_u_24408 () else <|fail|> () k_run_x_u_24408)
            else
              k_run_x_u_24408 ()
          else
            k_run_x_u_24408 ()
        in
        u_17410 (fun u_24425 -> rand_int_cps () (fun x_24413 -> k_run_x_24372 (x_24413 = 0)))
      in
      x_17405
        (fun x_24557 ->
           let sp_17419 k_run_sp_24455 =
             if x_24557
             then
               k_run_sp_24455 false false x_1025
             else
               k_run_sp_24455 s0_17402 s1_17402 p_x_17404
           in
           sp_17419
             (fun sp00_24556 sp01_24556 sp10_24556 ->
                if x_1025 < 0
                then
                  k_run_24368 sp00_24556 true x_1025
                else
                  f_1026
                    sp00_24556 true true sp10_24556 x_1025 
                    (fun s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
                       f_1026
                         s__r_f00_24549 s__r_f01_24549 true sp10_24556 
                         s__r_f1_24549 
                         (fun s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
                            run_1024
                              s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 
                              true sp10_24556 f_1026 k_run_24368))))
    else
      if x_1025 < 0
      then
        k_run_24368 false true x_1025
      else
        f_1026
          false true true x_1025 x_1025 
          (fun s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 ->
             f_1026
               s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681 
               (fun s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
                  run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368))
  in
  let rec life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 =
    rand_int_cps
      () 
      (fun x_24712 ->
         if x_24712 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_24128 s__r_g01_24128 s__r_g1_24128 ->
                  walk_1021
                    x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 
                    0 s__r_g1_24128 
                    (fun s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
                       ha1_2305
                         s__r_app00_24794 s__r_app01_24794 set_flag_17465 
                         0 s__r_app1_24794 k_life_24709))
           else
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_24128 s__r_g01_24128 s__r_g1_24128 ->
                  run_1024
                    x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 
                    0 s__r_g1_24128 
                    (fun s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
                       ha2_2302
                         s__r_app00_24851 s__r_app01_24851 set_flag_17465 
                         0 s__r_app1_24851 k_life_24709))
         else
           life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709)
  in
  let main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 =
    rand_int_cps () (fun x_24906 -> life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883)
  in
  main_1029 false false false 0 () (fun s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> {end})
  # [ACPS])

Program with abstraction types (CEGAR-cycle 7)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_run_26587 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Error trace::
  main_26568 ... --> 
  main_1029 ... --> 
  f_main_26585 ... --> 
  life_2300 ... --> 
  f_life_26580 [1/2] ... --> 
  br_f_life_26591 [2/2] ... --> 
  g_1010 ... --> 
  f_life_26583 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [2/2] ... --> 
  fail_26593 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 1; 0

(7-3) Checking counterexample ... DONE!

(7-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 8)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_26587 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              x_5:bool ->
              int[(not x_5)] ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(8-1) Abstracting ... DONE!

(8-2) Checking HORS ... DONE!

Error trace::
  main_26568 ... --> 
  main_1029 ... --> 
  f_main_26585 ... --> 
  life_2300 ... --> 
  f_life_26580 [1/2] ... --> 
  br_f_life_26591 [2/2] ... --> 
  g_1010 ... --> 
  f_life_26583 ... --> 
  run_1024 [2/2] ... --> 
  br_run_26587 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26578 ... --> 
  f_g_26569 ... --> 
  f_run_26579 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [2/2] ... --> 
  fail_26593 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(8-3) Checking counterexample ... DONE!

(8-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 9)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[x_7 >= 0 || x_2; (not x_6)] -> X)
  br_run_26587 : (bool ->
                  x_3:int ->
                  bool ->
                  bool ->
                  bool ->
                  int[x_3 >= 0] ->
                  (bool ->
                   bool ->
                   bool ->
                   int ->
                   x_13:int[1 >= -x_13; x_13 >= 0] -> (bool -> bool -> x_17:int[2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (bool -> int -> bool -> bool -> bool -> x_7:int[2 >= -x_7] -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[2 >= -x_6] -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (bool ->
              bool ->
              bool ->
              int ->
              x_15:int[2 >= x_6 - x_15; 1 >= x_6 - x_15] -> (bool -> bool -> x_19:int[2 >= -x_19; 1 >= -x_19] -> X) ->
              X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              bool ->
              x_5:bool ->
              int[2 >= -x_2; x_2 >= 0; (not x_5)] ->
              (bool ->
               bool ->
               bool ->
               int -> x_12:int[1 >= -x_12; x_12 >= 0] -> (bool -> bool -> x_16:int[2 >= -x_16; 1 >= -x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> x_6:int[2 >= -x_6] -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(9-1) Abstracting ... DONE!

(9-2) Checking HORS ... DONE!

Error trace::
  main_26568 ... --> 
  main_1029 ... --> 
  f_main_26585 ... --> 
  life_2300 ... --> 
  f_life_26580 [1/2] ... --> 
  br_f_life_26591 [2/2] ... --> 
  g_1010 ... --> 
  f_life_26583 ... --> 
  run_1024 [2/2] ... --> 
  br_run_26587 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26578 ... --> 
  f_g_26569 ... --> 
  f_run_26579 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [2/2] ... --> 
  f_x_26572 ... --> 
  f_x_26573 ... --> 
  f_run_26574 ... --> 
  sp_17419 [1/2] ... --> 
  f_run_26575 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26576 ... --> 
  f_g_26569 ... --> 
  f_run_26577 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [2/2] ... --> 
  fail_26593 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(9-3) Checking counterexample ... DONE!

(9-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 10)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[x_7 >= 0 || x_2; (not x_6)] -> X)
  br_run_26587 : (bool ->
                  x_3:int ->
                  bool ->
                  bool ->
                  bool ->
                  int[x_3 >= 0] ->
                  (bool ->
                   x_10:bool ->
                   bool ->
                   int ->
                   x_13:int[x_10; 1 >= -x_13; x_13 >= 0] ->
                   (bool -> x_16:bool -> x_17:int[x_16; 2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (bool -> int -> bool -> bool -> bool -> x_7:int[2 >= -x_7] -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[2 >= -x_6] -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (bool ->
              x_12:bool ->
              bool ->
              int ->
              x_15:int[x_12; 2 >= x_6 - x_15; 1 >= x_6 - x_15] ->
              (bool -> x_18:bool -> x_19:int[x_18; 2 >= -x_19; 1 >= -x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              x_4:bool ->
              x_5:bool ->
              int[x_4; 2 >= -x_2; x_2 >= 0; (not x_5)] ->
              (bool ->
               x_9:bool ->
               bool ->
               int ->
               x_12:int[x_9; 1 >= -x_12; x_12 >= 0] ->
               (bool -> x_15:bool -> x_16:int[x_15; 2 >= -x_16; 1 >= -x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> x_4:bool -> bool -> x_6:int[x_4; 2 >= -x_6] -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(10-1) Abstracting ... DONE!

(10-2) Checking HORS ... DONE!

Error trace::
  main_26568 ... --> 
  main_1029 ... --> 
  f_main_26585 ... --> 
  life_2300 ... --> 
  f_life_26580 [1/2] ... --> 
  br_f_life_26591 [2/2] ... --> 
  g_1010 ... --> 
  f_life_26583 ... --> 
  run_1024 [2/2] ... --> 
  br_run_26587 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26578 ... --> 
  f_g_26569 ... --> 
  f_run_26579 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [2/2] ... --> 
  f_x_26572 ... --> 
  f_x_26573 ... --> 
  f_run_26574 ... --> 
  sp_17419 [1/2] ... --> 
  f_run_26575 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26576 ... --> 
  f_g_26569 ... --> 
  f_run_26577 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [2/2] ... --> 
  fail_26593 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(10-3) Checking counterexample ... DONE!

(10-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 11)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[x_7 >= 0 || x_2; (not x_6)] -> X)
  br_run_26587 : (bool ->
                  x_3:int ->
                  bool ->
                  bool ->
                  bool ->
                  int[x_3 >= 0] ->
                  (x_9:bool ->
                   x_10:bool ->
                   bool ->
                   int ->
                   x_13:int[(not x_9); x_10; 1 >= -x_13; x_13 >= 0] ->
                   (x_15:bool -> x_16:bool -> x_17:int[(not x_15); x_16; 2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (x_2:bool -> int -> bool -> bool -> bool -> x_7:int[x_2; 2 >= -x_7] -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[2 >= -x_6] -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (x_11:bool ->
              x_12:bool ->
              bool ->
              int ->
              x_15:int[(not x_11); x_12; 2 >= x_6 - x_15; 1 >= x_6 - x_15] ->
              (x_17:bool -> x_18:bool -> x_19:int[(not x_17); x_18; 2 >= -x_19; 1 >= -x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              x_3:bool ->
              x_4:bool ->
              x_5:bool ->
              int[(not x_3); x_4; 2 >= -x_2; x_2 >= 0; (not x_5)] ->
              (x_8:bool ->
               x_9:bool ->
               bool ->
               int ->
               x_12:int[(not x_8); x_9; 1 >= -x_12; x_12 >= 0] ->
               (x_14:bool -> x_15:bool -> x_16:int[(not x_14); x_15; 2 >= -x_16; 1 >= -x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> x_3:bool -> x_4:bool -> bool -> x_6:int[(not x_3); x_4; 2 >= -x_6] -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(11-1) Abstracting ... DONE!

(11-2) Checking HORS ... DONE!

Error trace::
  main_26568 ... --> 
  main_1029 ... --> 
  f_main_26585 ... --> 
  life_2300 ... --> 
  f_life_26580 [1/2] ... --> 
  br_f_life_26591 [2/2] ... --> 
  g_1010 ... --> 
  f_life_26583 ... --> 
  run_1024 [2/2] ... --> 
  br_run_26587 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26578 ... --> 
  f_g_26569 ... --> 
  f_run_26579 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [1/2] ... --> 
  f_x_26572 ... --> 
  f_x_26573 ... --> 
  f_run_26574 ... --> 
  sp_17419 [1/2] ... --> 
  f_run_26575 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26576 ... --> 
  f_g_26569 ... --> 
  f_run_26577 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [2/2] ... --> 
  fail_26593 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(11-3) Checking counterexample ... DONE!

(11-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 12)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[x_7 >= 0 || x_2; (not x_6)] -> X)
  br_run_26587 : (bool ->
                  x_3:int ->
                  bool ->
                  bool ->
                  bool ->
                  int[x_3 >= 0] ->
                  (x_9:bool ->
                   x_10:bool ->
                   bool ->
                   int ->
                   x_13:int[(not x_9); x_10; 1 >= -x_13; x_13 >= 0] ->
                   (x_15:bool -> x_16:bool -> x_17:int[(not x_15); x_16; 2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (x_2:bool -> int -> bool -> bool -> bool -> x_7:int[x_2; 2 >= -x_7] -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool ->
                  bool ->
                  bool ->
                  int ->
                  x_13:int[1 >= -x_13; x_13 >= 0] -> (bool -> bool -> x_17:int[2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[2 >= -x_6] -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (x_11:bool ->
              x_12:bool ->
              bool ->
              int ->
              x_15:int[(not x_11); x_12; 2 >= x_6 - x_15; 1 >= x_6 - x_15] ->
              (x_17:bool -> x_18:bool -> x_19:int[(not x_17); x_18; 2 >= -x_19; 1 >= -x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              x_3:bool ->
              x_4:bool ->
              x_5:bool ->
              int[(not x_3); x_4; 2 >= -x_2; x_2 >= 0; (not x_5)] ->
              (x_8:bool ->
               x_9:bool ->
               bool ->
               int ->
               x_12:int[(not x_8); x_9; 1 >= -x_12; x_12 >= 0] ->
               (x_14:bool -> x_15:bool -> x_16:int[(not x_14); x_15; 2 >= -x_16; 1 >= -x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> x_3:bool -> x_4:bool -> bool -> x_6:int[(not x_3); x_4; 2 >= -x_6] -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(12-1) Abstracting ... DONE!

(12-2) Checking HORS ... DONE!

Error trace::
  main_26568 ... --> 
  main_1029 ... --> 
  f_main_26585 ... --> 
  life_2300 ... --> 
  f_life_26580 [1/2] ... --> 
  br_f_life_26591 [2/2] ... --> 
  g_1010 ... --> 
  f_life_26583 ... --> 
  run_1024 [2/2] ... --> 
  br_run_26587 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26578 ... --> 
  f_g_26569 ... --> 
  f_run_26579 ... --> 
  run_1024 [2/2] ... --> 
  br_run_26587 [2/2] ... --> 
  f_g_26569 ... --> 
  f_run_26578 ... --> 
  f_g_26569 ... --> 
  f_run_26579 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_26589 [1/2] ... --> 
  u_25864 [1/2] ... --> 
  f_u_26571 [2/2] ... --> 
  fail_26593 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(12-3) Checking counterexample ... DONE!

(12-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 13)::
Main: main_26568
  main_26568 -> (main_1029 false false false 0 () f_26586).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when b_26592 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_f_life_26591 b_26592 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not b_26592) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709)).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when b_26588 ->
      (k_run_24368 false true x_1025).
  br_run_26587 b_26588 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not b_26588) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when b_26590 ->
      (u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408)).
  br_u_26589 b_26590 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not b_26590) -> (k_run_x_u_24408 ()).
  f_26586 s__r_main00_24973 s__r_main01_24973 s__r_main1_24973 -> end.
  f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_23989 -> (k_g_23989 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (x_24712 > 0) ->
      (br_f_life_26591 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712).
  f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709 x_24712 when 
      (not (x_24712 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_24709).
  f_life_26581 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (walk_1021 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26582 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24794 s__r_app01_24794 s__r_app1_24794 ->
      (ha1_2305 s__r_app00_24794 s__r_app01_24794 set_flag_17465 0 s__r_app1_24794 k_life_24709).
  f_life_26583 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_24712 k_life_24709 s__r_g00_24128 s__r_g01_24128 
  s__r_g1_24128 ->
      (run_1024 x_1028 s__r_g00_24128 s__r_g01_24128 set_flag_17465 0 s__r_g1_24128
       (f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712
        k_life_24709)).
  f_life_26584 p_x_17466 s0_17464 s1_17464 s__r_g00_24128 s__r_g01_24128 set_flag_17465 x_1028 x_24712 k_life_24709 
  s__r_app00_24851 s__r_app01_24851 s__r_app1_24851 ->
      (ha2_2302 s__r_app00_24851 s__r_app01_24851 set_flag_17465 0 s__r_app1_24851 k_life_24709).
  f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883 x_24906 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_24906 k_main_24883).
  f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 x_24557 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557
       (f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (x_1025 < 0) -> (k_run_24368 sp00_24556 true x_1025).
  f_run_26575 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 f_1026 k_run_24368 sp00_24556 sp01_24556 
  sp10_24556 when (not (x_1025 < 0)) ->
      (f_1026 sp00_24556 true true sp10_24556 x_1025
       (f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026
        k_run_24368)).
  f_run_26576 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_24556 sp01_24556 sp10_24556 x_1025 x_24557 f_1026 
  k_run_24368 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 ->
      (f_1026 s__r_f00_24549 s__r_f01_24549 true sp10_24556 s__r_f1_24549
       (f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556
        sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368)).
  f_run_26577 p_x_17404 s0_17402 s1_17402 s__r_f00_24549 s__r_f01_24549 s__r_f1_24549 set_flag_17403 sp00_24556 
  sp01_24556 sp10_24556 x_1025 x_24557 f_1026 k_run_24368 s__r_f00_24548 s__r_f01_24548 s__r_f1_24548 ->
      (run_1024 s__r_f1_24548 s__r_f00_24548 s__r_f01_24548 true sp10_24556 f_1026 k_run_24368).
  f_run_26578 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368 s__r_f00_24681 s__r_f01_24681 
  s__r_f1_24681 ->
      (f_1026 s__r_f00_24681 s__r_f01_24681 true x_1025 s__r_f1_24681
       (f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025
        f_1026 k_run_24368)).
  f_run_26579 p_x_17404 s0_17402 s1_17402 s__r_f00_24681 s__r_f01_24681 s__r_f1_24681 set_flag_17403 x_1025 f_1026 
  k_run_24368 s__r_f00_24680 s__r_f01_24680 s__r_f1_24680 ->
      (run_1024 s__r_f1_24680 s__r_f00_24680 s__r_f01_24680 true x_1025 f_1026 k_run_24368).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_24408 ()).
  f_u_26571 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 u_25872 when 
      (not (((1 * x_1025) + 2) >= 0)) -> (fail_26593 true k_run_x_u_24408).
  f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266 s__r_f00_24340 s__r_f01_24340 
  s__r_f1_24340 -> (walk_1021 s__r_f1_24340 s__r_f00_24340 s__r_f01_24340 set_flag_17373 0 f_1023 k_walk_24266).
  f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 u_24425 ->
      (rand_int (f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372)).
  f_x_26573 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_24425 x_1025 k_run_x_24372 x_24413 ->
      (k_run_x_24372 (x_24413 = 0)).
  fail_26593 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_23969 ->
      (k_g_23969 s0_17273 s1_17273 (f_g_26569 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_24154 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_24207 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_24709 ->
      (rand_int (f_life_26580 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_24709)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_24883 ->
      (rand_int (f_main_26585 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_24883)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_26574 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_24368)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368 when 
      (not set_flag_17403) ->
      (br_run_26587 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_24368).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when x_24557 ->
      (k_run_sp_24455 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_24557 k_run_sp_24455 when 
      (not x_24557) -> (k_run_sp_24455 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when s1_17402 ->
      (br_u_26589 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_24408 when 
      (not s1_17402) -> (k_run_x_u_24408 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_25865 ()).
  u_25864 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_25865 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> _|_.
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (x_1022 < 0) -> (k_walk_24266 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_24266 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_26570 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_24266)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_26572 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_24372)).
Types:
  main_26568 : X
  br_f_life_26591 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[x_7 >= 0 || x_2; (not x_6)] -> X)
  br_run_26587 : (bool ->
                  x_3:int ->
                  bool ->
                  bool ->
                  bool ->
                  int[x_3 >= 0] ->
                  (x_9:bool ->
                   x_10:bool ->
                   bool ->
                   int ->
                   x_13:int[(not x_9); x_10; 1 >= -x_13; x_13 >= 0] ->
                   (x_15:bool -> x_16:bool -> x_17:int[(not x_15); x_16; 2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_26589 : (x_2:bool -> int -> bool -> bool -> bool -> x_7:int[x_2; 2 >= -x_7] -> (unit -> X) -> X)
  f_life_26580 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_26575 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool ->
                  bool ->
                  bool ->
                  int ->
                  x_13:int[1 >= -x_13; x_13 >= 0] -> (bool -> bool -> x_17:int[2 >= -x_17; 1 >= -x_17] -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_26571 : (int -> bool -> bool -> bool -> x_6:int -> (unit -> X) -> unit[2 >= -x_6] -> X)
  fail_26593 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (x_11:bool ->
              x_12:bool ->
              bool ->
              int ->
              x_15:int[(not x_11); x_12; 2 >= x_6 - x_15; 1 >= x_6 - x_15] ->
              (x_17:bool -> x_18:bool -> x_19:int[(not x_17); x_18; 2 >= -x_19; 1 >= -x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              x_3:bool ->
              x_4:bool ->
              x_5:bool ->
              int[x_5; (not x_3); x_4; 2 >= -x_2; x_2 >= 0; (not x_5)] ->
              (x_8:bool ->
               x_9:bool ->
               bool ->
               int ->
               x_12:int[(not x_8); x_9; 1 >= -x_12; x_12 >= 0] ->
               (x_14:bool -> x_15:bool -> x_16:int[(not x_14); x_15; 2 >= -x_16; 1 >= -x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> x_3:bool -> x_4:bool -> bool -> x_6:int[(not x_3); x_4; 2 >= -x_6] -> (unit -> X) -> X)
  u_25864 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(13-1) Abstracting ... DONE!

(13-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s_17302 = fst s__u_17301 in
   let u_2310 = snd s__u_17301 in
   let s__r_g_17307 = g_1010 s_17302 set_flag_17295 0 i_1016 in
   let s_17308 = fst s__r_g_17307 in
   let r_g_2442 = snd s__r_g_17307 in
   f_1014 x_1015 s_17308 set_flag_17295 0 r_g_2442
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s_17334 = fst s__u_17333 in
   let u_2306 = snd s__u_17333 in
   let s__u_17339 = ((true, snd s_17334), ()) in
   let s_17340 = fst s__u_17339 in
   let u_2307 = snd s__u_17339 in
   ha1_2305 s_17340 set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s_17356 = fst s__u_17355 in
   let u_2303 = snd s__u_17355 in
   let s__u_17361 = ((true, snd s_17356), ()) in
   let s_17362 = fst s__u_17361 in
   let u_2304 = snd s__u_17361 in
   ha2_2302 s_17362 set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   let s_17380 = fst s__u_17379 in
   let u_2180 = snd s__u_17379 in
   if x_1022 < 0
   then
     (s_17380, x_1022)
   else
     let s__r_f_17385 = f_1023 s_17380 set_flag_17373 0 x_1022 in
     let s_17386 = fst s__r_f_17385 in
     let r_f_2443 = snd s__r_f_17385 in
     walk_1021 r_f_2443 s_17386 set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 =
       let u_17410 =
         if snd s_17402 && not (fst s_17402)
         then
           let u_23129 = assert ((1 * p_x_17404) + 2 > (1 * x_1025) + 2) in
           if (1 * x_1025) + 2 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17406 = fst sp_17419 in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst s_17406, true), ()) in
     let s_17425 = fst s__u_17424 in
     let u_2234 = snd s__u_17424 in
     if x_1025 < 0
     then
       (s_17425, x_1025)
     else
       let s__r_f_17430 = f_1026 s_17425 true p_x_17408 x_1025 in
       let s_17431 = fst s__r_f_17430 in
       let r_f_2444 = snd s__r_f_17430 in
       let s__r_f_17434 = f_1026 s_17431 true p_x_17408 r_f_2444 in
       let s_17435 = fst s__r_f_17434 in
       let r_f_2445 = snd s__r_f_17434 in
       run_1024 r_f_2445 s_17435 true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17445 = fst sp_17444 in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst s_17445, true), ()) in
     let s_17449 = fst s__u_17448 in
     let u_17450 = snd s__u_17448 in
     if x_1025 < 0
     then
       (s_17449, x_1025)
     else
       let s__r_f_17452 = f_1026 s_17449 true p_x_17447 x_1025 in
       let s_17453 = fst s__r_f_17452 in
       let r_f_17454 = snd s__r_f_17452 in
       let s__r_f_17451 = f_1026 s_17453 true p_x_17447 r_f_17454 in
       let s_17455 = fst s__r_f_17451 in
       let r_f_17456 = snd s__r_f_17451 in
       run_1024 r_f_17456 s_17455 true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     let s_17472 = fst s__u_17471 in
     let u_2301 = snd s__u_17471 in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17484 = fst s__r_app_17483 in
       let r_app_2447 = snd s__r_app_17483 in
       ha1_2305 s_17484 set_flag_17465 0 r_app_2447
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17498 = fst s__r_app_17497 in
       let r_app_2446 = snd s__r_app_17497 in
       ha2_2302 s_17498 set_flag_17465 0 r_app_2446
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 let s_17516 = fst s__r_main_17515 in
 let r_main_2448 = snd s__r_main_17515 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s_17302 = fst s__u_17301 in
   let s__r_g_17307 = g_1010 s_17302 set_flag_17295 0 i_1016 in
   let s_17308 = fst s__r_g_17307 in
   let r_g_2442 = snd s__r_g_17307 in
   f_1014 x_1015 s_17308 set_flag_17295 0 r_g_2442
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s_17334 = fst s__u_17333 in
   let s__u_17339 = ((true, snd s_17334), ()) in
   let s_17340 = fst s__u_17339 in
   ha1_2305 s_17340 set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s_17356 = fst s__u_17355 in
   let s__u_17361 = ((true, snd s_17356), ()) in
   let s_17362 = fst s__u_17361 in
   ha2_2302 s_17362 set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   let s_17380 = fst s__u_17379 in
   if x_1022 < 0
   then
     (s_17380, x_1022)
   else
     let s__r_f_17385 = f_1023 s_17380 set_flag_17373 0 x_1022 in
     let s_17386 = fst s__r_f_17385 in
     let r_f_2443 = snd s__r_f_17385 in
     walk_1021 r_f_2443 s_17386 set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 =
       let u_17410 =
         if snd s_17402 && not (fst s_17402)
         then
           let u_23129 = assert ((1 * p_x_17404) + 2 > (1 * x_1025) + 2) in
           if (1 * x_1025) + 2 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17406 = fst sp_17419 in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst s_17406, true), ()) in
     let s_17425 = fst s__u_17424 in
     if x_1025 < 0
     then
       (s_17425, x_1025)
     else
       let s__r_f_17430 = f_1026 s_17425 true p_x_17408 x_1025 in
       let s_17431 = fst s__r_f_17430 in
       let r_f_2444 = snd s__r_f_17430 in
       let s__r_f_17434 = f_1026 s_17431 true p_x_17408 r_f_2444 in
       let s_17435 = fst s__r_f_17434 in
       let r_f_2445 = snd s__r_f_17434 in
       run_1024 r_f_2445 s_17435 true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let s_17445 = fst sp_17444 in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst s_17445, true), ()) in
     let s_17449 = fst s__u_17448 in
     if x_1025 < 0
     then
       (s_17449, x_1025)
     else
       let s__r_f_17452 = f_1026 s_17449 true p_x_17447 x_1025 in
       let s_17453 = fst s__r_f_17452 in
       let r_f_17454 = snd s__r_f_17452 in
       let s__r_f_17451 = f_1026 s_17453 true p_x_17447 r_f_17454 in
       let s_17455 = fst s__r_f_17451 in
       let r_f_17456 = snd s__r_f_17451 in
       run_1024 r_f_17456 s_17455 true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     let s_17472 = fst s__u_17471 in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17484 = fst s__r_app_17483 in
       let r_app_2447 = snd s__r_app_17483 in
       ha1_2305 s_17484 set_flag_17465 0 r_app_2447
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 s_17472 set_flag_17465 0 1 in
       let s_17498 = fst s__r_app_17497 in
       let r_app_2446 = snd s__r_app_17497 in
       ha2_2302 s_17498 set_flag_17465 0 r_app_2446
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_17515 in
 r_main_2448

###inline:
 let g_1010 (s_17273:(bool * bool)) (set_flag_17274:bool) (p_x_17275:int) (i_1011:int) =
   (s_17273, 
    (fun (s_17278:(bool * bool)) (set_flag_17279:bool) (p_x_17280:int) (x_1012:int) -> (s_17278, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_17294:(bool * bool)) (set_flag_17295:bool) (
             p_x_17296:int) (i_1016:int) =
   let s__u_17301 = ((fst s_17294, true), ()) in
   let s__r_g_17307 = g_1010 (fst s__u_17301) set_flag_17295 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_17307) set_flag_17295 0 (snd s__r_g_17307)
 in
 let rec ha1_2305 (s_17326:(bool * bool)) (set_flag_17327:bool) (p_x_17328:int) (x_1018:int) =
   let s__u_17333 = ((fst s_17326, true), ()) in
   let s__u_17339 = ((true, snd (fst s__u_17333)), ()) in
   ha1_2305 (fst s__u_17339) set_flag_17327 0 x_1018
 in
 let rec ha2_2302 (s_17348:(bool * bool)) (set_flag_17349:bool) (p_x_17350:int) (x_1020:int) =
   let s__u_17355 = ((fst s_17348, true), ()) in
   let s__u_17361 = ((true, snd (fst s__u_17355)), ()) in
   ha2_2302 (fst s__u_17361) set_flag_17349 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_17372:(bool * bool)) (set_flag_17373:bool) (
                  p_x_17374:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_17379 = ((fst s_17372, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_17379, x_1022)
   else
     let s__r_f_17385 = f_1023 (fst s__u_17379) set_flag_17373 0 x_1022 in
     walk_1021 (snd s__r_f_17385) (fst s__r_f_17385) set_flag_17373 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_17402:(bool * bool)) (set_flag_17403:bool) (
                 p_x_17404:int) (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_17403
   then
     let x_17405 =
       let u_17410 =
         if snd s_17402 && not (fst s_17402)
         then
           let u_23129 = assert ((1 * p_x_17404) + 2 > (1 * x_1025) + 2) in
           if (1 * x_1025) + 2 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     in
     let sp_17419 = if x_17405 then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let p_x_17408 = #0 (snd sp_17419) in
     let s__u_17424 = ((fst (fst sp_17419), true), ()) in
     if x_1025 < 0
     then
       (fst s__u_17424, x_1025)
     else
       let s__r_f_17430 = f_1026 (fst s__u_17424) true p_x_17408 x_1025 in
       let s__r_f_17434 = f_1026 (fst s__r_f_17430) true p_x_17408 (snd s__r_f_17430) in
       run_1024 (snd s__r_f_17434) (fst s__r_f_17434) true p_x_17408 f_1026
   else
     let sp_17444 = if true then ((false, false), (x_1025)) else (s_17402, (p_x_17404)) in
     let p_x_17447 = #0 (snd sp_17444) in
     let s__u_17448 = ((fst (fst sp_17444), true), ()) in
     if x_1025 < 0
     then
       (fst s__u_17448, x_1025)
     else
       let s__r_f_17452 = f_1026 (fst s__u_17448) true p_x_17447 x_1025 in
       let s__r_f_17451 = f_1026 (fst s__r_f_17452) true p_x_17447 (snd s__r_f_17452) in
       run_1024 (snd s__r_f_17451) (fst s__r_f_17451) true p_x_17447 f_1026
 in
 let rec life_2300 (s_17464:(bool * bool)) (set_flag_17465:bool) (p_x_17466:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_17471 = ((fst s_17464, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_17483 = app_2308 walk_1021 x_1028 (fst s__u_17471) set_flag_17465 0 1 in
       ha1_2305 (fst s__r_app_17483) set_flag_17465 0 (snd s__r_app_17483)
     else
       let s__r_app_17497 = app_2308 run_1024 x_1028 (fst s__u_17471) set_flag_17465 0 1 in
       ha2_2302 (fst s__r_app_17497) set_flag_17465 0 (snd s__r_app_17497)
   else
     life_2300 s_17464 set_flag_17465 0 x_1028
 in
 let main_1029 (s_17508:(bool * bool)) (set_flag_17509:bool) (p_x_17510:int) (x_2295:unit) =
   life_2300 s_17508 set_flag_17509 0 (rand_int ())
 in
 let s__r_main_17515 = main_1029 (false, false) false 0 () in
 snd s__r_main_17515

###CPS:
 (let g_1010 s_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 =
    k_g_45799
      (s_17273, (fun s_17278 set_flag_17279 p_x_17280 x_1012 k_g_45819 -> k_g_45819 (s_17278, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_17294 set_flag_17295 p_x_17296 i_1016 k_app_45854 =
    let s__u_17301 k_app_s__u_45858 = k_app_s__u_45858 ((fst s_17294, true), ()) in
    s__u_17301
      (fun s__u_45959 ->
         let s__r_g_17307 k_app_s__r_g_45890 = (g_1010 (fst s__u_45959) set_flag_17295 0) i_1016 k_app_s__r_g_45890 in
         s__r_g_17307
           (fun s__r_g_45958 -> (f_1014 x_1015 (fst s__r_g_45958) set_flag_17295 0) (snd s__r_g_45958) k_app_45854))
  in
  let rec ha1_2305 s_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 =
    let s__u_17333 k_ha1_s__u_45988 = k_ha1_s__u_45988 ((fst s_17326, true), ()) in
    s__u_17333
      (fun s__u_46027 ->
         let s__u_17339 k_ha1_s__u_46002 = k_ha1_s__u_46002 ((true, snd (fst s__u_46027)), ()) in
         s__u_17339 (fun s__u_46026 -> (ha1_2305 (fst s__u_46026) set_flag_17327 0) x_1018 k_ha1_45984))
  in
  let rec ha2_2302 s_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 =
    let s__u_17355 k_ha2_s__u_46041 = k_ha2_s__u_46041 ((fst s_17348, true), ()) in
    s__u_17355
      (fun s__u_46080 ->
         let s__u_17361 k_ha2_s__u_46055 = k_ha2_s__u_46055 ((true, snd (fst s__u_46080)), ()) in
         s__u_17361 (fun s__u_46079 -> (ha2_2302 (fst s__u_46079) set_flag_17349 0) x_1020 k_ha2_46037))
  in
  let rec walk_1021 x_1022 s_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 =
    let s__u_17379 k_walk_s__u_46100 = k_walk_s__u_46100 ((fst s_17372, true), ()) in
    s__u_17379
      (fun s__u_46175 ->
         if x_1022 < 0
         then
           k_walk_46096 (fst s__u_46175, x_1022)
         else
           let s__r_f_17385 k_walk_s__r_f_46126 = (f_1023 (fst s__u_46175) set_flag_17373 0) x_1022 k_walk_s__r_f_46126 in
           s__r_f_17385
             (fun s__r_f_46170 ->
                (walk_1021 (snd s__r_f_46170) (fst s__r_f_46170) set_flag_17373 0) f_1023 k_walk_46096))
  in
  let rec run_1024 x_1025 s_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 =
    if set_flag_17403
    then
      let x_17405 k_run_x_46202 =
        let u_17410 k_run_x_u_46238 =
          if snd s_17402
          then
            if not (fst s_17402)
            then
              let u_47694 k_run_x_u_u_47695 =
                if (1 * p_x_17404) + 2 > (1 * x_1025) + 2
                then
                  k_run_x_u_u_47695 ()
                else
                  <|fail|> () k_run_x_u_u_47695
              in
              u_47694 (fun u_47701 -> if (1 * x_1025) + 2 >= 0 then k_run_x_u_46238 () else _|_)
            else
              k_run_x_u_46238 ()
          else
            k_run_x_u_46238 ()
        in
        u_17410 (fun u_46255 -> rand_int_cps () (fun x_46243 -> k_run_x_46202 (x_46243 = 0)))
      in
      x_17405
        (fun x_46387 ->
           let sp_17419 k_run_sp_46285 =
             if x_46387
             then
               k_run_sp_46285 ((false, false), (x_1025))
             else
               k_run_sp_46285 (s_17402, (p_x_17404))
           in
           sp_17419
             (fun sp_46386 ->
                let s__u_17424 k_run_s__u_46293 = k_run_s__u_46293 ((fst (fst sp_46386), true), ()) in
                s__u_17424
                  (fun s__u_46384 ->
                     if x_1025 < 0
                     then
                       k_run_46198 (fst s__u_46384, x_1025)
                     else
                       let s__r_f_17430 k_run_s__r_f_46319 =
                         (f_1026 (fst s__u_46384) true (#0 (snd sp_46386))) x_1025 k_run_s__r_f_46319
                       in
                       s__r_f_17430
                         (fun s__r_f_46379 ->
                            let s__r_f_17434 k_run_s__r_f_46334 =
                              (f_1026 (fst s__r_f_46379) true (#0 (snd sp_46386)))
                                (snd s__r_f_46379) k_run_s__r_f_46334
                            in
                            s__r_f_17434
                              (fun s__r_f_46378 ->
                                 (run_1024 (snd s__r_f_46378) (fst s__r_f_46378) true (#0 (snd sp_46386)))
                                   f_1026 k_run_46198)))))
    else
      let sp_17444 k_run_sp_46417 = k_run_sp_46417 ((false, false), (x_1025)) in
      sp_17444
        (fun sp_46518 ->
           let s__u_17448 k_run_s__u_46425 = k_run_s__u_46425 ((fst (fst sp_46518), true), ()) in
           s__u_17448
             (fun s__u_46516 ->
                if x_1025 < 0
                then
                  k_run_46198 (fst s__u_46516, x_1025)
                else
                  let s__r_f_17452 k_run_s__r_f_46451 =
                    (f_1026 (fst s__u_46516) true (#0 (snd sp_46518))) x_1025 k_run_s__r_f_46451
                  in
                  s__r_f_17452
                    (fun s__r_f_46511 ->
                       let s__r_f_17451 k_run_s__r_f_46466 =
                         (f_1026 (fst s__r_f_46511) true (#0 (snd sp_46518)))
                           (snd s__r_f_46511) k_run_s__r_f_46466
                       in
                       s__r_f_17451
                         (fun s__r_f_46510 ->
                            (run_1024 (snd s__r_f_46510) (fst s__r_f_46510) true (#0 (snd sp_46518)))
                              f_1026 k_run_46198))))
  in
  let rec life_2300 s_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 =
    rand_int_cps
      () 
      (fun x_46542 ->
         if x_46542 > 0
         then
           let s__u_17471 k_life_s__u_46557 = k_life_s__u_46557 ((fst s_17464, true), ()) in
           s__u_17471
             (fun s__u_46686 ->
                if x_1028 < 0
                then
                  let s__r_app_17483 k_life_s__r_app_46605 =
                    (app_2308 walk_1021 x_1028 (fst s__u_46686) set_flag_17465 0) 1 k_life_s__r_app_46605
                  in
                  s__r_app_17483
                    (fun s__r_app_46624 ->
                       (ha1_2305 (fst s__r_app_46624) set_flag_17465 0) (snd s__r_app_46624) k_life_46539)
                else
                  let s__r_app_17497 k_life_s__r_app_46662 =
                    (app_2308 run_1024 x_1028 (fst s__u_46686) set_flag_17465 0) 1 k_life_s__r_app_46662
                  in
                  s__r_app_17497
                    (fun s__r_app_46681 ->
                       (ha2_2302 (fst s__r_app_46681) set_flag_17465 0) (snd s__r_app_46681) k_life_46539))
         else
           (life_2300 s_17464 set_flag_17465 0) x_1028 k_life_46539)
  in
  let main_1029 s_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 =
    rand_int_cps () (fun x_46736 -> (life_2300 s_17508 set_flag_17509 0) x_46736 k_main_46713)
  in
  let s__r_main_17515 k_s__r_main_46797 = (((main_1029 (false, false)) false) 0) () k_s__r_main_46797 in
  s__r_main_17515 (fun s__r_main_46803 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 =
    k_g_45799
      s0_17273 s1_17273 
      (fun s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 k_g_45819 ->
         k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 =
    ha1_2305 true true set_flag_17327 0 x_1018 k_ha1_45984
  in
  let rec ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 =
    ha2_2302 true true set_flag_17349 0 x_1020 k_ha2_46037
  in
  let rec walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 =
    if x_1022 < 0
    then
      k_walk_46096 s0_17372 true x_1022
    else
      f_1023
        s0_17372 true set_flag_17373 0 x_1022 
        (fun s__r_f00_46170 s__r_f01_46170 s__r_f1_46170 ->
           walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096)
  in
  let rec run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 =
    if set_flag_17403
    then
      let x_17405 k_run_x_46202 =
        let u_17410 k_run_x_u_46238 =
          if s1_17402
          then
            if not s0_17402
            then
              let u_47694 k_run_x_u_u_47695 =
                if (1 * p_x_17404) + 2 > (1 * x_1025) + 2
                then
                  k_run_x_u_u_47695 ()
                else
                  <|fail|> () k_run_x_u_u_47695
              in
              u_47694 (fun u_47701 -> if (1 * x_1025) + 2 >= 0 then k_run_x_u_46238 () else _|_)
            else
              k_run_x_u_46238 ()
          else
            k_run_x_u_46238 ()
        in
        u_17410 (fun u_46255 -> rand_int_cps () (fun x_46243 -> k_run_x_46202 (x_46243 = 0)))
      in
      x_17405
        (fun x_46387 ->
           let sp_17419 k_run_sp_46285 =
             if x_46387
             then
               k_run_sp_46285 false false x_1025
             else
               k_run_sp_46285 s0_17402 s1_17402 p_x_17404
           in
           sp_17419
             (fun sp00_46386 sp01_46386 sp10_46386 ->
                if x_1025 < 0
                then
                  k_run_46198 sp00_46386 true x_1025
                else
                  f_1026
                    sp00_46386 true true sp10_46386 x_1025 
                    (fun s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
                       f_1026
                         s__r_f00_46379 s__r_f01_46379 true sp10_46386 
                         s__r_f1_46379 
                         (fun s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
                            run_1024
                              s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198))))
    else
      if x_1025 < 0
      then
        k_run_46198 false true x_1025
      else
        f_1026
          false true true x_1025 x_1025 
          (fun s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 ->
             f_1026
               s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511 
               (fun s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
                  run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198))
  in
  let rec life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 =
    rand_int_cps
      () 
      (fun x_46542 ->
         if x_46542 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_45958 s__r_g01_45958 s__r_g1_45958 ->
                  walk_1021
                    x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 
                    0 s__r_g1_45958 
                    (fun s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
                       ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539))
           else
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_45958 s__r_g01_45958 s__r_g1_45958 ->
                  run_1024
                    x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 
                    0 s__r_g1_45958 
                    (fun s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
                       ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539))
         else
           life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539)
  in
  let main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 =
    rand_int_cps () (fun x_46736 -> life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713)
  in
  main_1029 false false false 0 () (fun s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> {end}) # 
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 =
    k_g_45799
      s0_17273 s1_17273 
      (fun s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 k_g_45819 ->
         k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 = _|_ in
  let rec ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 = _|_ in
  let rec walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 =
    if x_1022 < 0
    then
      k_walk_46096 s0_17372 true x_1022
    else
      f_1023
        s0_17372 true set_flag_17373 0 x_1022 
        (fun s__r_f00_46170 s__r_f01_46170 s__r_f1_46170 ->
           walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096)
  in
  let rec run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 =
    if set_flag_17403
    then
      let x_17405 k_run_x_46202 =
        let u_17410 k_run_x_u_46238 =
          if s1_17402
          then
            if not s0_17402
            then
              let u_47694 k_run_x_u_u_47695 =
                if (1 * p_x_17404) + 2 > (1 * x_1025) + 2
                then
                  k_run_x_u_u_47695 ()
                else
                  <|fail|> () k_run_x_u_u_47695
              in
              u_47694 (fun u_47701 -> if (1 * x_1025) + 2 >= 0 then k_run_x_u_46238 () else _|_)
            else
              k_run_x_u_46238 ()
          else
            k_run_x_u_46238 ()
        in
        u_17410 (fun u_46255 -> rand_int_cps () (fun x_46243 -> k_run_x_46202 (x_46243 = 0)))
      in
      x_17405
        (fun x_46387 ->
           let sp_17419 k_run_sp_46285 =
             if x_46387
             then
               k_run_sp_46285 false false x_1025
             else
               k_run_sp_46285 s0_17402 s1_17402 p_x_17404
           in
           sp_17419
             (fun sp00_46386 sp01_46386 sp10_46386 ->
                if x_1025 < 0
                then
                  k_run_46198 sp00_46386 true x_1025
                else
                  f_1026
                    sp00_46386 true true sp10_46386 x_1025 
                    (fun s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
                       f_1026
                         s__r_f00_46379 s__r_f01_46379 true sp10_46386 
                         s__r_f1_46379 
                         (fun s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
                            run_1024
                              s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198))))
    else
      if x_1025 < 0
      then
        k_run_46198 false true x_1025
      else
        f_1026
          false true true x_1025 x_1025 
          (fun s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 ->
             f_1026
               s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511 
               (fun s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
                  run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198))
  in
  let rec life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 =
    rand_int_cps
      () 
      (fun x_46542 ->
         if x_46542 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_45958 s__r_g01_45958 s__r_g1_45958 ->
                  walk_1021
                    x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 
                    0 s__r_g1_45958 
                    (fun s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
                       ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539))
           else
             g_1010
               s0_17464 true set_flag_17465 0 1 
               (fun s__r_g00_45958 s__r_g01_45958 s__r_g1_45958 ->
                  run_1024
                    x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 
                    0 s__r_g1_45958 
                    (fun s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
                       ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539))
         else
           life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539)
  in
  let main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 =
    rand_int_cps () (fun x_46736 -> life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713)
  in
  main_1029 false false false 0 () (fun s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> {end}) # 
  [ACPS])

Program with abstraction types (CEGAR-cycle 14)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_47694 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(14-1) Abstracting ... DONE!

(14-2) Checking HORS ... DONE!

Error trace::
  main_48398 ... --> 
  main_1029 ... --> 
  f_main_48415 ... --> 
  life_2300 ... --> 
  f_life_48410 [1/2] ... --> 
  br_f_life_48421 [2/2] ... --> 
  g_1010 ... --> 
  f_life_48413 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [2/2] ... --> 
  fail_48423 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1; 0

(14-3) Checking counterexample ... DONE!

(14-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 15)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              x_5:bool ->
              int[(not x_5)] ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  u_47694 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(15-1) Abstracting ... DONE!

(15-2) Checking HORS ... DONE!

Error trace::
  main_48398 ... --> 
  main_1029 ... --> 
  f_main_48415 ... --> 
  life_2300 ... --> 
  f_life_48410 [1/2] ... --> 
  br_f_life_48421 [2/2] ... --> 
  g_1010 ... --> 
  f_life_48413 ... --> 
  run_1024 [2/2] ... --> 
  br_run_48417 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48408 ... --> 
  f_g_48399 ... --> 
  f_run_48409 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [2/2] ... --> 
  fail_48423 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(15-3) Checking counterexample ... DONE!

(15-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 16)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool ->
                   bool ->
                   bool ->
                   x_12:int ->
                   x_13:int[1 <= x_12 - x_13; x_13 <= x_12] ->
                   (bool -> bool -> x_17:int[2 <= x_12 - x_17; 1 <= x_12 - x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (bool -> x_3:int -> bool -> bool -> bool -> x_7:int[2 <= x_3 - x_7] -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (bool ->
              bool ->
              bool ->
              x_14:int ->
              x_15:int[2 <= x_6 + x_14 - x_15; 1 <= x_6 + x_14 - x_15] ->
              (bool -> bool -> x_19:int[2 <= x_14 - x_19; 1 <= x_14 - x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              bool ->
              x_5:bool ->
              x_6:int[2 <= -x_2 + x_6; (not x_5)] ->
              (bool ->
               bool ->
               bool ->
               x_11:int ->
               x_12:int[1 <= x_11 - x_12; x_12 <= x_11] ->
               (bool -> bool -> x_16:int[2 <= x_11 - x_16; 1 <= x_11 - x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6] -> (unit -> X) -> X)
  u_47694 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(16-1) Abstracting ... DONE!

(16-2) Checking HORS ... DONE!

Error trace::
  main_48398 ... --> 
  main_1029 ... --> 
  f_main_48415 ... --> 
  life_2300 ... --> 
  f_life_48410 [1/2] ... --> 
  br_f_life_48421 [2/2] ... --> 
  g_1010 ... --> 
  f_life_48413 ... --> 
  run_1024 [2/2] ... --> 
  br_run_48417 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48408 ... --> 
  f_g_48399 ... --> 
  f_run_48409 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [2/2] ... --> 
  f_x_48402 ... --> 
  f_x_48403 ... --> 
  f_run_48404 ... --> 
  sp_17419 [1/2] ... --> 
  f_run_48405 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48406 ... --> 
  f_g_48399 ... --> 
  f_run_48407 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [2/2] ... --> 
  fail_48423 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(16-3) Checking counterexample ... DONE!

(16-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 17)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (bool ->
                   x_10:bool ->
                   bool ->
                   x_12:int ->
                   x_13:int[x_10; 1 <= x_12 - x_13; x_13 <= x_12] ->
                   (bool -> x_16:bool -> x_17:int[x_16; 2 <= x_12 - x_17; 1 <= x_12 - x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (bool -> x_3:int -> bool -> bool -> bool -> x_7:int[2 <= x_3 - x_7] -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (bool ->
              x_12:bool ->
              bool ->
              x_14:int ->
              x_15:int[x_12; 2 <= x_6 + x_14 - x_15; 1 <= x_6 + x_14 - x_15] ->
              (bool -> x_18:bool -> x_19:int[x_18; 2 <= x_14 - x_19; 1 <= x_14 - x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              x_4:bool ->
              x_5:bool ->
              x_6:int[x_4; 2 <= -x_2 + x_6; (not x_5)] ->
              (bool ->
               x_9:bool ->
               bool ->
               x_11:int ->
               x_12:int[x_9; 1 <= x_11 - x_12; x_12 <= x_11] ->
               (bool -> x_15:bool -> x_16:int[x_15; 2 <= x_11 - x_16; 1 <= x_11 - x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (x_2:int -> bool -> x_4:bool -> bool -> x_6:int[x_4; 2 <= x_2 - x_6] -> (unit -> X) -> X)
  u_47694 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(17-1) Abstracting ... DONE!

(17-2) Checking HORS ... DONE!

Error trace::
  main_48398 ... --> 
  main_1029 ... --> 
  f_main_48415 ... --> 
  life_2300 ... --> 
  f_life_48410 [1/2] ... --> 
  br_f_life_48421 [2/2] ... --> 
  g_1010 ... --> 
  f_life_48413 ... --> 
  run_1024 [2/2] ... --> 
  br_run_48417 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48408 ... --> 
  f_g_48399 ... --> 
  f_run_48409 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [2/2] ... --> 
  f_x_48402 ... --> 
  f_x_48403 ... --> 
  f_run_48404 ... --> 
  sp_17419 [1/2] ... --> 
  f_run_48405 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48406 ... --> 
  f_g_48399 ... --> 
  f_run_48407 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [2/2] ... --> 
  fail_48423 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(17-3) Checking counterexample ... DONE!

(17-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 18)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (x_9:bool ->
                   x_10:bool ->
                   bool ->
                   x_12:int ->
                   x_13:int[(not x_9); x_10; 1 <= x_12 - x_13; x_13 <= x_12] ->
                   (x_15:bool -> x_16:bool -> x_17:int[(not x_15); x_16; 2 <= x_12 - x_17; 1 <= x_12 - x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (x_2:bool -> x_3:int -> bool -> bool -> bool -> x_7:int[x_2; 2 <= x_3 - x_7] -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (x_11:bool ->
              x_12:bool ->
              bool ->
              x_14:int ->
              x_15:int[(not x_11); x_12; 2 <= x_6 + x_14 - x_15; 1 <= x_6 + x_14 - x_15] ->
              (x_17:bool -> x_18:bool -> x_19:int[(not x_17); x_18; 2 <= x_14 - x_19; 1 <= x_14 - x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              x_3:bool ->
              x_4:bool ->
              x_5:bool ->
              x_6:int[(not x_3); x_4; 2 <= -x_2 + x_6; (not x_5)] ->
              (x_8:bool ->
               x_9:bool ->
               bool ->
               x_11:int ->
               x_12:int[(not x_8); x_9; 1 <= x_11 - x_12; x_12 <= x_11] ->
               (x_14:bool -> x_15:bool -> x_16:int[(not x_14); x_15; 2 <= x_11 - x_16; 1 <= x_11 - x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_17410 : (x_2:int -> x_3:bool -> x_4:bool -> bool -> x_6:int[(not x_3); x_4; 2 <= x_2 - x_6] -> (unit -> X) -> X)
  u_47694 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(18-1) Abstracting ... DONE!

(18-2) Checking HORS ... DONE!

Error trace::
  main_48398 ... --> 
  main_1029 ... --> 
  f_main_48415 ... --> 
  life_2300 ... --> 
  f_life_48410 [1/2] ... --> 
  br_f_life_48421 [2/2] ... --> 
  g_1010 ... --> 
  f_life_48413 ... --> 
  run_1024 [2/2] ... --> 
  br_run_48417 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48408 ... --> 
  f_g_48399 ... --> 
  f_run_48409 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [1/2] ... --> 
  f_u_48401 [1/2] ... --> 
  f_x_48402 ... --> 
  f_x_48403 ... --> 
  f_run_48404 ... --> 
  sp_17419 [1/2] ... --> 
  f_run_48405 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48406 ... --> 
  f_g_48399 ... --> 
  f_run_48407 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [2/2] ... --> 
  fail_48423 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(18-3) Checking counterexample ... DONE!

(18-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 19)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (x_9:bool ->
                   x_10:bool ->
                   bool ->
                   x_12:int ->
                   x_13:int[(not x_9); x_10; 1 <= x_12 - x_13; x_13 <= x_12] ->
                   (x_15:bool -> x_16:bool -> x_17:int[(not x_15); x_16; 2 <= x_12 - x_17; 1 <= x_12 - x_17] -> X) -> X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (x_2:bool -> x_3:int -> bool -> bool -> bool -> x_7:int[x_2; 2 <= x_3 - x_7] -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 x_6:int ->
                 bool ->
                 (bool ->
                  bool ->
                  bool ->
                  x_12:int ->
                  x_13:int[1 <= x_12 - x_13; x_13 <= x_12] ->
                  (bool -> bool -> x_17:int[2 <= x_12 - x_17; 1 <= x_12 - x_17] -> X) -> X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> x_27:int[x_27 >= x_6] -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (x_11:bool ->
              x_12:bool ->
              bool ->
              x_14:int ->
              x_15:int[(not x_11); x_12; 2 <= x_6 + x_14 - x_15; 1 <= x_6 + x_14 - x_15] ->
              (x_17:bool -> x_18:bool -> x_19:int[(not x_17); x_18; 2 <= x_14 - x_19; 1 <= x_14 - x_19] -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              x_3:bool ->
              x_4:bool ->
              x_5:bool ->
              x_6:int[(not x_3); x_4; 2 <= -x_2 + x_6; (not x_5)] ->
              (x_8:bool ->
               x_9:bool ->
               bool ->
               x_11:int ->
               x_12:int[(not x_8); x_9; 1 <= x_11 - x_12; x_12 <= x_11] ->
               (x_14:bool -> x_15:bool -> x_16:int[(not x_14); x_15; 2 <= x_11 - x_16; 1 <= x_11 - x_16] -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (int -> bool -> bool -> bool -> x_6:int -> bool -> (bool -> bool -> x_11:int[x_11 >= x_6] -> X) -> X)
  u_17410 : (x_2:int -> x_3:bool -> x_4:bool -> bool -> x_6:int[(not x_3); x_4; 2 <= x_2 - x_6] -> (unit -> X) -> X)
  u_47694 : (x_2:int -> bool -> bool -> bool -> x_6:int[2 <= x_2 - x_6] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(19-1) Abstracting ... DONE!

(19-2) Checking HORS ... DONE!

Error trace::
  main_48398 ... --> 
  main_1029 ... --> 
  f_main_48415 ... --> 
  life_2300 ... --> 
  f_life_48410 [1/2] ... --> 
  br_f_life_48421 [2/2] ... --> 
  g_1010 ... --> 
  f_life_48413 ... --> 
  run_1024 [2/2] ... --> 
  br_run_48417 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48408 ... --> 
  f_g_48399 ... --> 
  f_run_48409 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [1/2] ... --> 
  f_u_48401 [1/2] ... --> 
  f_x_48402 ... --> 
  f_x_48403 ... --> 
  f_run_48404 ... --> 
  sp_17419 [2/2] ... --> 
  f_run_48405 [2/2] ... --> 
  f_g_48399 ... --> 
  f_run_48406 ... --> 
  f_g_48399 ... --> 
  f_run_48407 ... --> 
  run_1024 [1/2] ... --> 
  x_17405 ... --> 
  u_17410 [1/2] ... --> 
  br_u_48419 [1/2] ... --> 
  u_47694 [2/2] ... --> 
  fail_48423 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(19-3) Checking counterexample ... DONE!

(19-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 20)::
Main: main_48398
  main_48398 -> (main_1029 false false false 0 () f_48416).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when b_48422 ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_f_life_48421 b_48422 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not b_48422) ->
      (g_1010 s0_17464 true set_flag_17465 0 1
       (f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539)).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when b_48418 ->
      (k_run_46198 false true x_1025).
  br_run_48417 b_48418 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not b_48418) ->
      (f_1026 false true true x_1025 x_1025
       (f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when b_48420 ->
      (u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238)).
  br_u_48419 b_48420 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not b_48420) -> (k_run_x_u_46238 ()).
  f_48416 s__r_main00_46803 s__r_main01_46803 s__r_main1_46803 -> end.
  f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274 s0_17278 s1_17278 set_flag_17279 p_x_17280 x_1012 
  k_g_45819 -> (k_g_45819 s0_17278 s1_17278 (x_1012 - i_1011)).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (x_46542 > 0) ->
      (br_f_life_48421 (x_1028 < 0) p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542).
  f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539 x_46542 when 
      (not (x_46542 > 0)) -> (life_2300 s0_17464 s1_17464 set_flag_17465 0 x_1028 k_life_46539).
  f_life_48411 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (walk_1021 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48412 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46624 s__r_app01_46624 s__r_app1_46624 ->
      (ha1_2305 s__r_app00_46624 s__r_app01_46624 set_flag_17465 0 s__r_app1_46624 k_life_46539).
  f_life_48413 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 x_46542 k_life_46539 s__r_g00_45958 s__r_g01_45958 
  s__r_g1_45958 ->
      (run_1024 x_1028 s__r_g00_45958 s__r_g01_45958 set_flag_17465 0 s__r_g1_45958
       (f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542
        k_life_46539)).
  f_life_48414 p_x_17466 s0_17464 s1_17464 s__r_g00_45958 s__r_g01_45958 set_flag_17465 x_1028 x_46542 k_life_46539 
  s__r_app00_46681 s__r_app01_46681 s__r_app1_46681 ->
      (ha2_2302 s__r_app00_46681 s__r_app01_46681 set_flag_17465 0 s__r_app1_46681 k_life_46539).
  f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713 x_46736 ->
      (life_2300 s0_17508 s1_17508 set_flag_17509 0 x_46736 k_main_46713).
  f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 x_46387 ->
      (sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387
       (f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (x_1025 < 0) -> (k_run_46198 sp00_46386 true x_1025).
  f_run_48405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 f_1026 k_run_46198 sp00_46386 sp01_46386 
  sp10_46386 when (not (x_1025 < 0)) ->
      (f_1026 sp00_46386 true true sp10_46386 x_1025
       (f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026
        k_run_46198)).
  f_run_48406 p_x_17404 s0_17402 s1_17402 set_flag_17403 sp00_46386 sp01_46386 sp10_46386 x_1025 x_46387 f_1026 
  k_run_46198 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 ->
      (f_1026 s__r_f00_46379 s__r_f01_46379 true sp10_46386 s__r_f1_46379
       (f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386
        sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198)).
  f_run_48407 p_x_17404 s0_17402 s1_17402 s__r_f00_46379 s__r_f01_46379 s__r_f1_46379 set_flag_17403 sp00_46386 
  sp01_46386 sp10_46386 x_1025 x_46387 f_1026 k_run_46198 s__r_f00_46378 s__r_f01_46378 s__r_f1_46378 ->
      (run_1024 s__r_f1_46378 s__r_f00_46378 s__r_f01_46378 true sp10_46386 f_1026 k_run_46198).
  f_run_48408 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198 s__r_f00_46511 s__r_f01_46511 
  s__r_f1_46511 ->
      (f_1026 s__r_f00_46511 s__r_f01_46511 true x_1025 s__r_f1_46511
       (f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025
        f_1026 k_run_46198)).
  f_run_48409 p_x_17404 s0_17402 s1_17402 s__r_f00_46511 s__r_f01_46511 s__r_f1_46511 set_flag_17403 x_1025 f_1026 
  k_run_46198 s__r_f00_46510 s__r_f01_46510 s__r_f1_46510 ->
      (run_1024 s__r_f1_46510 s__r_f00_46510 s__r_f01_46510 true x_1025 f_1026 k_run_46198).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (((1 * x_1025) + 2) >= 0) -> (k_run_x_u_46238 ()).
  f_u_48401 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 u_47701 when 
      (not (((1 * x_1025) + 2) >= 0)) -> _|_.
  f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096 s__r_f00_46170 s__r_f01_46170 
  s__r_f1_46170 -> (walk_1021 s__r_f1_46170 s__r_f00_46170 s__r_f01_46170 set_flag_17373 0 f_1023 k_walk_46096).
  f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 u_46255 ->
      (rand_int (f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202)).
  f_x_48403 p_x_17404 s0_17402 s1_17402 set_flag_17403 u_46255 x_1025 k_run_x_46202 x_46243 ->
      (k_run_x_46202 (x_46243 = 0)).
  fail_48423 b k -> {fail} => (k ()).
  g_1010 s0_17273 s1_17273 set_flag_17274 p_x_17275 i_1011 k_g_45799 ->
      (k_g_45799 s0_17273 s1_17273 (f_g_48399 i_1011 p_x_17275 s0_17273 s1_17273 set_flag_17274)).
  ha1_2305 s0_17326 s1_17326 set_flag_17327 p_x_17328 x_1018 k_ha1_45984 -> _|_.
  ha2_2302 s0_17348 s1_17348 set_flag_17349 p_x_17350 x_1020 k_ha2_46037 -> _|_.
  life_2300 s0_17464 s1_17464 set_flag_17465 p_x_17466 x_1028 k_life_46539 ->
      (rand_int (f_life_48410 p_x_17466 s0_17464 s1_17464 set_flag_17465 x_1028 k_life_46539)).
  main_1029 s0_17508 s1_17508 set_flag_17509 p_x_17510 x_2295 k_main_46713 ->
      (rand_int (f_main_48415 p_x_17510 s0_17508 s1_17508 set_flag_17509 x_2295 k_main_46713)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when set_flag_17403 ->
      (x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_run_48404 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 f_1026 k_run_46198)).
  run_1024 x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198 when 
      (not set_flag_17403) ->
      (br_run_48417 (x_1025 < 0) x_1025 s0_17402 s1_17402 set_flag_17403 p_x_17404 f_1026 k_run_46198).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when x_46387 ->
      (k_run_sp_46285 false false x_1025).
  sp_17419 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 x_46387 k_run_sp_46285 when 
      (not x_46387) -> (k_run_sp_46285 s0_17402 s1_17402 p_x_17404).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when s1_17402 ->
      (br_u_48419 (not s0_17402) p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238).
  u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_46238 when 
      (not s1_17402) -> (k_run_x_u_46238 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2)) -> (k_run_x_u_u_47695 ()).
  u_47694 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_u_u_47695 when 
      (not (((1 * p_x_17404) + 2) > ((1 * x_1025) + 2))) -> (fail_48423 true k_run_x_u_u_47695).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (x_1022 < 0) -> (k_walk_46096 s0_17372 true x_1022).
  walk_1021 x_1022 s0_17372 s1_17372 set_flag_17373 p_x_17374 f_1023 k_walk_46096 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_17372 true set_flag_17373 0 x_1022
       (f_walk_48400 p_x_17374 s0_17372 s1_17372 set_flag_17373 x_1022 f_1023 k_walk_46096)).
  x_17405 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202 ->
      (u_17410 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025
       (f_x_48402 p_x_17404 s0_17402 s1_17402 set_flag_17403 x_1025 k_run_x_46202)).
Types:
  main_48398 : X
  br_f_life_48421 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_run_48417 : (bool ->
                  int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  (x_9:bool ->
                   x_10:bool ->
                   bool ->
                   x_12:int ->
                   x_13:int[3 <= x_12 - x_13; 2 <= x_12 - x_13; (not x_9); x_10; 1 <= x_12 - x_13; x_13 <= x_12] ->
                   (x_15:bool ->
                    x_16:bool ->
                    x_17:int[4 <= x_12 - x_17; 3 <= x_12 - x_17; (not x_15); x_16; 2 <= x_12 - x_17; 1 <= x_12 - x_17] ->
                    X) ->
                   X) ->
                  (bool -> bool -> int -> X) -> X)
  br_u_48419 : (x_2:bool ->
                x_3:int -> bool -> bool -> bool -> x_7:int[4 <= x_3 - x_7; x_2; 2 <= x_3 - x_7] -> (unit -> X) -> X)
  f_life_48410 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_run_48405 : (int ->
                 bool ->
                 bool ->
                 bool ->
                 x_6:int ->
                 bool ->
                 (bool ->
                  bool ->
                  bool ->
                  x_12:int ->
                  x_13:int[3 <= x_12 - x_13; 2 <= x_12 - x_13; 1 <= x_12 - x_13; x_13 <= x_12] ->
                  (bool ->
                   bool -> x_17:int[4 <= x_12 - x_17; 3 <= x_12 - x_17; 2 <= x_12 - x_17; 1 <= x_12 - x_17] -> X) ->
                  X) ->
                 (bool -> bool -> int -> X) -> bool -> bool -> x_27:int[2 <= -x_6 + x_27; x_27 >= x_6] -> X)
  f_u_48401 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_48423 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            x_6:int ->
            (bool ->
             bool ->
             (x_11:bool ->
              x_12:bool ->
              bool ->
              x_14:int ->
              x_15:int[4 <= x_6 + x_14 - x_15; 3 <= x_6 + x_14 - x_15; 
                       (not x_11); x_12; 2 <= x_6 + x_14 - x_15; 1 <= x_6 + x_14 - x_15] ->
              (x_17:bool ->
               x_18:bool ->
               x_19:int[4 <= x_14 - x_19; 3 <= x_14 - x_19; (not x_17); x_18; 2 <= x_14 - x_19; 1 <= x_14 - x_19] -> X) ->
              X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              x_3:bool ->
              x_4:bool ->
              x_5:bool ->
              x_6:int[4 <= -x_2 + x_6; (not x_3); x_4; 2 <= -x_2 + x_6; (not x_5)] ->
              (x_8:bool ->
               x_9:bool ->
               bool ->
               x_11:int ->
               x_12:int[3 <= x_11 - x_12; 2 <= x_11 - x_12; (not x_8); x_9; 1 <= x_11 - x_12; x_12 <= x_11] ->
               (x_14:bool ->
                x_15:bool ->
                x_16:int[4 <= x_11 - x_16; 3 <= x_11 - x_16; (not x_14); x_15; 2 <= x_11 - x_16; 1 <= x_11 - x_16] -> X) ->
               X) ->
              (bool -> bool -> int -> X) -> X)
  sp_17419 : (x_2:int ->
              bool ->
              bool ->
              bool ->
              x_6:int -> bool[2 <= x_2 - x_6] -> (bool -> bool -> x_11:int[2 <= -x_6 + x_11; x_11 >= x_6] -> X) -> X)
  u_17410 : (x_2:int ->
             x_3:bool ->
             x_4:bool ->
             bool -> x_6:int[4 <= x_2 - x_6; (not x_3); x_4; 2 <= x_2 - x_6] -> (unit[2 <= x_2 - x_6] -> X) -> X)
  u_47694 : (x_2:int -> bool -> bool -> bool -> x_6:int[4 <= x_2 - x_6; 2 <= x_2 - x_6] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(20-1) Abstracting ... DONE!

(20-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_70708:(bool * bool)) (set_flag_70709:bool) (p_x_70710:int) (i_1011:int) =
   (s_70708, 
    (fun (s_70713:(bool * bool)) (set_flag_70714:bool) (p_x_70715:int) (x_1012:int) -> (s_70713, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_70729:(bool * bool)) (set_flag_70730:bool) (
             p_x_70731:int) (i_1016:int) =
   let s__u_70736 = ((fst s_70729, true), ()) in
   let s_70737 = fst s__u_70736 in
   let u_2310 = snd s__u_70736 in
   let s__r_g_70742 = g_1010 s_70737 set_flag_70730 0 i_1016 in
   let s_70743 = fst s__r_g_70742 in
   let r_g_2442 = snd s__r_g_70742 in
   f_1014 x_1015 s_70743 set_flag_70730 0 r_g_2442
 in
 let rec ha1_2305 (s_70761:(bool * bool)) (set_flag_70762:bool) (p_x_70763:int) (x_1018:int) =
   let s__u_70768 = ((fst s_70761, true), ()) in
   let s_70769 = fst s__u_70768 in
   let u_2306 = snd s__u_70768 in
   let s__u_70774 = ((true, snd s_70769), ()) in
   let s_70775 = fst s__u_70774 in
   let u_2307 = snd s__u_70774 in
   ha1_2305 s_70775 set_flag_70762 0 x_1018
 in
 let rec ha2_2302 (s_70783:(bool * bool)) (set_flag_70784:bool) (p_x_70785:int) (x_1020:int) =
   let s__u_70790 = ((fst s_70783, true), ()) in
   let s_70791 = fst s__u_70790 in
   let u_2303 = snd s__u_70790 in
   let s__u_70796 = ((true, snd s_70791), ()) in
   let s_70797 = fst s__u_70796 in
   let u_2304 = snd s__u_70796 in
   ha2_2302 s_70797 set_flag_70784 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_70807:(bool * bool)) (set_flag_70808:bool) (
                  p_x_70809:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_70808
   then
     let x_70810 = let u_70815 = if snd s_70807 && not (fst s_70807) then assert false in
                   rand_int () = 0 in
     let sp_70824 = if x_70810 then ((false, false), (x_1022)) else (s_70807, (p_x_70809)) in
     let s_70811 = fst sp_70824 in
     let p_x_70813 = #0 (snd sp_70824) in
     let s__u_70829 = ((fst s_70811, true), ()) in
     let s_70830 = fst s__u_70829 in
     let u_2180 = snd s__u_70829 in
     if x_1022 < 0
     then
       (s_70830, x_1022)
     else
       let s__r_f_70835 = f_1023 s_70830 true p_x_70813 x_1022 in
       let s_70836 = fst s__r_f_70835 in
       let r_f_2443 = snd s__r_f_70835 in
       walk_1021 r_f_2443 s_70836 true p_x_70813 f_1023
   else
     let sp_70845 = if true then ((false, false), (x_1022)) else (s_70807, (p_x_70809)) in
     let s_70846 = fst sp_70845 in
     let p_x_70848 = #0 (snd sp_70845) in
     let s__u_70849 = ((fst s_70846, true), ()) in
     let s_70850 = fst s__u_70849 in
     let u_70851 = snd s__u_70849 in
     if x_1022 < 0
     then
       (s_70850, x_1022)
     else
       let s__r_f_70852 = f_1023 s_70850 true p_x_70848 x_1022 in
       let s_70853 = fst s__r_f_70852 in
       let r_f_70854 = snd s__r_f_70852 in
       walk_1021 r_f_70854 s_70853 true p_x_70848 f_1023
 in
 let rec run_1024 (x_1025:int) (s_70864:(bool * bool)) (set_flag_70865:bool) (
                 p_x_70866:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_70871 = ((fst s_70864, true), ()) in
   let s_70872 = fst s__u_70871 in
   let u_2234 = snd s__u_70871 in
   if x_1025 < 0
   then
     (s_70872, x_1025)
   else
     let s__r_f_70877 = f_1026 s_70872 set_flag_70865 0 x_1025 in
     let s_70878 = fst s__r_f_70877 in
     let r_f_2444 = snd s__r_f_70877 in
     let s__r_f_70881 = f_1026 s_70878 set_flag_70865 0 r_f_2444 in
     let s_70882 = fst s__r_f_70881 in
     let r_f_2445 = snd s__r_f_70881 in
     run_1024 r_f_2445 s_70882 set_flag_70865 0 f_1026
 in
 let rec life_2300 (s_70896:(bool * bool)) (set_flag_70897:bool) (p_x_70898:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_70903 = ((fst s_70896, true), ()) in
     let s_70904 = fst s__u_70903 in
     let u_2301 = snd s__u_70903 in
     if x_1028 < 0
     then
       let s__r_app_70915 = app_2308 walk_1021 x_1028 s_70904 set_flag_70897 0 1 in
       let s_70916 = fst s__r_app_70915 in
       let r_app_2447 = snd s__r_app_70915 in
       ha1_2305 s_70916 set_flag_70897 0 r_app_2447
     else
       let s__r_app_70929 = app_2308 run_1024 x_1028 s_70904 set_flag_70897 0 1 in
       let s_70930 = fst s__r_app_70929 in
       let r_app_2446 = snd s__r_app_70929 in
       ha2_2302 s_70930 set_flag_70897 0 r_app_2446
   else
     life_2300 s_70896 set_flag_70897 0 x_1028
 in
 let main_1029 (s_70940:(bool * bool)) (set_flag_70941:bool) (p_x_70942:int) (x_2295:unit) =
   life_2300 s_70940 set_flag_70941 0 (rand_int ())
 in
 let s__r_main_70947 = main_1029 (false, false) false 0 () in
 let s_70948 = fst s__r_main_70947 in
 let r_main_2448 = snd s__r_main_70947 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_70708:(bool * bool)) (set_flag_70709:bool) (p_x_70710:int) (i_1011:int) =
   (s_70708, 
    (fun (s_70713:(bool * bool)) (set_flag_70714:bool) (p_x_70715:int) (x_1012:int) -> (s_70713, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_70729:(bool * bool)) (set_flag_70730:bool) (
             p_x_70731:int) (i_1016:int) =
   let s__u_70736 = ((fst s_70729, true), ()) in
   let s_70737 = fst s__u_70736 in
   let s__r_g_70742 = g_1010 s_70737 set_flag_70730 0 i_1016 in
   let s_70743 = fst s__r_g_70742 in
   let r_g_2442 = snd s__r_g_70742 in
   f_1014 x_1015 s_70743 set_flag_70730 0 r_g_2442
 in
 let rec ha1_2305 (s_70761:(bool * bool)) (set_flag_70762:bool) (p_x_70763:int) (x_1018:int) =
   let s__u_70768 = ((fst s_70761, true), ()) in
   let s_70769 = fst s__u_70768 in
   let s__u_70774 = ((true, snd s_70769), ()) in
   let s_70775 = fst s__u_70774 in
   ha1_2305 s_70775 set_flag_70762 0 x_1018
 in
 let rec ha2_2302 (s_70783:(bool * bool)) (set_flag_70784:bool) (p_x_70785:int) (x_1020:int) =
   let s__u_70790 = ((fst s_70783, true), ()) in
   let s_70791 = fst s__u_70790 in
   let s__u_70796 = ((true, snd s_70791), ()) in
   let s_70797 = fst s__u_70796 in
   ha2_2302 s_70797 set_flag_70784 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_70807:(bool * bool)) (set_flag_70808:bool) (
                  p_x_70809:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_70808
   then
     let x_70810 = let u_70815 = if snd s_70807 && not (fst s_70807) then assert false in
                   rand_int () = 0 in
     let sp_70824 = if x_70810 then ((false, false), (x_1022)) else (s_70807, (p_x_70809)) in
     let s_70811 = fst sp_70824 in
     let p_x_70813 = #0 (snd sp_70824) in
     let s__u_70829 = ((fst s_70811, true), ()) in
     let s_70830 = fst s__u_70829 in
     if x_1022 < 0
     then
       (s_70830, x_1022)
     else
       let s__r_f_70835 = f_1023 s_70830 true p_x_70813 x_1022 in
       let s_70836 = fst s__r_f_70835 in
       let r_f_2443 = snd s__r_f_70835 in
       walk_1021 r_f_2443 s_70836 true p_x_70813 f_1023
   else
     let sp_70845 = if true then ((false, false), (x_1022)) else (s_70807, (p_x_70809)) in
     let s_70846 = fst sp_70845 in
     let p_x_70848 = #0 (snd sp_70845) in
     let s__u_70849 = ((fst s_70846, true), ()) in
     let s_70850 = fst s__u_70849 in
     if x_1022 < 0
     then
       (s_70850, x_1022)
     else
       let s__r_f_70852 = f_1023 s_70850 true p_x_70848 x_1022 in
       let s_70853 = fst s__r_f_70852 in
       let r_f_70854 = snd s__r_f_70852 in
       walk_1021 r_f_70854 s_70853 true p_x_70848 f_1023
 in
 let rec run_1024 (x_1025:int) (s_70864:(bool * bool)) (set_flag_70865:bool) (
                 p_x_70866:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_70871 = ((fst s_70864, true), ()) in
   let s_70872 = fst s__u_70871 in
   if x_1025 < 0
   then
     (s_70872, x_1025)
   else
     let s__r_f_70877 = f_1026 s_70872 set_flag_70865 0 x_1025 in
     let s_70878 = fst s__r_f_70877 in
     let r_f_2444 = snd s__r_f_70877 in
     let s__r_f_70881 = f_1026 s_70878 set_flag_70865 0 r_f_2444 in
     let s_70882 = fst s__r_f_70881 in
     let r_f_2445 = snd s__r_f_70881 in
     run_1024 r_f_2445 s_70882 set_flag_70865 0 f_1026
 in
 let rec life_2300 (s_70896:(bool * bool)) (set_flag_70897:bool) (p_x_70898:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_70903 = ((fst s_70896, true), ()) in
     let s_70904 = fst s__u_70903 in
     if x_1028 < 0
     then
       let s__r_app_70915 = app_2308 walk_1021 x_1028 s_70904 set_flag_70897 0 1 in
       let s_70916 = fst s__r_app_70915 in
       let r_app_2447 = snd s__r_app_70915 in
       ha1_2305 s_70916 set_flag_70897 0 r_app_2447
     else
       let s__r_app_70929 = app_2308 run_1024 x_1028 s_70904 set_flag_70897 0 1 in
       let s_70930 = fst s__r_app_70929 in
       let r_app_2446 = snd s__r_app_70929 in
       ha2_2302 s_70930 set_flag_70897 0 r_app_2446
   else
     life_2300 s_70896 set_flag_70897 0 x_1028
 in
 let main_1029 (s_70940:(bool * bool)) (set_flag_70941:bool) (p_x_70942:int) (x_2295:unit) =
   life_2300 s_70940 set_flag_70941 0 (rand_int ())
 in
 let s__r_main_70947 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_70947 in
 r_main_2448

###inline:
 let g_1010 (s_70708:(bool * bool)) (set_flag_70709:bool) (p_x_70710:int) (i_1011:int) =
   (s_70708, 
    (fun (s_70713:(bool * bool)) (set_flag_70714:bool) (p_x_70715:int) (x_1012:int) -> (s_70713, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_70729:(bool * bool)) (set_flag_70730:bool) (
             p_x_70731:int) (i_1016:int) =
   let s__u_70736 = ((fst s_70729, true), ()) in
   let s__r_g_70742 = g_1010 (fst s__u_70736) set_flag_70730 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_70742) set_flag_70730 0 (snd s__r_g_70742)
 in
 let rec ha1_2305 (s_70761:(bool * bool)) (set_flag_70762:bool) (p_x_70763:int) (x_1018:int) =
   let s__u_70768 = ((fst s_70761, true), ()) in
   let s__u_70774 = ((true, snd (fst s__u_70768)), ()) in
   ha1_2305 (fst s__u_70774) set_flag_70762 0 x_1018
 in
 let rec ha2_2302 (s_70783:(bool * bool)) (set_flag_70784:bool) (p_x_70785:int) (x_1020:int) =
   let s__u_70790 = ((fst s_70783, true), ()) in
   let s__u_70796 = ((true, snd (fst s__u_70790)), ()) in
   ha2_2302 (fst s__u_70796) set_flag_70784 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_70807:(bool * bool)) (set_flag_70808:bool) (
                  p_x_70809:int) (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   if set_flag_70808
   then
     let x_70810 = let u_70815 = if snd s_70807 && not (fst s_70807) then assert false in
                   rand_int () = 0 in
     let sp_70824 = if x_70810 then ((false, false), (x_1022)) else (s_70807, (p_x_70809)) in
     let p_x_70813 = #0 (snd sp_70824) in
     let s__u_70829 = ((fst (fst sp_70824), true), ()) in
     if x_1022 < 0
     then
       (fst s__u_70829, x_1022)
     else
       let s__r_f_70835 = f_1023 (fst s__u_70829) true p_x_70813 x_1022 in
       walk_1021 (snd s__r_f_70835) (fst s__r_f_70835) true p_x_70813 f_1023
   else
     let sp_70845 = if true then ((false, false), (x_1022)) else (s_70807, (p_x_70809)) in
     let p_x_70848 = #0 (snd sp_70845) in
     let s__u_70849 = ((fst (fst sp_70845), true), ()) in
     if x_1022 < 0
     then
       (fst s__u_70849, x_1022)
     else
       let s__r_f_70852 = f_1023 (fst s__u_70849) true p_x_70848 x_1022 in
       walk_1021 (snd s__r_f_70852) (fst s__r_f_70852) true p_x_70848 f_1023
 in
 let rec run_1024 (x_1025:int) (s_70864:(bool * bool)) (set_flag_70865:bool) (
                 p_x_70866:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_70871 = ((fst s_70864, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_70871, x_1025)
   else
     let s__r_f_70877 = f_1026 (fst s__u_70871) set_flag_70865 0 x_1025 in
     let s__r_f_70881 = f_1026 (fst s__r_f_70877) set_flag_70865 0 (snd s__r_f_70877) in
     run_1024 (snd s__r_f_70881) (fst s__r_f_70881) set_flag_70865 0 f_1026
 in
 let rec life_2300 (s_70896:(bool * bool)) (set_flag_70897:bool) (p_x_70898:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_70903 = ((fst s_70896, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_70915 = app_2308 walk_1021 x_1028 (fst s__u_70903) set_flag_70897 0 1 in
       ha1_2305 (fst s__r_app_70915) set_flag_70897 0 (snd s__r_app_70915)
     else
       let s__r_app_70929 = app_2308 run_1024 x_1028 (fst s__u_70903) set_flag_70897 0 1 in
       ha2_2302 (fst s__r_app_70929) set_flag_70897 0 (snd s__r_app_70929)
   else
     life_2300 s_70896 set_flag_70897 0 x_1028
 in
 let main_1029 (s_70940:(bool * bool)) (set_flag_70941:bool) (p_x_70942:int) (x_2295:unit) =
   life_2300 s_70940 set_flag_70941 0 (rand_int ())
 in
 let s__r_main_70947 = main_1029 (false, false) false 0 () in
 snd s__r_main_70947

###CPS:
 (let g_1010 s_70708 set_flag_70709 p_x_70710 i_1011 k_g_71749 =
    k_g_71749
      (s_70708, (fun s_70713 set_flag_70714 p_x_70715 x_1012 k_g_71769 -> k_g_71769 (s_70713, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_70729 set_flag_70730 p_x_70731 i_1016 k_app_71804 =
    let s__u_70736 k_app_s__u_71808 = k_app_s__u_71808 ((fst s_70729, true), ()) in
    s__u_70736
      (fun s__u_71909 ->
         let s__r_g_70742 k_app_s__r_g_71840 = (g_1010 (fst s__u_71909) set_flag_70730 0) i_1016 k_app_s__r_g_71840 in
         s__r_g_70742
           (fun s__r_g_71908 -> (f_1014 x_1015 (fst s__r_g_71908) set_flag_70730 0) (snd s__r_g_71908) k_app_71804))
  in
  let rec ha1_2305 s_70761 set_flag_70762 p_x_70763 x_1018 k_ha1_71934 =
    let s__u_70768 k_ha1_s__u_71938 = k_ha1_s__u_71938 ((fst s_70761, true), ()) in
    s__u_70768
      (fun s__u_71977 ->
         let s__u_70774 k_ha1_s__u_71952 = k_ha1_s__u_71952 ((true, snd (fst s__u_71977)), ()) in
         s__u_70774 (fun s__u_71976 -> (ha1_2305 (fst s__u_71976) set_flag_70762 0) x_1018 k_ha1_71934))
  in
  let rec ha2_2302 s_70783 set_flag_70784 p_x_70785 x_1020 k_ha2_71987 =
    let s__u_70790 k_ha2_s__u_71991 = k_ha2_s__u_71991 ((fst s_70783, true), ()) in
    s__u_70790
      (fun s__u_72030 ->
         let s__u_70796 k_ha2_s__u_72005 = k_ha2_s__u_72005 ((true, snd (fst s__u_72030)), ()) in
         s__u_70796 (fun s__u_72029 -> (ha2_2302 (fst s__u_72029) set_flag_70784 0) x_1020 k_ha2_71987))
  in
  let rec walk_1021 x_1022 s_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 =
    if set_flag_70808
    then
      let x_70810 k_walk_x_72050 =
        let u_70815 k_walk_x_u_72067 =
          if snd s_70807
          then
            if not (fst s_70807) then <|fail|> () k_walk_x_u_72067 else k_walk_x_u_72067 ()
          else
            k_walk_x_u_72067 ()
        in
        u_70815 (fun u_72084 -> rand_int_cps () (fun x_72072 -> k_walk_x_72050 (x_72072 = 0)))
      in
      x_70810
        (fun x_72200 ->
           let sp_70824 k_walk_sp_72114 =
             if x_72200
             then
               k_walk_sp_72114 ((false, false), (x_1022))
             else
               k_walk_sp_72114 (s_70807, (p_x_70809))
           in
           sp_70824
             (fun sp_72199 ->
                let s__u_70829 k_walk_s__u_72122 = k_walk_s__u_72122 ((fst (fst sp_72199), true), ()) in
                s__u_70829
                  (fun s__u_72197 ->
                     if x_1022 < 0
                     then
                       k_walk_72046 (fst s__u_72197, x_1022)
                     else
                       let s__r_f_70835 k_walk_s__r_f_72148 =
                         (f_1023 (fst s__u_72197) true (#0 (snd sp_72199))) x_1022 k_walk_s__r_f_72148
                       in
                       s__r_f_70835
                         (fun s__r_f_72192 ->
                            (walk_1021 (snd s__r_f_72192) (fst s__r_f_72192) true (#0 (snd sp_72199)))
                              f_1023 k_walk_72046))))
    else
      let sp_70845 k_walk_sp_72230 = k_walk_sp_72230 ((false, false), (x_1022)) in
      sp_70845
        (fun sp_72315 ->
           let s__u_70849 k_walk_s__u_72238 = k_walk_s__u_72238 ((fst (fst sp_72315), true), ()) in
           s__u_70849
             (fun s__u_72313 ->
                if x_1022 < 0
                then
                  k_walk_72046 (fst s__u_72313, x_1022)
                else
                  let s__r_f_70852 k_walk_s__r_f_72264 =
                    (f_1023 (fst s__u_72313) true (#0 (snd sp_72315))) x_1022 k_walk_s__r_f_72264
                  in
                  s__r_f_70852
                    (fun s__r_f_72308 ->
                       (walk_1021 (snd s__r_f_72308) (fst s__r_f_72308) true (#0 (snd sp_72315)))
                         f_1023 k_walk_72046)))
  in
  let rec run_1024 x_1025 s_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 =
    let s__u_70871 k_run_s__u_72346 = k_run_s__u_72346 ((fst s_70864, true), ()) in
    s__u_70871
      (fun s__u_72437 ->
         if x_1025 < 0
         then
           k_run_72342 (fst s__u_72437, x_1025)
         else
           let s__r_f_70877 k_run_s__r_f_72372 =
             (f_1026 (fst s__u_72437) set_flag_70865 0) x_1025 k_run_s__r_f_72372
           in
           s__r_f_70877
             (fun s__r_f_72432 ->
                let s__r_f_70881 k_run_s__r_f_72387 =
                  (f_1026 (fst s__r_f_72432) set_flag_70865 0) (snd s__r_f_72432) k_run_s__r_f_72387
                in
                s__r_f_70881
                  (fun s__r_f_72431 ->
                     (run_1024 (snd s__r_f_72431) (fst s__r_f_72431) set_flag_70865 0) f_1026 k_run_72342)))
  in
  let rec life_2300 s_70896 set_flag_70897 p_x_70898 x_1028 k_life_72454 =
    rand_int_cps
      () 
      (fun x_72457 ->
         if x_72457 > 0
         then
           let s__u_70903 k_life_s__u_72472 = k_life_s__u_72472 ((fst s_70896, true), ()) in
           s__u_70903
             (fun s__u_72601 ->
                if x_1028 < 0
                then
                  let s__r_app_70915 k_life_s__r_app_72520 =
                    (app_2308 walk_1021 x_1028 (fst s__u_72601) set_flag_70897 0) 1 k_life_s__r_app_72520
                  in
                  s__r_app_70915
                    (fun s__r_app_72539 ->
                       (ha1_2305 (fst s__r_app_72539) set_flag_70897 0) (snd s__r_app_72539) k_life_72454)
                else
                  let s__r_app_70929 k_life_s__r_app_72577 =
                    (app_2308 run_1024 x_1028 (fst s__u_72601) set_flag_70897 0) 1 k_life_s__r_app_72577
                  in
                  s__r_app_70929
                    (fun s__r_app_72596 ->
                       (ha2_2302 (fst s__r_app_72596) set_flag_70897 0) (snd s__r_app_72596) k_life_72454))
         else
           (life_2300 s_70896 set_flag_70897 0) x_1028 k_life_72454)
  in
  let main_1029 s_70940 set_flag_70941 p_x_70942 x_2295 k_main_72628 =
    rand_int_cps () (fun x_72651 -> (life_2300 s_70940 set_flag_70941 0) x_72651 k_main_72628)
  in
  let s__r_main_70947 k_s__r_main_72712 = (((main_1029 (false, false)) false) 0) () k_s__r_main_72712 in
  s__r_main_70947 (fun s__r_main_72718 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_70708 s1_70708 set_flag_70709 p_x_70710 i_1011 k_g_71749 =
    k_g_71749
      s0_70708 s1_70708 
      (fun s0_70713 s1_70713 set_flag_70714 p_x_70715 x_1012 k_g_71769 ->
         k_g_71769 s0_70713 s1_70713 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_70761 s1_70761 set_flag_70762 p_x_70763 x_1018 k_ha1_71934 =
    ha1_2305 true true set_flag_70762 0 x_1018 k_ha1_71934
  in
  let rec ha2_2302 s0_70783 s1_70783 set_flag_70784 p_x_70785 x_1020 k_ha2_71987 =
    ha2_2302 true true set_flag_70784 0 x_1020 k_ha2_71987
  in
  let rec walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 =
    if set_flag_70808
    then
      let x_70810 k_walk_x_72050 =
        let u_70815 k_walk_x_u_72067 =
          if s1_70807
          then
            if not s0_70807 then <|fail|> () k_walk_x_u_72067 else k_walk_x_u_72067 ()
          else
            k_walk_x_u_72067 ()
        in
        u_70815 (fun u_72084 -> rand_int_cps () (fun x_72072 -> k_walk_x_72050 (x_72072 = 0)))
      in
      x_70810
        (fun x_72200 ->
           let sp_70824 k_walk_sp_72114 =
             if x_72200
             then
               k_walk_sp_72114 false false x_1022
             else
               k_walk_sp_72114 s0_70807 s1_70807 p_x_70809
           in
           sp_70824
             (fun sp00_72199 sp01_72199 sp10_72199 ->
                if x_1022 < 0
                then
                  k_walk_72046 sp00_72199 true x_1022
                else
                  f_1023
                    sp00_72199 true true sp10_72199 x_1022 
                    (fun s__r_f00_72192 s__r_f01_72192 s__r_f1_72192 ->
                       walk_1021
                         s__r_f1_72192 s__r_f00_72192 s__r_f01_72192 true sp10_72199 f_1023 k_walk_72046)))
    else
      if x_1022 < 0
      then
        k_walk_72046 false true x_1022
      else
        f_1023
          false true true x_1022 x_1022 
          (fun s__r_f00_72308 s__r_f01_72308 s__r_f1_72308 ->
             walk_1021 s__r_f1_72308 s__r_f00_72308 s__r_f01_72308 true x_1022 f_1023 k_walk_72046)
  in
  let rec run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 =
    if x_1025 < 0
    then
      k_run_72342 s0_70864 true x_1025
    else
      f_1026
        s0_70864 true set_flag_70865 0 x_1025 
        (fun s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 ->
           f_1026
             s__r_f00_72432 s__r_f01_72432 set_flag_70865 0 s__r_f1_72432 
             (fun s__r_f00_72431 s__r_f01_72431 s__r_f1_72431 ->
                run_1024 s__r_f1_72431 s__r_f00_72431 s__r_f01_72431 set_flag_70865 0 f_1026 k_run_72342))
  in
  let rec life_2300 s0_70896 s1_70896 set_flag_70897 p_x_70898 x_1028 k_life_72454 =
    rand_int_cps
      () 
      (fun x_72457 ->
         if x_72457 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_70896 true set_flag_70897 0 1 
               (fun s__r_g00_71908 s__r_g01_71908 s__r_g1_71908 ->
                  walk_1021
                    x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 
                    0 s__r_g1_71908 
                    (fun s__r_app00_72539 s__r_app01_72539 s__r_app1_72539 ->
                       ha1_2305 s__r_app00_72539 s__r_app01_72539 set_flag_70897 0 s__r_app1_72539 k_life_72454))
           else
             g_1010
               s0_70896 true set_flag_70897 0 1 
               (fun s__r_g00_71908 s__r_g01_71908 s__r_g1_71908 ->
                  run_1024
                    x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 
                    0 s__r_g1_71908 
                    (fun s__r_app00_72596 s__r_app01_72596 s__r_app1_72596 ->
                       ha2_2302 s__r_app00_72596 s__r_app01_72596 set_flag_70897 0 s__r_app1_72596 k_life_72454))
         else
           life_2300 s0_70896 s1_70896 set_flag_70897 0 x_1028 k_life_72454)
  in
  let main_1029 s0_70940 s1_70940 set_flag_70941 p_x_70942 x_2295 k_main_72628 =
    rand_int_cps () (fun x_72651 -> life_2300 s0_70940 s1_70940 set_flag_70941 0 x_72651 k_main_72628)
  in
  main_1029 false false false 0 () (fun s__r_main00_72718 s__r_main01_72718 s__r_main1_72718 -> {end}) # 
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_70708 s1_70708 set_flag_70709 p_x_70710 i_1011 k_g_71749 =
    k_g_71749
      s0_70708 s1_70708 
      (fun s0_70713 s1_70713 set_flag_70714 p_x_70715 x_1012 k_g_71769 ->
         k_g_71769 s0_70713 s1_70713 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_70761 s1_70761 set_flag_70762 p_x_70763 x_1018 k_ha1_71934 = _|_ in
  let rec ha2_2302 s0_70783 s1_70783 set_flag_70784 p_x_70785 x_1020 k_ha2_71987 = _|_ in
  let rec walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 =
    if set_flag_70808
    then
      let x_70810 k_walk_x_72050 =
        let u_70815 k_walk_x_u_72067 =
          if s1_70807
          then
            if not s0_70807 then <|fail|> () k_walk_x_u_72067 else k_walk_x_u_72067 ()
          else
            k_walk_x_u_72067 ()
        in
        u_70815 (fun u_72084 -> rand_int_cps () (fun x_72072 -> k_walk_x_72050 (x_72072 = 0)))
      in
      x_70810
        (fun x_72200 ->
           let sp_70824 k_walk_sp_72114 =
             if x_72200
             then
               k_walk_sp_72114 false false x_1022
             else
               k_walk_sp_72114 s0_70807 s1_70807 p_x_70809
           in
           sp_70824
             (fun sp00_72199 sp01_72199 sp10_72199 ->
                if x_1022 < 0
                then
                  k_walk_72046 sp00_72199 true x_1022
                else
                  f_1023
                    sp00_72199 true true sp10_72199 x_1022 
                    (fun s__r_f00_72192 s__r_f01_72192 s__r_f1_72192 ->
                       walk_1021
                         s__r_f1_72192 s__r_f00_72192 s__r_f01_72192 true sp10_72199 f_1023 k_walk_72046)))
    else
      if x_1022 < 0
      then
        k_walk_72046 false true x_1022
      else
        f_1023
          false true true x_1022 x_1022 
          (fun s__r_f00_72308 s__r_f01_72308 s__r_f1_72308 ->
             walk_1021 s__r_f1_72308 s__r_f00_72308 s__r_f01_72308 true x_1022 f_1023 k_walk_72046)
  in
  let rec run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 =
    if x_1025 < 0
    then
      k_run_72342 s0_70864 true x_1025
    else
      f_1026
        s0_70864 true set_flag_70865 0 x_1025 
        (fun s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 ->
           f_1026
             s__r_f00_72432 s__r_f01_72432 set_flag_70865 0 s__r_f1_72432 
             (fun s__r_f00_72431 s__r_f01_72431 s__r_f1_72431 ->
                run_1024 s__r_f1_72431 s__r_f00_72431 s__r_f01_72431 set_flag_70865 0 f_1026 k_run_72342))
  in
  let rec life_2300 s0_70896 s1_70896 set_flag_70897 p_x_70898 x_1028 k_life_72454 =
    rand_int_cps
      () 
      (fun x_72457 ->
         if x_72457 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_70896 true set_flag_70897 0 1 
               (fun s__r_g00_71908 s__r_g01_71908 s__r_g1_71908 ->
                  walk_1021
                    x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 
                    0 s__r_g1_71908 
                    (fun s__r_app00_72539 s__r_app01_72539 s__r_app1_72539 ->
                       ha1_2305 s__r_app00_72539 s__r_app01_72539 set_flag_70897 0 s__r_app1_72539 k_life_72454))
           else
             g_1010
               s0_70896 true set_flag_70897 0 1 
               (fun s__r_g00_71908 s__r_g01_71908 s__r_g1_71908 ->
                  run_1024
                    x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 
                    0 s__r_g1_71908 
                    (fun s__r_app00_72596 s__r_app01_72596 s__r_app1_72596 ->
                       ha2_2302 s__r_app00_72596 s__r_app01_72596 set_flag_70897 0 s__r_app1_72596 k_life_72454))
         else
           life_2300 s0_70896 s1_70896 set_flag_70897 0 x_1028 k_life_72454)
  in
  let main_1029 s0_70940 s1_70940 set_flag_70941 p_x_70942 x_2295 k_main_72628 =
    rand_int_cps () (fun x_72651 -> life_2300 s0_70940 s1_70940 set_flag_70941 0 x_72651 k_main_72628)
  in
  main_1029 false false false 0 () (fun s__r_main00_72718 s__r_main01_72718 s__r_main1_72718 -> {end}) # 
  [ACPS])

Program with abstraction types (CEGAR-cycle 21)::
Main: main_74220
  main_74220 -> (main_1029 false false false 0 () f_74236).
  br_f_life_74241 b_74242 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when b_74242 ->
      (g_1010 s0_70896 true set_flag_70897 0 1
       (f_life_74231 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454)).
  br_f_life_74241 b_74242 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (not b_74242) ->
      (g_1010 s0_70896 true set_flag_70897 0 1
       (f_life_74233 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454)).
  br_u_74239 b_74240 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when b_74240 ->
      (fail_74243 true k_walk_x_u_72067).
  br_u_74239 b_74240 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when 
      (not b_74240) -> (k_walk_x_u_72067 ()).
  br_walk_74237 b_74238 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when b_74238 ->
      (k_walk_72046 false true x_1022).
  br_walk_74237 b_74238 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when 
      (not b_74238) ->
      (f_1023 false true true x_1022 x_1022
       (f_walk_74227 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046)).
  f_74236 s__r_main00_72718 s__r_main01_72718 s__r_main1_72718 -> end.
  f_g_74221 i_1011 p_x_70710 s0_70708 s1_70708 set_flag_70709 s0_70713 s1_70713 set_flag_70714 p_x_70715 x_1012 
  k_g_71769 -> (k_g_71769 s0_70713 s1_70713 (x_1012 - i_1011)).
  f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (x_72457 > 0) ->
      (br_f_life_74241 (x_1028 < 0) p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457).
  f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (not (x_72457 > 0)) -> (life_2300 s0_70896 s1_70896 set_flag_70897 0 x_1028 k_life_72454).
  f_life_74231 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454 s__r_g00_71908 s__r_g01_71908 
  s__r_g1_71908 ->
      (walk_1021 x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 0 s__r_g1_71908
       (f_life_74232 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457
        k_life_72454)).
  f_life_74232 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457 k_life_72454 
  s__r_app00_72539 s__r_app01_72539 s__r_app1_72539 ->
      (ha1_2305 s__r_app00_72539 s__r_app01_72539 set_flag_70897 0 s__r_app1_72539 k_life_72454).
  f_life_74233 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454 s__r_g00_71908 s__r_g01_71908 
  s__r_g1_71908 ->
      (run_1024 x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 0 s__r_g1_71908
       (f_life_74234 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457
        k_life_72454)).
  f_life_74234 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457 k_life_72454 
  s__r_app00_72596 s__r_app01_72596 s__r_app1_72596 ->
      (ha2_2302 s__r_app00_72596 s__r_app01_72596 set_flag_70897 0 s__r_app1_72596 k_life_72454).
  f_main_74235 p_x_70942 s0_70940 s1_70940 set_flag_70941 x_2295 k_main_72628 x_72651 ->
      (life_2300 s0_70940 s1_70940 set_flag_70941 0 x_72651 k_main_72628).
  f_run_74228 p_x_70866 s0_70864 s1_70864 set_flag_70865 x_1025 f_1026 k_run_72342 s__r_f00_72432 s__r_f01_72432 
  s__r_f1_72432 ->
      (f_1026 s__r_f00_72432 s__r_f01_72432 set_flag_70865 0 s__r_f1_72432
       (f_run_74229 p_x_70866 s0_70864 s1_70864 s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 set_flag_70865 x_1025
        f_1026 k_run_72342)).
  f_run_74229 p_x_70866 s0_70864 s1_70864 s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 set_flag_70865 x_1025 f_1026 
  k_run_72342 s__r_f00_72431 s__r_f01_72431 s__r_f1_72431 ->
      (run_1024 s__r_f1_72431 s__r_f00_72431 s__r_f01_72431 set_flag_70865 0 f_1026 k_run_72342).
  f_walk_74224 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046 x_72200 ->
      (sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200
       (f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046)).
  f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046 sp00_72199 sp01_72199 
  sp10_72199 when (x_1022 < 0) -> (k_walk_72046 sp00_72199 true x_1022).
  f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046 sp00_72199 sp01_72199 
  sp10_72199 when (not (x_1022 < 0)) ->
      (f_1023 sp00_72199 true true sp10_72199 x_1022
       (f_walk_74226 p_x_70809 s0_70807 s1_70807 set_flag_70808 sp00_72199 sp01_72199 sp10_72199 x_1022 x_72200 f_1023
        k_walk_72046)).
  f_walk_74226 p_x_70809 s0_70807 s1_70807 set_flag_70808 sp00_72199 sp01_72199 sp10_72199 x_1022 x_72200 f_1023 
  k_walk_72046 s__r_f00_72192 s__r_f01_72192 s__r_f1_72192 ->
      (walk_1021 s__r_f1_72192 s__r_f00_72192 s__r_f01_72192 true sp10_72199 f_1023 k_walk_72046).
  f_walk_74227 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046 s__r_f00_72308 s__r_f01_72308 
  s__r_f1_72308 -> (walk_1021 s__r_f1_72308 s__r_f00_72308 s__r_f01_72308 true x_1022 f_1023 k_walk_72046).
  f_x_74222 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050 u_72084 ->
      (rand_int (f_x_74223 p_x_70809 s0_70807 s1_70807 set_flag_70808 u_72084 x_1022 k_walk_x_72050)).
  f_x_74223 p_x_70809 s0_70807 s1_70807 set_flag_70808 u_72084 x_1022 k_walk_x_72050 x_72072 ->
      (k_walk_x_72050 (x_72072 = 0)).
  fail_74243 b k -> {fail} => (k ()).
  g_1010 s0_70708 s1_70708 set_flag_70709 p_x_70710 i_1011 k_g_71749 ->
      (k_g_71749 s0_70708 s1_70708 (f_g_74221 i_1011 p_x_70710 s0_70708 s1_70708 set_flag_70709)).
  ha1_2305 s0_70761 s1_70761 set_flag_70762 p_x_70763 x_1018 k_ha1_71934 -> _|_.
  ha2_2302 s0_70783 s1_70783 set_flag_70784 p_x_70785 x_1020 k_ha2_71987 -> _|_.
  life_2300 s0_70896 s1_70896 set_flag_70897 p_x_70898 x_1028 k_life_72454 ->
      (rand_int (f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454)).
  main_1029 s0_70940 s1_70940 set_flag_70941 p_x_70942 x_2295 k_main_72628 ->
      (rand_int (f_main_74235 p_x_70942 s0_70940 s1_70940 set_flag_70941 x_2295 k_main_72628)).
  run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 when 
      (x_1025 < 0) -> (k_run_72342 s0_70864 true x_1025).
  run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_70864 true set_flag_70865 0 x_1025
       (f_run_74228 p_x_70866 s0_70864 s1_70864 set_flag_70865 x_1025 f_1026 k_run_72342)).
  sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 k_walk_sp_72114 when x_72200 ->
      (k_walk_sp_72114 false false x_1022).
  sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 k_walk_sp_72114 when 
      (not x_72200) -> (k_walk_sp_72114 s0_70807 s1_70807 p_x_70809).
  u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when s1_70807 ->
      (br_u_74239 (not s0_70807) p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067).
  u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when 
      (not s1_70807) -> (k_walk_x_u_72067 ()).
  walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when set_flag_70808 ->
      (x_70810 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022
       (f_walk_74224 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046)).
  walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when 
      (not set_flag_70808) ->
      (br_walk_74237 (x_1022 < 0) x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046).
  x_70810 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050 ->
      (u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022
       (f_x_74222 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050)).
Types:
  main_74220 : X
  br_f_life_74241 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_74239 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  br_walk_74237 : (bool ->
                   int ->
                   bool ->
                   bool ->
                   bool ->
                   int ->
                   (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                   (bool -> bool -> int -> X) -> X)
  f_life_74230 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  f_walk_74225 : (int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  bool ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  fail_74243 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_70824 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_70815 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(21-1) Abstracting ... DONE!

(21-2) Checking HORS ... DONE!

Error trace::
  main_74220 ... --> 
  main_1029 ... --> 
  f_main_74235 ... --> 
  life_2300 ... --> 
  f_life_74230 [1/2] ... --> 
  br_f_life_74241 [1/2] ... --> 
  g_1010 ... --> 
  f_life_74231 ... --> 
  walk_1021 [1/2] ... --> 
  x_70810 ... --> 
  u_70815 [1/2] ... --> 
  br_u_74239 [1/2] ... --> 
  fail_74243 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0

(21-3) Checking counterexample ... DONE!

(21-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 22)::
Main: main_74220
  main_74220 -> (main_1029 false false false 0 () f_74236).
  br_f_life_74241 b_74242 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when b_74242 ->
      (g_1010 s0_70896 true set_flag_70897 0 1
       (f_life_74231 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454)).
  br_f_life_74241 b_74242 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (not b_74242) ->
      (g_1010 s0_70896 true set_flag_70897 0 1
       (f_life_74233 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454)).
  br_u_74239 b_74240 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when b_74240 ->
      (fail_74243 true k_walk_x_u_72067).
  br_u_74239 b_74240 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when 
      (not b_74240) -> (k_walk_x_u_72067 ()).
  br_walk_74237 b_74238 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when b_74238 ->
      (k_walk_72046 false true x_1022).
  br_walk_74237 b_74238 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when 
      (not b_74238) ->
      (f_1023 false true true x_1022 x_1022
       (f_walk_74227 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046)).
  f_74236 s__r_main00_72718 s__r_main01_72718 s__r_main1_72718 -> end.
  f_g_74221 i_1011 p_x_70710 s0_70708 s1_70708 set_flag_70709 s0_70713 s1_70713 set_flag_70714 p_x_70715 x_1012 
  k_g_71769 -> (k_g_71769 s0_70713 s1_70713 (x_1012 - i_1011)).
  f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (x_72457 > 0) ->
      (br_f_life_74241 (x_1028 < 0) p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457).
  f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (not (x_72457 > 0)) -> (life_2300 s0_70896 s1_70896 set_flag_70897 0 x_1028 k_life_72454).
  f_life_74231 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454 s__r_g00_71908 s__r_g01_71908 
  s__r_g1_71908 ->
      (walk_1021 x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 0 s__r_g1_71908
       (f_life_74232 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457
        k_life_72454)).
  f_life_74232 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457 k_life_72454 
  s__r_app00_72539 s__r_app01_72539 s__r_app1_72539 ->
      (ha1_2305 s__r_app00_72539 s__r_app01_72539 set_flag_70897 0 s__r_app1_72539 k_life_72454).
  f_life_74233 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454 s__r_g00_71908 s__r_g01_71908 
  s__r_g1_71908 ->
      (run_1024 x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 0 s__r_g1_71908
       (f_life_74234 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457
        k_life_72454)).
  f_life_74234 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457 k_life_72454 
  s__r_app00_72596 s__r_app01_72596 s__r_app1_72596 ->
      (ha2_2302 s__r_app00_72596 s__r_app01_72596 set_flag_70897 0 s__r_app1_72596 k_life_72454).
  f_main_74235 p_x_70942 s0_70940 s1_70940 set_flag_70941 x_2295 k_main_72628 x_72651 ->
      (life_2300 s0_70940 s1_70940 set_flag_70941 0 x_72651 k_main_72628).
  f_run_74228 p_x_70866 s0_70864 s1_70864 set_flag_70865 x_1025 f_1026 k_run_72342 s__r_f00_72432 s__r_f01_72432 
  s__r_f1_72432 ->
      (f_1026 s__r_f00_72432 s__r_f01_72432 set_flag_70865 0 s__r_f1_72432
       (f_run_74229 p_x_70866 s0_70864 s1_70864 s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 set_flag_70865 x_1025
        f_1026 k_run_72342)).
  f_run_74229 p_x_70866 s0_70864 s1_70864 s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 set_flag_70865 x_1025 f_1026 
  k_run_72342 s__r_f00_72431 s__r_f01_72431 s__r_f1_72431 ->
      (run_1024 s__r_f1_72431 s__r_f00_72431 s__r_f01_72431 set_flag_70865 0 f_1026 k_run_72342).
  f_walk_74224 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046 x_72200 ->
      (sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200
       (f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046)).
  f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046 sp00_72199 sp01_72199 
  sp10_72199 when (x_1022 < 0) -> (k_walk_72046 sp00_72199 true x_1022).
  f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046 sp00_72199 sp01_72199 
  sp10_72199 when (not (x_1022 < 0)) ->
      (f_1023 sp00_72199 true true sp10_72199 x_1022
       (f_walk_74226 p_x_70809 s0_70807 s1_70807 set_flag_70808 sp00_72199 sp01_72199 sp10_72199 x_1022 x_72200 f_1023
        k_walk_72046)).
  f_walk_74226 p_x_70809 s0_70807 s1_70807 set_flag_70808 sp00_72199 sp01_72199 sp10_72199 x_1022 x_72200 f_1023 
  k_walk_72046 s__r_f00_72192 s__r_f01_72192 s__r_f1_72192 ->
      (walk_1021 s__r_f1_72192 s__r_f00_72192 s__r_f01_72192 true sp10_72199 f_1023 k_walk_72046).
  f_walk_74227 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046 s__r_f00_72308 s__r_f01_72308 
  s__r_f1_72308 -> (walk_1021 s__r_f1_72308 s__r_f00_72308 s__r_f01_72308 true x_1022 f_1023 k_walk_72046).
  f_x_74222 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050 u_72084 ->
      (rand_int (f_x_74223 p_x_70809 s0_70807 s1_70807 set_flag_70808 u_72084 x_1022 k_walk_x_72050)).
  f_x_74223 p_x_70809 s0_70807 s1_70807 set_flag_70808 u_72084 x_1022 k_walk_x_72050 x_72072 ->
      (k_walk_x_72050 (x_72072 = 0)).
  fail_74243 b k -> {fail} => (k ()).
  g_1010 s0_70708 s1_70708 set_flag_70709 p_x_70710 i_1011 k_g_71749 ->
      (k_g_71749 s0_70708 s1_70708 (f_g_74221 i_1011 p_x_70710 s0_70708 s1_70708 set_flag_70709)).
  ha1_2305 s0_70761 s1_70761 set_flag_70762 p_x_70763 x_1018 k_ha1_71934 -> _|_.
  ha2_2302 s0_70783 s1_70783 set_flag_70784 p_x_70785 x_1020 k_ha2_71987 -> _|_.
  life_2300 s0_70896 s1_70896 set_flag_70897 p_x_70898 x_1028 k_life_72454 ->
      (rand_int (f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454)).
  main_1029 s0_70940 s1_70940 set_flag_70941 p_x_70942 x_2295 k_main_72628 ->
      (rand_int (f_main_74235 p_x_70942 s0_70940 s1_70940 set_flag_70941 x_2295 k_main_72628)).
  run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 when 
      (x_1025 < 0) -> (k_run_72342 s0_70864 true x_1025).
  run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_70864 true set_flag_70865 0 x_1025
       (f_run_74228 p_x_70866 s0_70864 s1_70864 set_flag_70865 x_1025 f_1026 k_run_72342)).
  sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 k_walk_sp_72114 when x_72200 ->
      (k_walk_sp_72114 false false x_1022).
  sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 k_walk_sp_72114 when 
      (not x_72200) -> (k_walk_sp_72114 s0_70807 s1_70807 p_x_70809).
  u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when s1_70807 ->
      (br_u_74239 (not s0_70807) p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067).
  u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when 
      (not s1_70807) -> (k_walk_x_u_72067 ()).
  walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when set_flag_70808 ->
      (x_70810 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022
       (f_walk_74224 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046)).
  walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when 
      (not set_flag_70808) ->
      (br_walk_74237 (x_1022 < 0) x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046).
  x_70810 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050 ->
      (u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022
       (f_x_74222 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050)).
Types:
  main_74220 : X
  br_f_life_74241 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_u_74239 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  br_walk_74237 : (bool ->
                   int ->
                   bool ->
                   bool ->
                   bool ->
                   int ->
                   (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                   (bool -> bool -> int -> X) -> X)
  f_life_74230 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_walk_74225 : (int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  bool ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  fail_74243 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_70824 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_70815 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               x_5:bool ->
               int[(not x_5)] ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(22-1) Abstracting ... DONE!

(22-2) Checking HORS ... DONE!

Error trace::
  main_74220 ... --> 
  main_1029 ... --> 
  f_main_74235 ... --> 
  life_2300 ... --> 
  f_life_74230 [1/2] ... --> 
  br_f_life_74241 [1/2] ... --> 
  g_1010 ... --> 
  f_life_74231 ... --> 
  walk_1021 [2/2] ... --> 
  br_walk_74237 [2/2] ... --> 
  f_g_74221 ... --> 
  f_walk_74227 ... --> 
  walk_1021 [1/2] ... --> 
  x_70810 ... --> 
  u_70815 [1/2] ... --> 
  br_u_74239 [1/2] ... --> 
  fail_74243 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0

(22-3) Checking counterexample ... DONE!

(22-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 0; 0; 1; 1

Program with abstraction types (CEGAR-cycle 23)::
Main: main_74220
  main_74220 -> (main_1029 false false false 0 () f_74236).
  br_f_life_74241 b_74242 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when b_74242 ->
      (g_1010 s0_70896 true set_flag_70897 0 1
       (f_life_74231 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454)).
  br_f_life_74241 b_74242 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (not b_74242) ->
      (g_1010 s0_70896 true set_flag_70897 0 1
       (f_life_74233 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454)).
  br_u_74239 b_74240 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when b_74240 ->
      (fail_74243 true k_walk_x_u_72067).
  br_u_74239 b_74240 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when 
      (not b_74240) -> (k_walk_x_u_72067 ()).
  br_walk_74237 b_74238 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when b_74238 ->
      (k_walk_72046 false true x_1022).
  br_walk_74237 b_74238 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when 
      (not b_74238) ->
      (f_1023 false true true x_1022 x_1022
       (f_walk_74227 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046)).
  f_74236 s__r_main00_72718 s__r_main01_72718 s__r_main1_72718 -> end.
  f_g_74221 i_1011 p_x_70710 s0_70708 s1_70708 set_flag_70709 s0_70713 s1_70713 set_flag_70714 p_x_70715 x_1012 
  k_g_71769 -> (k_g_71769 s0_70713 s1_70713 (x_1012 - i_1011)).
  f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (x_72457 > 0) ->
      (br_f_life_74241 (x_1028 < 0) p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457).
  f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454 x_72457 when 
      (not (x_72457 > 0)) -> (life_2300 s0_70896 s1_70896 set_flag_70897 0 x_1028 k_life_72454).
  f_life_74231 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454 s__r_g00_71908 s__r_g01_71908 
  s__r_g1_71908 ->
      (walk_1021 x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 0 s__r_g1_71908
       (f_life_74232 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457
        k_life_72454)).
  f_life_74232 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457 k_life_72454 
  s__r_app00_72539 s__r_app01_72539 s__r_app1_72539 ->
      (ha1_2305 s__r_app00_72539 s__r_app01_72539 set_flag_70897 0 s__r_app1_72539 k_life_72454).
  f_life_74233 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 x_72457 k_life_72454 s__r_g00_71908 s__r_g01_71908 
  s__r_g1_71908 ->
      (run_1024 x_1028 s__r_g00_71908 s__r_g01_71908 set_flag_70897 0 s__r_g1_71908
       (f_life_74234 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457
        k_life_72454)).
  f_life_74234 p_x_70898 s0_70896 s1_70896 s__r_g00_71908 s__r_g01_71908 set_flag_70897 x_1028 x_72457 k_life_72454 
  s__r_app00_72596 s__r_app01_72596 s__r_app1_72596 ->
      (ha2_2302 s__r_app00_72596 s__r_app01_72596 set_flag_70897 0 s__r_app1_72596 k_life_72454).
  f_main_74235 p_x_70942 s0_70940 s1_70940 set_flag_70941 x_2295 k_main_72628 x_72651 ->
      (life_2300 s0_70940 s1_70940 set_flag_70941 0 x_72651 k_main_72628).
  f_run_74228 p_x_70866 s0_70864 s1_70864 set_flag_70865 x_1025 f_1026 k_run_72342 s__r_f00_72432 s__r_f01_72432 
  s__r_f1_72432 ->
      (f_1026 s__r_f00_72432 s__r_f01_72432 set_flag_70865 0 s__r_f1_72432
       (f_run_74229 p_x_70866 s0_70864 s1_70864 s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 set_flag_70865 x_1025
        f_1026 k_run_72342)).
  f_run_74229 p_x_70866 s0_70864 s1_70864 s__r_f00_72432 s__r_f01_72432 s__r_f1_72432 set_flag_70865 x_1025 f_1026 
  k_run_72342 s__r_f00_72431 s__r_f01_72431 s__r_f1_72431 ->
      (run_1024 s__r_f1_72431 s__r_f00_72431 s__r_f01_72431 set_flag_70865 0 f_1026 k_run_72342).
  f_walk_74224 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046 x_72200 ->
      (sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200
       (f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046)).
  f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046 sp00_72199 sp01_72199 
  sp10_72199 when (x_1022 < 0) -> (k_walk_72046 sp00_72199 true x_1022).
  f_walk_74225 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 f_1023 k_walk_72046 sp00_72199 sp01_72199 
  sp10_72199 when (not (x_1022 < 0)) ->
      (f_1023 sp00_72199 true true sp10_72199 x_1022
       (f_walk_74226 p_x_70809 s0_70807 s1_70807 set_flag_70808 sp00_72199 sp01_72199 sp10_72199 x_1022 x_72200 f_1023
        k_walk_72046)).
  f_walk_74226 p_x_70809 s0_70807 s1_70807 set_flag_70808 sp00_72199 sp01_72199 sp10_72199 x_1022 x_72200 f_1023 
  k_walk_72046 s__r_f00_72192 s__r_f01_72192 s__r_f1_72192 ->
      (walk_1021 s__r_f1_72192 s__r_f00_72192 s__r_f01_72192 true sp10_72199 f_1023 k_walk_72046).
  f_walk_74227 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046 s__r_f00_72308 s__r_f01_72308 
  s__r_f1_72308 -> (walk_1021 s__r_f1_72308 s__r_f00_72308 s__r_f01_72308 true x_1022 f_1023 k_walk_72046).
  f_x_74222 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050 u_72084 ->
      (rand_int (f_x_74223 p_x_70809 s0_70807 s1_70807 set_flag_70808 u_72084 x_1022 k_walk_x_72050)).
  f_x_74223 p_x_70809 s0_70807 s1_70807 set_flag_70808 u_72084 x_1022 k_walk_x_72050 x_72072 ->
      (k_walk_x_72050 (x_72072 = 0)).
  fail_74243 b k -> {fail} => (k ()).
  g_1010 s0_70708 s1_70708 set_flag_70709 p_x_70710 i_1011 k_g_71749 ->
      (k_g_71749 s0_70708 s1_70708 (f_g_74221 i_1011 p_x_70710 s0_70708 s1_70708 set_flag_70709)).
  ha1_2305 s0_70761 s1_70761 set_flag_70762 p_x_70763 x_1018 k_ha1_71934 -> _|_.
  ha2_2302 s0_70783 s1_70783 set_flag_70784 p_x_70785 x_1020 k_ha2_71987 -> _|_.
  life_2300 s0_70896 s1_70896 set_flag_70897 p_x_70898 x_1028 k_life_72454 ->
      (rand_int (f_life_74230 p_x_70898 s0_70896 s1_70896 set_flag_70897 x_1028 k_life_72454)).
  main_1029 s0_70940 s1_70940 set_flag_70941 p_x_70942 x_2295 k_main_72628 ->
      (rand_int (f_main_74235 p_x_70942 s0_70940 s1_70940 set_flag_70941 x_2295 k_main_72628)).
  run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 when 
      (x_1025 < 0) -> (k_run_72342 s0_70864 true x_1025).
  run_1024 x_1025 s0_70864 s1_70864 set_flag_70865 p_x_70866 f_1026 k_run_72342 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_70864 true set_flag_70865 0 x_1025
       (f_run_74228 p_x_70866 s0_70864 s1_70864 set_flag_70865 x_1025 f_1026 k_run_72342)).
  sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 k_walk_sp_72114 when x_72200 ->
      (k_walk_sp_72114 false false x_1022).
  sp_70824 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 x_72200 k_walk_sp_72114 when 
      (not x_72200) -> (k_walk_sp_72114 s0_70807 s1_70807 p_x_70809).
  u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when s1_70807 ->
      (br_u_74239 (not s0_70807) p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067).
  u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_u_72067 when 
      (not s1_70807) -> (k_walk_x_u_72067 ()).
  walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when set_flag_70808 ->
      (x_70810 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022
       (f_walk_74224 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 f_1023 k_walk_72046)).
  walk_1021 x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046 when 
      (not set_flag_70808) ->
      (br_walk_74237 (x_1022 < 0) x_1022 s0_70807 s1_70807 set_flag_70808 p_x_70809 f_1023 k_walk_72046).
  x_70810 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050 ->
      (u_70815 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022
       (f_x_74222 p_x_70809 s0_70807 s1_70807 set_flag_70808 x_1022 k_walk_x_72050)).
Types:
  main_74220 : X
  br_f_life_74241 : (x_2:bool ->
                     int ->
                     bool ->
                     bool ->
                     x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[1 <= -x_7 || (not x_2); (not x_6)] -> X)
  br_u_74239 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  br_walk_74237 : (x_2:bool ->
                   int ->
                   bool ->
                   bool ->
                   bool ->
                   int[x_2] ->
                   (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                   (bool -> bool -> int -> X) -> X)
  f_life_74230 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  f_walk_74225 : (int ->
                  bool ->
                  bool ->
                  bool ->
                  int ->
                  bool ->
                  (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
                  (bool -> bool -> int -> X) -> bool -> bool -> int -> X)
  fail_74243 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_70824 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_70815 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (x_2:int ->
               bool ->
               bool ->
               x_5:bool ->
               int[1 <= -x_2; (not x_5)] ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(23-1) Abstracting ... DONE!

(23-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_78081:(bool * bool)) (set_flag_78082:bool) (p_x_78083:int) (i_1011:int) =
   (s_78081, 
    (fun (s_78086:(bool * bool)) (set_flag_78087:bool) (p_x_78088:int) (x_1012:int) -> (s_78086, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_78102:(bool * bool)) (set_flag_78103:bool) (
             p_x_78104:int) (i_1016:int) =
   let s__u_78109 = ((fst s_78102, true), ()) in
   let s_78110 = fst s__u_78109 in
   let u_2310 = snd s__u_78109 in
   let s__r_g_78115 = g_1010 s_78110 set_flag_78103 0 i_1016 in
   let s_78116 = fst s__r_g_78115 in
   let r_g_2442 = snd s__r_g_78115 in
   f_1014 x_1015 s_78116 set_flag_78103 0 r_g_2442
 in
 let rec ha1_2305 (s_78134:(bool * bool)) (set_flag_78135:bool) (p_x_78136:int) (x_1018:int) =
   let s__u_78141 = ((fst s_78134, true), ()) in
   let s_78142 = fst s__u_78141 in
   let u_2306 = snd s__u_78141 in
   let s__u_78147 = ((true, snd s_78142), ()) in
   let s_78148 = fst s__u_78147 in
   let u_2307 = snd s__u_78147 in
   ha1_2305 s_78148 set_flag_78135 0 x_1018
 in
 let rec ha2_2302 (s_78156:(bool * bool)) (set_flag_78157:bool) (p_x_78158:int) (x_1020:int) =
   if set_flag_78157
   then
     let x_78159 = let u_78164 = if snd s_78156 && not (fst s_78156) then assert false in
                   rand_int () = 0 in
     let sp_78173 = if x_78159 then ((false, false), (x_1020)) else (s_78156, (p_x_78158)) in
     let s_78160 = fst sp_78173 in
     let p_x_78162 = #0 (snd sp_78173) in
     let s__u_78178 = ((fst s_78160, true), ()) in
     let s_78179 = fst s__u_78178 in
     let u_2303 = snd s__u_78178 in
     let s__u_78184 = ((true, snd s_78179), ()) in
     let s_78185 = fst s__u_78184 in
     let u_2304 = snd s__u_78184 in
     ha2_2302 s_78185 true p_x_78162 x_1020
   else
     let sp_78190 = if true then ((false, false), (x_1020)) else (s_78156, (p_x_78158)) in
     let s_78191 = fst sp_78190 in
     let p_x_78193 = #0 (snd sp_78190) in
     let s__u_78194 = ((fst s_78191, true), ()) in
     let s_78195 = fst s__u_78194 in
     let u_78196 = snd s__u_78194 in
     let s__u_78197 = ((true, snd s_78195), ()) in
     let s_78198 = fst s__u_78197 in
     let u_78199 = snd s__u_78197 in
     ha2_2302 s_78198 true p_x_78193 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_78207:(bool * bool)) (set_flag_78208:bool) (
                  p_x_78209:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_78214 = ((fst s_78207, true), ()) in
   let s_78215 = fst s__u_78214 in
   let u_2180 = snd s__u_78214 in
   if x_1022 < 0
   then
     (s_78215, x_1022)
   else
     let s__r_f_78220 = f_1023 s_78215 set_flag_78208 0 x_1022 in
     let s_78221 = fst s__r_f_78220 in
     let r_f_2443 = snd s__r_f_78220 in
     walk_1021 r_f_2443 s_78221 set_flag_78208 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_78237:(bool * bool)) (set_flag_78238:bool) (
                 p_x_78239:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_78244 = ((fst s_78237, true), ()) in
   let s_78245 = fst s__u_78244 in
   let u_2234 = snd s__u_78244 in
   if x_1025 < 0
   then
     (s_78245, x_1025)
   else
     let s__r_f_78250 = f_1026 s_78245 set_flag_78238 0 x_1025 in
     let s_78251 = fst s__r_f_78250 in
     let r_f_2444 = snd s__r_f_78250 in
     let s__r_f_78254 = f_1026 s_78251 set_flag_78238 0 r_f_2444 in
     let s_78255 = fst s__r_f_78254 in
     let r_f_2445 = snd s__r_f_78254 in
     run_1024 r_f_2445 s_78255 set_flag_78238 0 f_1026
 in
 let rec life_2300 (s_78269:(bool * bool)) (set_flag_78270:bool) (p_x_78271:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_78276 = ((fst s_78269, true), ()) in
     let s_78277 = fst s__u_78276 in
     let u_2301 = snd s__u_78276 in
     if x_1028 < 0
     then
       let s__r_app_78288 = app_2308 walk_1021 x_1028 s_78277 set_flag_78270 0 1 in
       let s_78289 = fst s__r_app_78288 in
       let r_app_2447 = snd s__r_app_78288 in
       ha1_2305 s_78289 set_flag_78270 0 r_app_2447
     else
       let s__r_app_78302 = app_2308 run_1024 x_1028 s_78277 set_flag_78270 0 1 in
       let s_78303 = fst s__r_app_78302 in
       let r_app_2446 = snd s__r_app_78302 in
       ha2_2302 s_78303 set_flag_78270 0 r_app_2446
   else
     life_2300 s_78269 set_flag_78270 0 x_1028
 in
 let main_1029 (s_78313:(bool * bool)) (set_flag_78314:bool) (p_x_78315:int) (x_2295:unit) =
   life_2300 s_78313 set_flag_78314 0 (rand_int ())
 in
 let s__r_main_78320 = main_1029 (false, false) false 0 () in
 let s_78321 = fst s__r_main_78320 in
 let r_main_2448 = snd s__r_main_78320 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_78081:(bool * bool)) (set_flag_78082:bool) (p_x_78083:int) (i_1011:int) =
   (s_78081, 
    (fun (s_78086:(bool * bool)) (set_flag_78087:bool) (p_x_78088:int) (x_1012:int) -> (s_78086, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_78102:(bool * bool)) (set_flag_78103:bool) (
             p_x_78104:int) (i_1016:int) =
   let s__u_78109 = ((fst s_78102, true), ()) in
   let s_78110 = fst s__u_78109 in
   let s__r_g_78115 = g_1010 s_78110 set_flag_78103 0 i_1016 in
   let s_78116 = fst s__r_g_78115 in
   let r_g_2442 = snd s__r_g_78115 in
   f_1014 x_1015 s_78116 set_flag_78103 0 r_g_2442
 in
 let rec ha1_2305 (s_78134:(bool * bool)) (set_flag_78135:bool) (p_x_78136:int) (x_1018:int) =
   let s__u_78141 = ((fst s_78134, true), ()) in
   let s_78142 = fst s__u_78141 in
   let s__u_78147 = ((true, snd s_78142), ()) in
   let s_78148 = fst s__u_78147 in
   ha1_2305 s_78148 set_flag_78135 0 x_1018
 in
 let rec ha2_2302 (s_78156:(bool * bool)) (set_flag_78157:bool) (p_x_78158:int) (x_1020:int) =
   if set_flag_78157
   then
     let x_78159 = let u_78164 = if snd s_78156 && not (fst s_78156) then assert false in
                   rand_int () = 0 in
     let sp_78173 = if x_78159 then ((false, false), (x_1020)) else (s_78156, (p_x_78158)) in
     let s_78160 = fst sp_78173 in
     let p_x_78162 = #0 (snd sp_78173) in
     let s__u_78178 = ((fst s_78160, true), ()) in
     let s_78179 = fst s__u_78178 in
     let s__u_78184 = ((true, snd s_78179), ()) in
     let s_78185 = fst s__u_78184 in
     ha2_2302 s_78185 true p_x_78162 x_1020
   else
     let sp_78190 = if true then ((false, false), (x_1020)) else (s_78156, (p_x_78158)) in
     let s_78191 = fst sp_78190 in
     let p_x_78193 = #0 (snd sp_78190) in
     let s__u_78194 = ((fst s_78191, true), ()) in
     let s_78195 = fst s__u_78194 in
     let s__u_78197 = ((true, snd s_78195), ()) in
     let s_78198 = fst s__u_78197 in
     ha2_2302 s_78198 true p_x_78193 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_78207:(bool * bool)) (set_flag_78208:bool) (
                  p_x_78209:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_78214 = ((fst s_78207, true), ()) in
   let s_78215 = fst s__u_78214 in
   if x_1022 < 0
   then
     (s_78215, x_1022)
   else
     let s__r_f_78220 = f_1023 s_78215 set_flag_78208 0 x_1022 in
     let s_78221 = fst s__r_f_78220 in
     let r_f_2443 = snd s__r_f_78220 in
     walk_1021 r_f_2443 s_78221 set_flag_78208 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_78237:(bool * bool)) (set_flag_78238:bool) (
                 p_x_78239:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_78244 = ((fst s_78237, true), ()) in
   let s_78245 = fst s__u_78244 in
   if x_1025 < 0
   then
     (s_78245, x_1025)
   else
     let s__r_f_78250 = f_1026 s_78245 set_flag_78238 0 x_1025 in
     let s_78251 = fst s__r_f_78250 in
     let r_f_2444 = snd s__r_f_78250 in
     let s__r_f_78254 = f_1026 s_78251 set_flag_78238 0 r_f_2444 in
     let s_78255 = fst s__r_f_78254 in
     let r_f_2445 = snd s__r_f_78254 in
     run_1024 r_f_2445 s_78255 set_flag_78238 0 f_1026
 in
 let rec life_2300 (s_78269:(bool * bool)) (set_flag_78270:bool) (p_x_78271:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_78276 = ((fst s_78269, true), ()) in
     let s_78277 = fst s__u_78276 in
     if x_1028 < 0
     then
       let s__r_app_78288 = app_2308 walk_1021 x_1028 s_78277 set_flag_78270 0 1 in
       let s_78289 = fst s__r_app_78288 in
       let r_app_2447 = snd s__r_app_78288 in
       ha1_2305 s_78289 set_flag_78270 0 r_app_2447
     else
       let s__r_app_78302 = app_2308 run_1024 x_1028 s_78277 set_flag_78270 0 1 in
       let s_78303 = fst s__r_app_78302 in
       let r_app_2446 = snd s__r_app_78302 in
       ha2_2302 s_78303 set_flag_78270 0 r_app_2446
   else
     life_2300 s_78269 set_flag_78270 0 x_1028
 in
 let main_1029 (s_78313:(bool * bool)) (set_flag_78314:bool) (p_x_78315:int) (x_2295:unit) =
   life_2300 s_78313 set_flag_78314 0 (rand_int ())
 in
 let s__r_main_78320 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_78320 in
 r_main_2448

###inline:
 let g_1010 (s_78081:(bool * bool)) (set_flag_78082:bool) (p_x_78083:int) (i_1011:int) =
   (s_78081, 
    (fun (s_78086:(bool * bool)) (set_flag_78087:bool) (p_x_78088:int) (x_1012:int) -> (s_78086, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_78102:(bool * bool)) (set_flag_78103:bool) (
             p_x_78104:int) (i_1016:int) =
   let s__u_78109 = ((fst s_78102, true), ()) in
   let s__r_g_78115 = g_1010 (fst s__u_78109) set_flag_78103 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_78115) set_flag_78103 0 (snd s__r_g_78115)
 in
 let rec ha1_2305 (s_78134:(bool * bool)) (set_flag_78135:bool) (p_x_78136:int) (x_1018:int) =
   let s__u_78141 = ((fst s_78134, true), ()) in
   let s__u_78147 = ((true, snd (fst s__u_78141)), ()) in
   ha1_2305 (fst s__u_78147) set_flag_78135 0 x_1018
 in
 let rec ha2_2302 (s_78156:(bool * bool)) (set_flag_78157:bool) (p_x_78158:int) (x_1020:int) =
   if set_flag_78157
   then
     let x_78159 = let u_78164 = if snd s_78156 && not (fst s_78156) then assert false in
                   rand_int () = 0 in
     let sp_78173 = if x_78159 then ((false, false), (x_1020)) else (s_78156, (p_x_78158)) in
     let p_x_78162 = #0 (snd sp_78173) in
     let s__u_78178 = ((fst (fst sp_78173), true), ()) in
     let s__u_78184 = ((true, snd (fst s__u_78178)), ()) in
     ha2_2302 (fst s__u_78184) true p_x_78162 x_1020
   else
     let sp_78190 = if true then ((false, false), (x_1020)) else (s_78156, (p_x_78158)) in
     let p_x_78193 = #0 (snd sp_78190) in
     let s__u_78194 = ((fst (fst sp_78190), true), ()) in
     let s__u_78197 = ((true, snd (fst s__u_78194)), ()) in
     ha2_2302 (fst s__u_78197) true p_x_78193 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_78207:(bool * bool)) (set_flag_78208:bool) (
                  p_x_78209:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_78214 = ((fst s_78207, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_78214, x_1022)
   else
     let s__r_f_78220 = f_1023 (fst s__u_78214) set_flag_78208 0 x_1022 in
     walk_1021 (snd s__r_f_78220) (fst s__r_f_78220) set_flag_78208 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_78237:(bool * bool)) (set_flag_78238:bool) (
                 p_x_78239:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_78244 = ((fst s_78237, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_78244, x_1025)
   else
     let s__r_f_78250 = f_1026 (fst s__u_78244) set_flag_78238 0 x_1025 in
     let s__r_f_78254 = f_1026 (fst s__r_f_78250) set_flag_78238 0 (snd s__r_f_78250) in
     run_1024 (snd s__r_f_78254) (fst s__r_f_78254) set_flag_78238 0 f_1026
 in
 let rec life_2300 (s_78269:(bool * bool)) (set_flag_78270:bool) (p_x_78271:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_78276 = ((fst s_78269, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_78288 = app_2308 walk_1021 x_1028 (fst s__u_78276) set_flag_78270 0 1 in
       ha1_2305 (fst s__r_app_78288) set_flag_78270 0 (snd s__r_app_78288)
     else
       let s__r_app_78302 = app_2308 run_1024 x_1028 (fst s__u_78276) set_flag_78270 0 1 in
       ha2_2302 (fst s__r_app_78302) set_flag_78270 0 (snd s__r_app_78302)
   else
     life_2300 s_78269 set_flag_78270 0 x_1028
 in
 let main_1029 (s_78313:(bool * bool)) (set_flag_78314:bool) (p_x_78315:int) (x_2295:unit) =
   life_2300 s_78313 set_flag_78314 0 (rand_int ())
 in
 let s__r_main_78320 = main_1029 (false, false) false 0 () in
 snd s__r_main_78320

###CPS:
 (let g_1010 s_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 =
    k_g_79077
      (s_78081, (fun s_78086 set_flag_78087 p_x_78088 x_1012 k_g_79097 -> k_g_79097 (s_78086, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_78102 set_flag_78103 p_x_78104 i_1016 k_app_79132 =
    let s__u_78109 k_app_s__u_79136 = k_app_s__u_79136 ((fst s_78102, true), ()) in
    s__u_78109
      (fun s__u_79237 ->
         let s__r_g_78115 k_app_s__r_g_79168 = (g_1010 (fst s__u_79237) set_flag_78103 0) i_1016 k_app_s__r_g_79168 in
         s__r_g_78115
           (fun s__r_g_79236 -> (f_1014 x_1015 (fst s__r_g_79236) set_flag_78103 0) (snd s__r_g_79236) k_app_79132))
  in
  let rec ha1_2305 s_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 =
    let s__u_78141 k_ha1_s__u_79266 = k_ha1_s__u_79266 ((fst s_78134, true), ()) in
    s__u_78141
      (fun s__u_79305 ->
         let s__u_78147 k_ha1_s__u_79280 = k_ha1_s__u_79280 ((true, snd (fst s__u_79305)), ()) in
         s__u_78147 (fun s__u_79304 -> (ha1_2305 (fst s__u_79304) set_flag_78135 0) x_1018 k_ha1_79262))
  in
  let rec ha2_2302 s_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 =
    if set_flag_78157
    then
      let x_78159 k_ha2_x_79319 =
        let u_78164 k_ha2_x_u_79336 =
          if snd s_78156
          then
            if not (fst s_78156) then <|fail|> () k_ha2_x_u_79336 else k_ha2_x_u_79336 ()
          else
            k_ha2_x_u_79336 ()
        in
        u_78164 (fun u_79353 -> rand_int_cps () (fun x_79341 -> k_ha2_x_79319 (x_79341 = 0)))
      in
      x_78159
        (fun x_79433 ->
           let sp_78173 k_ha2_sp_79383 =
             if x_79433
             then
               k_ha2_sp_79383 ((false, false), (x_1020))
             else
               k_ha2_sp_79383 (s_78156, (p_x_78158))
           in
           sp_78173
             (fun sp_79432 ->
                let s__u_78178 k_ha2_s__u_79391 = k_ha2_s__u_79391 ((fst (fst sp_79432), true), ()) in
                s__u_78178
                  (fun s__u_79430 ->
                     let s__u_78184 k_ha2_s__u_79405 = k_ha2_s__u_79405 ((true, snd (fst s__u_79430)), ()) in
                     s__u_78184
                       (fun s__u_79429 ->
                          (ha2_2302 (fst s__u_79429) true (#0 (snd sp_79432))) x_1020 k_ha2_79315))))
    else
      let sp_78190 k_ha2_sp_79463 = k_ha2_sp_79463 ((false, false), (x_1020)) in
      sp_78190
        (fun sp_79512 ->
           let s__u_78194 k_ha2_s__u_79471 = k_ha2_s__u_79471 ((fst (fst sp_79512), true), ()) in
           s__u_78194
             (fun s__u_79510 ->
                let s__u_78197 k_ha2_s__u_79485 = k_ha2_s__u_79485 ((true, snd (fst s__u_79510)), ()) in
                s__u_78197
                  (fun s__u_79509 -> (ha2_2302 (fst s__u_79509) true (#0 (snd sp_79512))) x_1020 k_ha2_79315)))
  in
  let rec walk_1021 x_1022 s_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 =
    let s__u_78214 k_walk_s__u_79536 = k_walk_s__u_79536 ((fst s_78207, true), ()) in
    s__u_78214
      (fun s__u_79611 ->
         if x_1022 < 0
         then
           k_walk_79532 (fst s__u_79611, x_1022)
         else
           let s__r_f_78220 k_walk_s__r_f_79562 =
             (f_1023 (fst s__u_79611) set_flag_78208 0) x_1022 k_walk_s__r_f_79562
           in
           s__r_f_78220
             (fun s__r_f_79606 ->
                (walk_1021 (snd s__r_f_79606) (fst s__r_f_79606) set_flag_78208 0) f_1023 k_walk_79532))
  in
  let rec run_1024 x_1025 s_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 =
    let s__u_78244 k_run_s__u_79638 = k_run_s__u_79638 ((fst s_78237, true), ()) in
    s__u_78244
      (fun s__u_79729 ->
         if x_1025 < 0
         then
           k_run_79634 (fst s__u_79729, x_1025)
         else
           let s__r_f_78250 k_run_s__r_f_79664 =
             (f_1026 (fst s__u_79729) set_flag_78238 0) x_1025 k_run_s__r_f_79664
           in
           s__r_f_78250
             (fun s__r_f_79724 ->
                let s__r_f_78254 k_run_s__r_f_79679 =
                  (f_1026 (fst s__r_f_79724) set_flag_78238 0) (snd s__r_f_79724) k_run_s__r_f_79679
                in
                s__r_f_78254
                  (fun s__r_f_79723 ->
                     (run_1024 (snd s__r_f_79723) (fst s__r_f_79723) set_flag_78238 0) f_1026 k_run_79634)))
  in
  let rec life_2300 s_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 =
    rand_int_cps
      () 
      (fun x_79749 ->
         if x_79749 > 0
         then
           let s__u_78276 k_life_s__u_79764 = k_life_s__u_79764 ((fst s_78269, true), ()) in
           s__u_78276
             (fun s__u_79893 ->
                if x_1028 < 0
                then
                  let s__r_app_78288 k_life_s__r_app_79812 =
                    (app_2308 walk_1021 x_1028 (fst s__u_79893) set_flag_78270 0) 1 k_life_s__r_app_79812
                  in
                  s__r_app_78288
                    (fun s__r_app_79831 ->
                       (ha1_2305 (fst s__r_app_79831) set_flag_78270 0) (snd s__r_app_79831) k_life_79746)
                else
                  let s__r_app_78302 k_life_s__r_app_79869 =
                    (app_2308 run_1024 x_1028 (fst s__u_79893) set_flag_78270 0) 1 k_life_s__r_app_79869
                  in
                  s__r_app_78302
                    (fun s__r_app_79888 ->
                       (ha2_2302 (fst s__r_app_79888) set_flag_78270 0) (snd s__r_app_79888) k_life_79746))
         else
           (life_2300 s_78269 set_flag_78270 0) x_1028 k_life_79746)
  in
  let main_1029 s_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 =
    rand_int_cps () (fun x_79943 -> (life_2300 s_78313 set_flag_78314 0) x_79943 k_main_79920)
  in
  let s__r_main_78320 k_s__r_main_80004 = (((main_1029 (false, false)) false) 0) () k_s__r_main_80004 in
  s__r_main_78320 (fun s__r_main_80010 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_78081 s1_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 =
    k_g_79077
      s0_78081 s1_78081 
      (fun s0_78086 s1_78086 set_flag_78087 p_x_78088 x_1012 k_g_79097 ->
         k_g_79097 s0_78086 s1_78086 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_78134 s1_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 =
    ha1_2305 true true set_flag_78135 0 x_1018 k_ha1_79262
  in
  let rec ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 =
    if set_flag_78157
    then
      let x_78159 k_ha2_x_79319 =
        let u_78164 k_ha2_x_u_79336 =
          if s1_78156
          then
            if not s0_78156 then <|fail|> () k_ha2_x_u_79336 else k_ha2_x_u_79336 ()
          else
            k_ha2_x_u_79336 ()
        in
        u_78164 (fun u_79353 -> rand_int_cps () (fun x_79341 -> k_ha2_x_79319 (x_79341 = 0)))
      in
      x_78159
        (fun x_79433 ->
           let sp_78173 k_ha2_sp_79383 =
             if x_79433
             then
               k_ha2_sp_79383 false false x_1020
             else
               k_ha2_sp_79383 s0_78156 s1_78156 p_x_78158
           in
           sp_78173
             (fun sp00_79432 sp01_79432 sp10_79432 -> ha2_2302 true true true sp10_79432 x_1020 k_ha2_79315))
    else
      ha2_2302 true true true x_1020 x_1020 k_ha2_79315
  in
  let rec walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 =
    if x_1022 < 0
    then
      k_walk_79532 s0_78207 true x_1022
    else
      f_1023
        s0_78207 true set_flag_78208 0 x_1022 
        (fun s__r_f00_79606 s__r_f01_79606 s__r_f1_79606 ->
           walk_1021 s__r_f1_79606 s__r_f00_79606 s__r_f01_79606 set_flag_78208 0 f_1023 k_walk_79532)
  in
  let rec run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 =
    if x_1025 < 0
    then
      k_run_79634 s0_78237 true x_1025
    else
      f_1026
        s0_78237 true set_flag_78238 0 x_1025 
        (fun s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 ->
           f_1026
             s__r_f00_79724 s__r_f01_79724 set_flag_78238 0 s__r_f1_79724 
             (fun s__r_f00_79723 s__r_f01_79723 s__r_f1_79723 ->
                run_1024 s__r_f1_79723 s__r_f00_79723 s__r_f01_79723 set_flag_78238 0 f_1026 k_run_79634))
  in
  let rec life_2300 s0_78269 s1_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 =
    rand_int_cps
      () 
      (fun x_79749 ->
         if x_79749 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_78269 true set_flag_78270 0 1 
               (fun s__r_g00_79236 s__r_g01_79236 s__r_g1_79236 ->
                  walk_1021
                    x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 
                    0 s__r_g1_79236 
                    (fun s__r_app00_79831 s__r_app01_79831 s__r_app1_79831 ->
                       ha1_2305 s__r_app00_79831 s__r_app01_79831 set_flag_78270 0 s__r_app1_79831 k_life_79746))
           else
             g_1010
               s0_78269 true set_flag_78270 0 1 
               (fun s__r_g00_79236 s__r_g01_79236 s__r_g1_79236 ->
                  run_1024
                    x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 
                    0 s__r_g1_79236 
                    (fun s__r_app00_79888 s__r_app01_79888 s__r_app1_79888 ->
                       ha2_2302 s__r_app00_79888 s__r_app01_79888 set_flag_78270 0 s__r_app1_79888 k_life_79746))
         else
           life_2300 s0_78269 s1_78269 set_flag_78270 0 x_1028 k_life_79746)
  in
  let main_1029 s0_78313 s1_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 =
    rand_int_cps () (fun x_79943 -> life_2300 s0_78313 s1_78313 set_flag_78314 0 x_79943 k_main_79920)
  in
  main_1029 false false false 0 () (fun s__r_main00_80010 s__r_main01_80010 s__r_main1_80010 -> {end}) # 
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_78081 s1_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 =
    k_g_79077
      s0_78081 s1_78081 
      (fun s0_78086 s1_78086 set_flag_78087 p_x_78088 x_1012 k_g_79097 ->
         k_g_79097 s0_78086 s1_78086 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_78134 s1_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 = _|_ in
  let rec ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 =
    if set_flag_78157
    then
      let x_78159 k_ha2_x_79319 =
        let u_78164 k_ha2_x_u_79336 =
          if s1_78156
          then
            if not s0_78156 then <|fail|> () k_ha2_x_u_79336 else k_ha2_x_u_79336 ()
          else
            k_ha2_x_u_79336 ()
        in
        u_78164 (fun u_79353 -> rand_int_cps () (fun x_79341 -> k_ha2_x_79319 (x_79341 = 0)))
      in
      x_78159
        (fun x_79433 ->
           let sp_78173 k_ha2_sp_79383 =
             if x_79433
             then
               k_ha2_sp_79383 false false x_1020
             else
               k_ha2_sp_79383 s0_78156 s1_78156 p_x_78158
           in
           sp_78173
             (fun sp00_79432 sp01_79432 sp10_79432 -> ha2_2302 true true true sp10_79432 x_1020 k_ha2_79315))
    else
      ha2_2302 true true true x_1020 x_1020 k_ha2_79315
  in
  let rec walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 =
    if x_1022 < 0
    then
      k_walk_79532 s0_78207 true x_1022
    else
      f_1023
        s0_78207 true set_flag_78208 0 x_1022 
        (fun s__r_f00_79606 s__r_f01_79606 s__r_f1_79606 ->
           walk_1021 s__r_f1_79606 s__r_f00_79606 s__r_f01_79606 set_flag_78208 0 f_1023 k_walk_79532)
  in
  let rec run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 =
    if x_1025 < 0
    then
      k_run_79634 s0_78237 true x_1025
    else
      f_1026
        s0_78237 true set_flag_78238 0 x_1025 
        (fun s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 ->
           f_1026
             s__r_f00_79724 s__r_f01_79724 set_flag_78238 0 s__r_f1_79724 
             (fun s__r_f00_79723 s__r_f01_79723 s__r_f1_79723 ->
                run_1024 s__r_f1_79723 s__r_f00_79723 s__r_f01_79723 set_flag_78238 0 f_1026 k_run_79634))
  in
  let rec life_2300 s0_78269 s1_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 =
    rand_int_cps
      () 
      (fun x_79749 ->
         if x_79749 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_78269 true set_flag_78270 0 1 
               (fun s__r_g00_79236 s__r_g01_79236 s__r_g1_79236 ->
                  walk_1021
                    x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 
                    0 s__r_g1_79236 
                    (fun s__r_app00_79831 s__r_app01_79831 s__r_app1_79831 ->
                       ha1_2305 s__r_app00_79831 s__r_app01_79831 set_flag_78270 0 s__r_app1_79831 k_life_79746))
           else
             g_1010
               s0_78269 true set_flag_78270 0 1 
               (fun s__r_g00_79236 s__r_g01_79236 s__r_g1_79236 ->
                  run_1024
                    x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 
                    0 s__r_g1_79236 
                    (fun s__r_app00_79888 s__r_app01_79888 s__r_app1_79888 ->
                       ha2_2302 s__r_app00_79888 s__r_app01_79888 set_flag_78270 0 s__r_app1_79888 k_life_79746))
         else
           life_2300 s0_78269 s1_78269 set_flag_78270 0 x_1028 k_life_79746)
  in
  let main_1029 s0_78313 s1_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 =
    rand_int_cps () (fun x_79943 -> life_2300 s0_78313 s1_78313 set_flag_78314 0 x_79943 k_main_79920)
  in
  main_1029 false false false 0 () (fun s__r_main00_80010 s__r_main01_80010 s__r_main1_80010 -> {end}) # 
  [ACPS])

Program with abstraction types (CEGAR-cycle 24)::
Main: main_81471
  main_81471 -> (main_1029 false false false 0 () f_81486).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when b_81490 ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not b_81490) ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when b_81488 ->
      (fail_81491 true k_ha2_x_u_79336).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not b_81488) -> (k_ha2_x_u_79336 ()).
  f_81486 s__r_main00_80010 s__r_main01_80010 s__r_main1_80010 -> end.
  f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082 s0_78086 s1_78086 set_flag_78087 p_x_78088 x_1012 
  k_g_79097 -> (k_g_79097 s0_78086 s1_78086 (x_1012 - i_1011)).
  f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315 x_79433 ->
      (sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433
       (f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315)).
  f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315 sp00_79432 sp01_79432 sp10_79432 ->
      (ha2_2302 true true true sp10_79432 x_1020 k_ha2_79315).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (x_79749 > 0) ->
      (br_f_life_81489 (x_1028 < 0) p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not (x_79749 > 0)) -> (life_2300 s0_78269 s1_78269 set_flag_78270 0 x_1028 k_life_79746).
  f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (walk_1021 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79831 s__r_app01_79831 s__r_app1_79831 ->
      (ha1_2305 s__r_app00_79831 s__r_app01_79831 set_flag_78270 0 s__r_app1_79831 k_life_79746).
  f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (run_1024 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79888 s__r_app01_79888 s__r_app1_79888 ->
      (ha2_2302 s__r_app00_79888 s__r_app01_79888 set_flag_78270 0 s__r_app1_79888 k_life_79746).
  f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920 x_79943 ->
      (life_2300 s0_78313 s1_78313 set_flag_78314 0 x_79943 k_main_79920).
  f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634 s__r_f00_79724 s__r_f01_79724 
  s__r_f1_79724 ->
      (f_1026 s__r_f00_79724 s__r_f01_79724 set_flag_78238 0 s__r_f1_79724
       (f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025
        f_1026 k_run_79634)).
  f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025 f_1026 
  k_run_79634 s__r_f00_79723 s__r_f01_79723 s__r_f1_79723 ->
      (run_1024 s__r_f1_79723 s__r_f00_79723 s__r_f01_79723 set_flag_78238 0 f_1026 k_run_79634).
  f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532 s__r_f00_79606 s__r_f01_79606 
  s__r_f1_79606 -> (walk_1021 s__r_f1_79606 s__r_f00_79606 s__r_f01_79606 set_flag_78208 0 f_1023 k_walk_79532).
  f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 u_79353 ->
      (rand_int (f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319)).
  f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319 x_79341 ->
      (k_ha2_x_79319 (x_79341 = 0)).
  fail_81491 b k -> {fail} => (k ()).
  g_1010 s0_78081 s1_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 ->
      (k_g_79077 s0_78081 s1_78081 (f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082)).
  ha1_2305 s0_78134 s1_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 -> _|_.
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when set_flag_78157 ->
      (x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315)).
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when 
      (not set_flag_78157) -> (ha2_2302 true true true x_1020 x_1020 k_ha2_79315).
  life_2300 s0_78269 s1_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 ->
      (rand_int (f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746)).
  main_1029 s0_78313 s1_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 ->
      (rand_int (f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920)).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (x_1025 < 0) -> (k_run_79634 s0_78237 true x_1025).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_78237 true set_flag_78238 0 x_1025
       (f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634)).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when x_79433 ->
      (k_ha2_sp_79383 false false x_1020).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when 
      (not x_79433) -> (k_ha2_sp_79383 s0_78156 s1_78156 p_x_78158).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when s1_78156 ->
      (br_u_81487 (not s0_78156) p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not s1_78156) -> (k_ha2_x_u_79336 ()).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (x_1022 < 0) -> (k_walk_79532 s0_78207 true x_1022).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_78207 true set_flag_78208 0 x_1022
       (f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532)).
  x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 ->
      (u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319)).
Types:
  main_81471 : X
  br_f_life_81489 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_81487 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_81480 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_81491 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha2_2302 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_78173 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_78164 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(24-1) Abstracting ... DONE!

(24-2) Checking HORS ... DONE!

Error trace::
  main_81471 ... --> 
  main_1029 ... --> 
  f_main_81485 ... --> 
  life_2300 ... --> 
  f_life_81480 [1/2] ... --> 
  br_f_life_81489 [2/2] ... --> 
  g_1010 ... --> 
  f_life_81483 ... --> 
  run_1024 [1/2] ... --> 
  f_life_81484 ... --> 
  ha2_2302 [1/2] ... --> 
  x_78159 ... --> 
  u_78164 [1/2] ... --> 
  br_u_81487 [1/2] ... --> 
  fail_81491 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0

(24-3) Checking counterexample ... DONE!

(24-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 25)::
Main: main_81471
  main_81471 -> (main_1029 false false false 0 () f_81486).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when b_81490 ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not b_81490) ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when b_81488 ->
      (fail_81491 true k_ha2_x_u_79336).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not b_81488) -> (k_ha2_x_u_79336 ()).
  f_81486 s__r_main00_80010 s__r_main01_80010 s__r_main1_80010 -> end.
  f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082 s0_78086 s1_78086 set_flag_78087 p_x_78088 x_1012 
  k_g_79097 -> (k_g_79097 s0_78086 s1_78086 (x_1012 - i_1011)).
  f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315 x_79433 ->
      (sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433
       (f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315)).
  f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315 sp00_79432 sp01_79432 sp10_79432 ->
      (ha2_2302 true true true sp10_79432 x_1020 k_ha2_79315).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (x_79749 > 0) ->
      (br_f_life_81489 (x_1028 < 0) p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not (x_79749 > 0)) -> (life_2300 s0_78269 s1_78269 set_flag_78270 0 x_1028 k_life_79746).
  f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (walk_1021 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79831 s__r_app01_79831 s__r_app1_79831 ->
      (ha1_2305 s__r_app00_79831 s__r_app01_79831 set_flag_78270 0 s__r_app1_79831 k_life_79746).
  f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (run_1024 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79888 s__r_app01_79888 s__r_app1_79888 ->
      (ha2_2302 s__r_app00_79888 s__r_app01_79888 set_flag_78270 0 s__r_app1_79888 k_life_79746).
  f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920 x_79943 ->
      (life_2300 s0_78313 s1_78313 set_flag_78314 0 x_79943 k_main_79920).
  f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634 s__r_f00_79724 s__r_f01_79724 
  s__r_f1_79724 ->
      (f_1026 s__r_f00_79724 s__r_f01_79724 set_flag_78238 0 s__r_f1_79724
       (f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025
        f_1026 k_run_79634)).
  f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025 f_1026 
  k_run_79634 s__r_f00_79723 s__r_f01_79723 s__r_f1_79723 ->
      (run_1024 s__r_f1_79723 s__r_f00_79723 s__r_f01_79723 set_flag_78238 0 f_1026 k_run_79634).
  f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532 s__r_f00_79606 s__r_f01_79606 
  s__r_f1_79606 -> (walk_1021 s__r_f1_79606 s__r_f00_79606 s__r_f01_79606 set_flag_78208 0 f_1023 k_walk_79532).
  f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 u_79353 ->
      (rand_int (f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319)).
  f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319 x_79341 ->
      (k_ha2_x_79319 (x_79341 = 0)).
  fail_81491 b k -> {fail} => (k ()).
  g_1010 s0_78081 s1_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 ->
      (k_g_79077 s0_78081 s1_78081 (f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082)).
  ha1_2305 s0_78134 s1_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 -> _|_.
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when set_flag_78157 ->
      (x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315)).
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when 
      (not set_flag_78157) -> (ha2_2302 true true true x_1020 x_1020 k_ha2_79315).
  life_2300 s0_78269 s1_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 ->
      (rand_int (f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746)).
  main_1029 s0_78313 s1_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 ->
      (rand_int (f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920)).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (x_1025 < 0) -> (k_run_79634 s0_78237 true x_1025).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_78237 true set_flag_78238 0 x_1025
       (f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634)).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when x_79433 ->
      (k_ha2_sp_79383 false false x_1020).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when 
      (not x_79433) -> (k_ha2_sp_79383 s0_78156 s1_78156 p_x_78158).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when s1_78156 ->
      (br_u_81487 (not s0_78156) p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not s1_78156) -> (k_ha2_x_u_79336 ()).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (x_1022 < 0) -> (k_walk_79532 s0_78207 true x_1022).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_78207 true set_flag_78208 0 x_1022
       (f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532)).
  x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 ->
      (u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319)).
Types:
  main_81471 : X
  br_f_life_81489 : (x_2:bool ->
                     int -> bool -> bool -> bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[x_7 >= 0 || x_2] -> X)
  br_u_81487 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_81480 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_81491 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha2_2302 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              bool ->
              bool ->
              int[x_2 >= 0] ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_78173 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_78164 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(25-1) Abstracting ... DONE!

(25-2) Checking HORS ... DONE!

Error trace::
  main_81471 ... --> 
  main_1029 ... --> 
  f_main_81485 ... --> 
  life_2300 ... --> 
  f_life_81480 [1/2] ... --> 
  br_f_life_81489 [2/2] ... --> 
  g_1010 ... --> 
  f_life_81483 ... --> 
  run_1024 [2/2] ... --> 
  f_g_81472 ... --> 
  f_run_81478 ... --> 
  f_g_81472 ... --> 
  f_run_81479 ... --> 
  run_1024 [1/2] ... --> 
  f_life_81484 ... --> 
  ha2_2302 [1/2] ... --> 
  x_78159 ... --> 
  u_78164 [1/2] ... --> 
  br_u_81487 [1/2] ... --> 
  fail_81491 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0

(25-3) Checking counterexample ... DONE!

(25-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 26)::
Main: main_81471
  main_81471 -> (main_1029 false false false 0 () f_81486).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when b_81490 ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not b_81490) ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when b_81488 ->
      (fail_81491 true k_ha2_x_u_79336).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not b_81488) -> (k_ha2_x_u_79336 ()).
  f_81486 s__r_main00_80010 s__r_main01_80010 s__r_main1_80010 -> end.
  f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082 s0_78086 s1_78086 set_flag_78087 p_x_78088 x_1012 
  k_g_79097 -> (k_g_79097 s0_78086 s1_78086 (x_1012 - i_1011)).
  f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315 x_79433 ->
      (sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433
       (f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315)).
  f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315 sp00_79432 sp01_79432 sp10_79432 ->
      (ha2_2302 true true true sp10_79432 x_1020 k_ha2_79315).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (x_79749 > 0) ->
      (br_f_life_81489 (x_1028 < 0) p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not (x_79749 > 0)) -> (life_2300 s0_78269 s1_78269 set_flag_78270 0 x_1028 k_life_79746).
  f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (walk_1021 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79831 s__r_app01_79831 s__r_app1_79831 ->
      (ha1_2305 s__r_app00_79831 s__r_app01_79831 set_flag_78270 0 s__r_app1_79831 k_life_79746).
  f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (run_1024 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79888 s__r_app01_79888 s__r_app1_79888 ->
      (ha2_2302 s__r_app00_79888 s__r_app01_79888 set_flag_78270 0 s__r_app1_79888 k_life_79746).
  f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920 x_79943 ->
      (life_2300 s0_78313 s1_78313 set_flag_78314 0 x_79943 k_main_79920).
  f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634 s__r_f00_79724 s__r_f01_79724 
  s__r_f1_79724 ->
      (f_1026 s__r_f00_79724 s__r_f01_79724 set_flag_78238 0 s__r_f1_79724
       (f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025
        f_1026 k_run_79634)).
  f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025 f_1026 
  k_run_79634 s__r_f00_79723 s__r_f01_79723 s__r_f1_79723 ->
      (run_1024 s__r_f1_79723 s__r_f00_79723 s__r_f01_79723 set_flag_78238 0 f_1026 k_run_79634).
  f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532 s__r_f00_79606 s__r_f01_79606 
  s__r_f1_79606 -> (walk_1021 s__r_f1_79606 s__r_f00_79606 s__r_f01_79606 set_flag_78208 0 f_1023 k_walk_79532).
  f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 u_79353 ->
      (rand_int (f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319)).
  f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319 x_79341 ->
      (k_ha2_x_79319 (x_79341 = 0)).
  fail_81491 b k -> {fail} => (k ()).
  g_1010 s0_78081 s1_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 ->
      (k_g_79077 s0_78081 s1_78081 (f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082)).
  ha1_2305 s0_78134 s1_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 -> _|_.
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when set_flag_78157 ->
      (x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315)).
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when 
      (not set_flag_78157) -> (ha2_2302 true true true x_1020 x_1020 k_ha2_79315).
  life_2300 s0_78269 s1_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 ->
      (rand_int (f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746)).
  main_1029 s0_78313 s1_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 ->
      (rand_int (f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920)).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (x_1025 < 0) -> (k_run_79634 s0_78237 true x_1025).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_78237 true set_flag_78238 0 x_1025
       (f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634)).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when x_79433 ->
      (k_ha2_sp_79383 false false x_1020).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when 
      (not x_79433) -> (k_ha2_sp_79383 s0_78156 s1_78156 p_x_78158).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when s1_78156 ->
      (br_u_81487 (not s0_78156) p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not s1_78156) -> (k_ha2_x_u_79336 ()).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (x_1022 < 0) -> (k_walk_79532 s0_78207 true x_1022).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_78207 true set_flag_78208 0 x_1022
       (f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532)).
  x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 ->
      (u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319)).
Types:
  main_81471 : X
  br_f_life_81489 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[(not x_6); x_7 >= 0 || x_2] -> X)
  br_u_81487 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_81480 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  fail_81491 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha2_2302 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              bool ->
              x_5:bool ->
              int[(not x_5); x_2 >= 0] ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int[(not x_5)] -> X) -> X) ->
              (bool -> bool -> int[(not x_5)] -> X) -> X)
  sp_78173 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_78164 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(26-1) Abstracting ... DONE!

(26-2) Checking HORS ... DONE!

Error trace::
  main_81471 ... --> 
  main_1029 ... --> 
  f_main_81485 ... --> 
  life_2300 ... --> 
  f_life_81480 [1/2] ... --> 
  br_f_life_81489 [2/2] ... --> 
  g_1010 ... --> 
  f_life_81483 ... --> 
  run_1024 [2/2] ... --> 
  f_g_81472 ... --> 
  f_run_81478 ... --> 
  f_g_81472 ... --> 
  f_run_81479 ... --> 
  run_1024 [1/2] ... --> 
  f_life_81484 ... --> 
  ha2_2302 [2/2] ... --> 
  ha2_2302 [1/2] ... --> 
  x_78159 ... --> 
  u_78164 [1/2] ... --> 
  br_u_81487 [1/2] ... --> 
  fail_81491 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0

(26-3) Checking counterexample ... DONE!

(26-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 27)::
Main: main_81471
  main_81471 -> (main_1029 false false false 0 () f_81486).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when b_81490 ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_f_life_81489 b_81490 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not b_81490) ->
      (g_1010 s0_78269 true set_flag_78270 0 1
       (f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746)).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when b_81488 ->
      (fail_81491 true k_ha2_x_u_79336).
  br_u_81487 b_81488 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not b_81488) -> (k_ha2_x_u_79336 ()).
  f_81486 s__r_main00_80010 s__r_main01_80010 s__r_main1_80010 -> end.
  f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082 s0_78086 s1_78086 set_flag_78087 p_x_78088 x_1012 
  k_g_79097 -> (k_g_79097 s0_78086 s1_78086 (x_1012 - i_1011)).
  f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315 x_79433 ->
      (sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433
       (f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315)).
  f_ha2_81476 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_79315 sp00_79432 sp01_79432 sp10_79432 ->
      (ha2_2302 true true true sp10_79432 x_1020 k_ha2_79315).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (x_79749 > 0) ->
      (br_f_life_81489 (x_1028 < 0) p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749).
  f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746 x_79749 when 
      (not (x_79749 > 0)) -> (life_2300 s0_78269 s1_78269 set_flag_78270 0 x_1028 k_life_79746).
  f_life_81481 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (walk_1021 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81482 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79831 s__r_app01_79831 s__r_app1_79831 ->
      (ha1_2305 s__r_app00_79831 s__r_app01_79831 set_flag_78270 0 s__r_app1_79831 k_life_79746).
  f_life_81483 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 x_79749 k_life_79746 s__r_g00_79236 s__r_g01_79236 
  s__r_g1_79236 ->
      (run_1024 x_1028 s__r_g00_79236 s__r_g01_79236 set_flag_78270 0 s__r_g1_79236
       (f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749
        k_life_79746)).
  f_life_81484 p_x_78271 s0_78269 s1_78269 s__r_g00_79236 s__r_g01_79236 set_flag_78270 x_1028 x_79749 k_life_79746 
  s__r_app00_79888 s__r_app01_79888 s__r_app1_79888 ->
      (ha2_2302 s__r_app00_79888 s__r_app01_79888 set_flag_78270 0 s__r_app1_79888 k_life_79746).
  f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920 x_79943 ->
      (life_2300 s0_78313 s1_78313 set_flag_78314 0 x_79943 k_main_79920).
  f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634 s__r_f00_79724 s__r_f01_79724 
  s__r_f1_79724 ->
      (f_1026 s__r_f00_79724 s__r_f01_79724 set_flag_78238 0 s__r_f1_79724
       (f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025
        f_1026 k_run_79634)).
  f_run_81479 p_x_78239 s0_78237 s1_78237 s__r_f00_79724 s__r_f01_79724 s__r_f1_79724 set_flag_78238 x_1025 f_1026 
  k_run_79634 s__r_f00_79723 s__r_f01_79723 s__r_f1_79723 ->
      (run_1024 s__r_f1_79723 s__r_f00_79723 s__r_f01_79723 set_flag_78238 0 f_1026 k_run_79634).
  f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532 s__r_f00_79606 s__r_f01_79606 
  s__r_f1_79606 -> (walk_1021 s__r_f1_79606 s__r_f00_79606 s__r_f01_79606 set_flag_78208 0 f_1023 k_walk_79532).
  f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 u_79353 ->
      (rand_int (f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319)).
  f_x_81474 p_x_78158 s0_78156 s1_78156 set_flag_78157 u_79353 x_1020 k_ha2_x_79319 x_79341 ->
      (k_ha2_x_79319 (x_79341 = 0)).
  fail_81491 b k -> {fail} => (k ()).
  g_1010 s0_78081 s1_78081 set_flag_78082 p_x_78083 i_1011 k_g_79077 ->
      (k_g_79077 s0_78081 s1_78081 (f_g_81472 i_1011 p_x_78083 s0_78081 s1_78081 set_flag_78082)).
  ha1_2305 s0_78134 s1_78134 set_flag_78135 p_x_78136 x_1018 k_ha1_79262 -> _|_.
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when set_flag_78157 ->
      (x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_ha2_81475 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_79315)).
  ha2_2302 s0_78156 s1_78156 set_flag_78157 p_x_78158 x_1020 k_ha2_79315 when 
      (not set_flag_78157) -> (ha2_2302 true true true x_1020 x_1020 k_ha2_79315).
  life_2300 s0_78269 s1_78269 set_flag_78270 p_x_78271 x_1028 k_life_79746 ->
      (rand_int (f_life_81480 p_x_78271 s0_78269 s1_78269 set_flag_78270 x_1028 k_life_79746)).
  main_1029 s0_78313 s1_78313 set_flag_78314 p_x_78315 x_2295 k_main_79920 ->
      (rand_int (f_main_81485 p_x_78315 s0_78313 s1_78313 set_flag_78314 x_2295 k_main_79920)).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (x_1025 < 0) -> (k_run_79634 s0_78237 true x_1025).
  run_1024 x_1025 s0_78237 s1_78237 set_flag_78238 p_x_78239 f_1026 k_run_79634 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_78237 true set_flag_78238 0 x_1025
       (f_run_81478 p_x_78239 s0_78237 s1_78237 set_flag_78238 x_1025 f_1026 k_run_79634)).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when x_79433 ->
      (k_ha2_sp_79383 false false x_1020).
  sp_78173 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 x_79433 k_ha2_sp_79383 when 
      (not x_79433) -> (k_ha2_sp_79383 s0_78156 s1_78156 p_x_78158).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when s1_78156 ->
      (br_u_81487 (not s0_78156) p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336).
  u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_u_79336 when 
      (not s1_78156) -> (k_ha2_x_u_79336 ()).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (x_1022 < 0) -> (k_walk_79532 s0_78207 true x_1022).
  walk_1021 x_1022 s0_78207 s1_78207 set_flag_78208 p_x_78209 f_1023 k_walk_79532 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_78207 true set_flag_78208 0 x_1022
       (f_walk_81477 p_x_78209 s0_78207 s1_78207 set_flag_78208 x_1022 f_1023 k_walk_79532)).
  x_78159 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319 ->
      (u_78164 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020
       (f_x_81473 p_x_78158 s0_78156 s1_78156 set_flag_78157 x_1020 k_ha2_x_79319)).
Types:
  main_81471 : X
  br_f_life_81489 : (x_2:bool ->
                     int ->
                     bool ->
                     bool -> x_6:bool -> x_7:int -> (bool -> bool -> unit -> X) -> int[(not x_6); x_7 >= 0 || x_2] -> X)
  br_u_81487 : (x_2:bool -> int -> bool -> bool -> bool -> int[(not x_2)] -> (unit -> X) -> X)
  f_life_81480 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  fail_81491 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha2_2302 : (x_2:bool -> bool -> x_4:bool -> int -> int[x_2; (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (x_2:int ->
              bool ->
              bool ->
              x_5:bool ->
              int[(not x_5); x_2 >= 0] ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int[(not x_5)] -> X) -> X) ->
              (bool -> bool -> int[(not x_5)] -> X) -> X)
  sp_78173 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_78164 : (int -> x_3:bool -> bool -> bool -> int[x_3] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(27-1) Abstracting ... DONE!

(27-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_86684:(bool * bool)) (set_flag_86685:bool) (p_x_86686:int) (i_1011:int) =
   (s_86684, 
    (fun (s_86689:(bool * bool)) (set_flag_86690:bool) (p_x_86691:int) (x_1012:int) -> (s_86689, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_86705:(bool * bool)) (set_flag_86706:bool) (
             p_x_86707:int) (i_1016:int) =
   let s__u_86712 = ((fst s_86705, true), ()) in
   let s_86713 = fst s__u_86712 in
   let u_2310 = snd s__u_86712 in
   let s__r_g_86718 = g_1010 s_86713 set_flag_86706 0 i_1016 in
   let s_86719 = fst s__r_g_86718 in
   let r_g_2442 = snd s__r_g_86718 in
   f_1014 x_1015 s_86719 set_flag_86706 0 r_g_2442
 in
 let rec ha1_2305 (s_86737:(bool * bool)) (set_flag_86738:bool) (p_x_86739:int) (x_1018:int) =
   if set_flag_86738
   then
     let x_86740 = let u_86745 = if snd s_86737 && not (fst s_86737) then assert false in
                   rand_int () = 0 in
     let sp_86754 = if x_86740 then ((false, false), (x_1018)) else (s_86737, (p_x_86739)) in
     let s_86741 = fst sp_86754 in
     let p_x_86743 = #0 (snd sp_86754) in
     let s__u_86759 = ((fst s_86741, true), ()) in
     let s_86760 = fst s__u_86759 in
     let u_2306 = snd s__u_86759 in
     let s__u_86765 = ((true, snd s_86760), ()) in
     let s_86766 = fst s__u_86765 in
     let u_2307 = snd s__u_86765 in
     ha1_2305 s_86766 true p_x_86743 x_1018
   else
     let sp_86771 = if true then ((false, false), (x_1018)) else (s_86737, (p_x_86739)) in
     let s_86772 = fst sp_86771 in
     let p_x_86774 = #0 (snd sp_86771) in
     let s__u_86775 = ((fst s_86772, true), ()) in
     let s_86776 = fst s__u_86775 in
     let u_86777 = snd s__u_86775 in
     let s__u_86778 = ((true, snd s_86776), ()) in
     let s_86779 = fst s__u_86778 in
     let u_86780 = snd s__u_86778 in
     ha1_2305 s_86779 true p_x_86774 x_1018
 in
 let rec ha2_2302 (s_86786:(bool * bool)) (set_flag_86787:bool) (p_x_86788:int) (x_1020:int) =
   let s__u_86793 = ((fst s_86786, true), ()) in
   let s_86794 = fst s__u_86793 in
   let u_2303 = snd s__u_86793 in
   let s__u_86799 = ((true, snd s_86794), ()) in
   let s_86800 = fst s__u_86799 in
   let u_2304 = snd s__u_86799 in
   ha2_2302 s_86800 set_flag_86787 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_86810:(bool * bool)) (set_flag_86811:bool) (
                  p_x_86812:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_86817 = ((fst s_86810, true), ()) in
   let s_86818 = fst s__u_86817 in
   let u_2180 = snd s__u_86817 in
   if x_1022 < 0
   then
     (s_86818, x_1022)
   else
     let s__r_f_86823 = f_1023 s_86818 set_flag_86811 0 x_1022 in
     let s_86824 = fst s__r_f_86823 in
     let r_f_2443 = snd s__r_f_86823 in
     walk_1021 r_f_2443 s_86824 set_flag_86811 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_86840:(bool * bool)) (set_flag_86841:bool) (
                 p_x_86842:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_86847 = ((fst s_86840, true), ()) in
   let s_86848 = fst s__u_86847 in
   let u_2234 = snd s__u_86847 in
   if x_1025 < 0
   then
     (s_86848, x_1025)
   else
     let s__r_f_86853 = f_1026 s_86848 set_flag_86841 0 x_1025 in
     let s_86854 = fst s__r_f_86853 in
     let r_f_2444 = snd s__r_f_86853 in
     let s__r_f_86857 = f_1026 s_86854 set_flag_86841 0 r_f_2444 in
     let s_86858 = fst s__r_f_86857 in
     let r_f_2445 = snd s__r_f_86857 in
     run_1024 r_f_2445 s_86858 set_flag_86841 0 f_1026
 in
 let rec life_2300 (s_86872:(bool * bool)) (set_flag_86873:bool) (p_x_86874:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_86879 = ((fst s_86872, true), ()) in
     let s_86880 = fst s__u_86879 in
     let u_2301 = snd s__u_86879 in
     if x_1028 < 0
     then
       let s__r_app_86891 = app_2308 walk_1021 x_1028 s_86880 set_flag_86873 0 1 in
       let s_86892 = fst s__r_app_86891 in
       let r_app_2447 = snd s__r_app_86891 in
       ha1_2305 s_86892 set_flag_86873 0 r_app_2447
     else
       let s__r_app_86905 = app_2308 run_1024 x_1028 s_86880 set_flag_86873 0 1 in
       let s_86906 = fst s__r_app_86905 in
       let r_app_2446 = snd s__r_app_86905 in
       ha2_2302 s_86906 set_flag_86873 0 r_app_2446
   else
     life_2300 s_86872 set_flag_86873 0 x_1028
 in
 let main_1029 (s_86916:(bool * bool)) (set_flag_86917:bool) (p_x_86918:int) (x_2295:unit) =
   life_2300 s_86916 set_flag_86917 0 (rand_int ())
 in
 let s__r_main_86923 = main_1029 (false, false) false 0 () in
 let s_86924 = fst s__r_main_86923 in
 let r_main_2448 = snd s__r_main_86923 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_86684:(bool * bool)) (set_flag_86685:bool) (p_x_86686:int) (i_1011:int) =
   (s_86684, 
    (fun (s_86689:(bool * bool)) (set_flag_86690:bool) (p_x_86691:int) (x_1012:int) -> (s_86689, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_86705:(bool * bool)) (set_flag_86706:bool) (
             p_x_86707:int) (i_1016:int) =
   let s__u_86712 = ((fst s_86705, true), ()) in
   let s_86713 = fst s__u_86712 in
   let s__r_g_86718 = g_1010 s_86713 set_flag_86706 0 i_1016 in
   let s_86719 = fst s__r_g_86718 in
   let r_g_2442 = snd s__r_g_86718 in
   f_1014 x_1015 s_86719 set_flag_86706 0 r_g_2442
 in
 let rec ha1_2305 (s_86737:(bool * bool)) (set_flag_86738:bool) (p_x_86739:int) (x_1018:int) =
   if set_flag_86738
   then
     let x_86740 = let u_86745 = if snd s_86737 && not (fst s_86737) then assert false in
                   rand_int () = 0 in
     let sp_86754 = if x_86740 then ((false, false), (x_1018)) else (s_86737, (p_x_86739)) in
     let s_86741 = fst sp_86754 in
     let p_x_86743 = #0 (snd sp_86754) in
     let s__u_86759 = ((fst s_86741, true), ()) in
     let s_86760 = fst s__u_86759 in
     let s__u_86765 = ((true, snd s_86760), ()) in
     let s_86766 = fst s__u_86765 in
     ha1_2305 s_86766 true p_x_86743 x_1018
   else
     let sp_86771 = if true then ((false, false), (x_1018)) else (s_86737, (p_x_86739)) in
     let s_86772 = fst sp_86771 in
     let p_x_86774 = #0 (snd sp_86771) in
     let s__u_86775 = ((fst s_86772, true), ()) in
     let s_86776 = fst s__u_86775 in
     let s__u_86778 = ((true, snd s_86776), ()) in
     let s_86779 = fst s__u_86778 in
     ha1_2305 s_86779 true p_x_86774 x_1018
 in
 let rec ha2_2302 (s_86786:(bool * bool)) (set_flag_86787:bool) (p_x_86788:int) (x_1020:int) =
   let s__u_86793 = ((fst s_86786, true), ()) in
   let s_86794 = fst s__u_86793 in
   let s__u_86799 = ((true, snd s_86794), ()) in
   let s_86800 = fst s__u_86799 in
   ha2_2302 s_86800 set_flag_86787 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_86810:(bool * bool)) (set_flag_86811:bool) (
                  p_x_86812:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_86817 = ((fst s_86810, true), ()) in
   let s_86818 = fst s__u_86817 in
   if x_1022 < 0
   then
     (s_86818, x_1022)
   else
     let s__r_f_86823 = f_1023 s_86818 set_flag_86811 0 x_1022 in
     let s_86824 = fst s__r_f_86823 in
     let r_f_2443 = snd s__r_f_86823 in
     walk_1021 r_f_2443 s_86824 set_flag_86811 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_86840:(bool * bool)) (set_flag_86841:bool) (
                 p_x_86842:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_86847 = ((fst s_86840, true), ()) in
   let s_86848 = fst s__u_86847 in
   if x_1025 < 0
   then
     (s_86848, x_1025)
   else
     let s__r_f_86853 = f_1026 s_86848 set_flag_86841 0 x_1025 in
     let s_86854 = fst s__r_f_86853 in
     let r_f_2444 = snd s__r_f_86853 in
     let s__r_f_86857 = f_1026 s_86854 set_flag_86841 0 r_f_2444 in
     let s_86858 = fst s__r_f_86857 in
     let r_f_2445 = snd s__r_f_86857 in
     run_1024 r_f_2445 s_86858 set_flag_86841 0 f_1026
 in
 let rec life_2300 (s_86872:(bool * bool)) (set_flag_86873:bool) (p_x_86874:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_86879 = ((fst s_86872, true), ()) in
     let s_86880 = fst s__u_86879 in
     if x_1028 < 0
     then
       let s__r_app_86891 = app_2308 walk_1021 x_1028 s_86880 set_flag_86873 0 1 in
       let s_86892 = fst s__r_app_86891 in
       let r_app_2447 = snd s__r_app_86891 in
       ha1_2305 s_86892 set_flag_86873 0 r_app_2447
     else
       let s__r_app_86905 = app_2308 run_1024 x_1028 s_86880 set_flag_86873 0 1 in
       let s_86906 = fst s__r_app_86905 in
       let r_app_2446 = snd s__r_app_86905 in
       ha2_2302 s_86906 set_flag_86873 0 r_app_2446
   else
     life_2300 s_86872 set_flag_86873 0 x_1028
 in
 let main_1029 (s_86916:(bool * bool)) (set_flag_86917:bool) (p_x_86918:int) (x_2295:unit) =
   life_2300 s_86916 set_flag_86917 0 (rand_int ())
 in
 let s__r_main_86923 = main_1029 (false, false) false 0 () in
 let r_main_2448 = snd s__r_main_86923 in
 r_main_2448

###inline:
 let g_1010 (s_86684:(bool * bool)) (set_flag_86685:bool) (p_x_86686:int) (i_1011:int) =
   (s_86684, 
    (fun (s_86689:(bool * bool)) (set_flag_86690:bool) (p_x_86691:int) (x_1012:int) -> (s_86689, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              ((bool * bool) -> bool -> int -> int -> ((bool * bool) * int)) -> ((bool * bool) * int)))
             (x_1015:int) (s_86705:(bool * bool)) (set_flag_86706:bool) (
             p_x_86707:int) (i_1016:int) =
   let s__u_86712 = ((fst s_86705, true), ()) in
   let s__r_g_86718 = g_1010 (fst s__u_86712) set_flag_86706 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_86718) set_flag_86706 0 (snd s__r_g_86718)
 in
 let rec ha1_2305 (s_86737:(bool * bool)) (set_flag_86738:bool) (p_x_86739:int) (x_1018:int) =
   if set_flag_86738
   then
     let x_86740 = let u_86745 = if snd s_86737 && not (fst s_86737) then assert false in
                   rand_int () = 0 in
     let sp_86754 = if x_86740 then ((false, false), (x_1018)) else (s_86737, (p_x_86739)) in
     let p_x_86743 = #0 (snd sp_86754) in
     let s__u_86759 = ((fst (fst sp_86754), true), ()) in
     let s__u_86765 = ((true, snd (fst s__u_86759)), ()) in
     ha1_2305 (fst s__u_86765) true p_x_86743 x_1018
   else
     let sp_86771 = if true then ((false, false), (x_1018)) else (s_86737, (p_x_86739)) in
     let p_x_86774 = #0 (snd sp_86771) in
     let s__u_86775 = ((fst (fst sp_86771), true), ()) in
     let s__u_86778 = ((true, snd (fst s__u_86775)), ()) in
     ha1_2305 (fst s__u_86778) true p_x_86774 x_1018
 in
 let rec ha2_2302 (s_86786:(bool * bool)) (set_flag_86787:bool) (p_x_86788:int) (x_1020:int) =
   let s__u_86793 = ((fst s_86786, true), ()) in
   let s__u_86799 = ((true, snd (fst s__u_86793)), ()) in
   ha2_2302 (fst s__u_86799) set_flag_86787 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_86810:(bool * bool)) (set_flag_86811:bool) (
                  p_x_86812:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_86817 = ((fst s_86810, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_86817, x_1022)
   else
     let s__r_f_86823 = f_1023 (fst s__u_86817) set_flag_86811 0 x_1022 in
     walk_1021 (snd s__r_f_86823) (fst s__r_f_86823) set_flag_86811 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_86840:(bool * bool)) (set_flag_86841:bool) (
                 p_x_86842:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> ((bool * bool) * int))) =
   let s__u_86847 = ((fst s_86840, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_86847, x_1025)
   else
     let s__r_f_86853 = f_1026 (fst s__u_86847) set_flag_86841 0 x_1025 in
     let s__r_f_86857 = f_1026 (fst s__r_f_86853) set_flag_86841 0 (snd s__r_f_86853) in
     run_1024 (snd s__r_f_86857) (fst s__r_f_86857) set_flag_86841 0 f_1026
 in
 let rec life_2300 (s_86872:(bool * bool)) (set_flag_86873:bool) (p_x_86874:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_86879 = ((fst s_86872, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_86891 = app_2308 walk_1021 x_1028 (fst s__u_86879) set_flag_86873 0 1 in
       ha1_2305 (fst s__r_app_86891) set_flag_86873 0 (snd s__r_app_86891)
     else
       let s__r_app_86905 = app_2308 run_1024 x_1028 (fst s__u_86879) set_flag_86873 0 1 in
       ha2_2302 (fst s__r_app_86905) set_flag_86873 0 (snd s__r_app_86905)
   else
     life_2300 s_86872 set_flag_86873 0 x_1028
 in
 let main_1029 (s_86916:(bool * bool)) (set_flag_86917:bool) (p_x_86918:int) (x_2295:unit) =
   life_2300 s_86916 set_flag_86917 0 (rand_int ())
 in
 let s__r_main_86923 = main_1029 (false, false) false 0 () in
 snd s__r_main_86923

###CPS:
 (let g_1010 s_86684 set_flag_86685 p_x_86686 i_1011 k_g_87680 =
    k_g_87680
      (s_86684, (fun s_86689 set_flag_86690 p_x_86691 x_1012 k_g_87700 -> k_g_87700 (s_86689, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_86705 set_flag_86706 p_x_86707 i_1016 k_app_87735 =
    let s__u_86712 k_app_s__u_87739 = k_app_s__u_87739 ((fst s_86705, true), ()) in
    s__u_86712
      (fun s__u_87840 ->
         let s__r_g_86718 k_app_s__r_g_87771 = (g_1010 (fst s__u_87840) set_flag_86706 0) i_1016 k_app_s__r_g_87771 in
         s__r_g_86718
           (fun s__r_g_87839 -> (f_1014 x_1015 (fst s__r_g_87839) set_flag_86706 0) (snd s__r_g_87839) k_app_87735))
  in
  let rec ha1_2305 s_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 =
    if set_flag_86738
    then
      let x_86740 k_ha1_x_87869 =
        let u_86745 k_ha1_x_u_87886 =
          if snd s_86737
          then
            if not (fst s_86737) then <|fail|> () k_ha1_x_u_87886 else k_ha1_x_u_87886 ()
          else
            k_ha1_x_u_87886 ()
        in
        u_86745 (fun u_87903 -> rand_int_cps () (fun x_87891 -> k_ha1_x_87869 (x_87891 = 0)))
      in
      x_86740
        (fun x_87983 ->
           let sp_86754 k_ha1_sp_87933 =
             if x_87983
             then
               k_ha1_sp_87933 ((false, false), (x_1018))
             else
               k_ha1_sp_87933 (s_86737, (p_x_86739))
           in
           sp_86754
             (fun sp_87982 ->
                let s__u_86759 k_ha1_s__u_87941 = k_ha1_s__u_87941 ((fst (fst sp_87982), true), ()) in
                s__u_86759
                  (fun s__u_87980 ->
                     let s__u_86765 k_ha1_s__u_87955 = k_ha1_s__u_87955 ((true, snd (fst s__u_87980)), ()) in
                     s__u_86765
                       (fun s__u_87979 ->
                          (ha1_2305 (fst s__u_87979) true (#0 (snd sp_87982))) x_1018 k_ha1_87865))))
    else
      let sp_86771 k_ha1_sp_88013 = k_ha1_sp_88013 ((false, false), (x_1018)) in
      sp_86771
        (fun sp_88062 ->
           let s__u_86775 k_ha1_s__u_88021 = k_ha1_s__u_88021 ((fst (fst sp_88062), true), ()) in
           s__u_86775
             (fun s__u_88060 ->
                let s__u_86778 k_ha1_s__u_88035 = k_ha1_s__u_88035 ((true, snd (fst s__u_88060)), ()) in
                s__u_86778
                  (fun s__u_88059 -> (ha1_2305 (fst s__u_88059) true (#0 (snd sp_88062))) x_1018 k_ha1_87865)))
  in
  let rec ha2_2302 s_86786 set_flag_86787 p_x_86788 x_1020 k_ha2_88076 =
    let s__u_86793 k_ha2_s__u_88080 = k_ha2_s__u_88080 ((fst s_86786, true), ()) in
    s__u_86793
      (fun s__u_88119 ->
         let s__u_86799 k_ha2_s__u_88094 = k_ha2_s__u_88094 ((true, snd (fst s__u_88119)), ()) in
         s__u_86799 (fun s__u_88118 -> (ha2_2302 (fst s__u_88118) set_flag_86787 0) x_1020 k_ha2_88076))
  in
  let rec walk_1021 x_1022 s_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 =
    let s__u_86817 k_walk_s__u_88139 = k_walk_s__u_88139 ((fst s_86810, true), ()) in
    s__u_86817
      (fun s__u_88214 ->
         if x_1022 < 0
         then
           k_walk_88135 (fst s__u_88214, x_1022)
         else
           let s__r_f_86823 k_walk_s__r_f_88165 =
             (f_1023 (fst s__u_88214) set_flag_86811 0) x_1022 k_walk_s__r_f_88165
           in
           s__r_f_86823
             (fun s__r_f_88209 ->
                (walk_1021 (snd s__r_f_88209) (fst s__r_f_88209) set_flag_86811 0) f_1023 k_walk_88135))
  in
  let rec run_1024 x_1025 s_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 =
    let s__u_86847 k_run_s__u_88241 = k_run_s__u_88241 ((fst s_86840, true), ()) in
    s__u_86847
      (fun s__u_88332 ->
         if x_1025 < 0
         then
           k_run_88237 (fst s__u_88332, x_1025)
         else
           let s__r_f_86853 k_run_s__r_f_88267 =
             (f_1026 (fst s__u_88332) set_flag_86841 0) x_1025 k_run_s__r_f_88267
           in
           s__r_f_86853
             (fun s__r_f_88327 ->
                let s__r_f_86857 k_run_s__r_f_88282 =
                  (f_1026 (fst s__r_f_88327) set_flag_86841 0) (snd s__r_f_88327) k_run_s__r_f_88282
                in
                s__r_f_86857
                  (fun s__r_f_88326 ->
                     (run_1024 (snd s__r_f_88326) (fst s__r_f_88326) set_flag_86841 0) f_1026 k_run_88237)))
  in
  let rec life_2300 s_86872 set_flag_86873 p_x_86874 x_1028 k_life_88349 =
    rand_int_cps
      () 
      (fun x_88352 ->
         if x_88352 > 0
         then
           let s__u_86879 k_life_s__u_88367 = k_life_s__u_88367 ((fst s_86872, true), ()) in
           s__u_86879
             (fun s__u_88496 ->
                if x_1028 < 0
                then
                  let s__r_app_86891 k_life_s__r_app_88415 =
                    (app_2308 walk_1021 x_1028 (fst s__u_88496) set_flag_86873 0) 1 k_life_s__r_app_88415
                  in
                  s__r_app_86891
                    (fun s__r_app_88434 ->
                       (ha1_2305 (fst s__r_app_88434) set_flag_86873 0) (snd s__r_app_88434) k_life_88349)
                else
                  let s__r_app_86905 k_life_s__r_app_88472 =
                    (app_2308 run_1024 x_1028 (fst s__u_88496) set_flag_86873 0) 1 k_life_s__r_app_88472
                  in
                  s__r_app_86905
                    (fun s__r_app_88491 ->
                       (ha2_2302 (fst s__r_app_88491) set_flag_86873 0) (snd s__r_app_88491) k_life_88349))
         else
           (life_2300 s_86872 set_flag_86873 0) x_1028 k_life_88349)
  in
  let main_1029 s_86916 set_flag_86917 p_x_86918 x_2295 k_main_88523 =
    rand_int_cps () (fun x_88546 -> (life_2300 s_86916 set_flag_86917 0) x_88546 k_main_88523)
  in
  let s__r_main_86923 k_s__r_main_88607 = (((main_1029 (false, false)) false) 0) () k_s__r_main_88607 in
  s__r_main_86923 (fun s__r_main_88613 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_86684 s1_86684 set_flag_86685 p_x_86686 i_1011 k_g_87680 =
    k_g_87680
      s0_86684 s1_86684 
      (fun s0_86689 s1_86689 set_flag_86690 p_x_86691 x_1012 k_g_87700 ->
         k_g_87700 s0_86689 s1_86689 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 =
    if set_flag_86738
    then
      let x_86740 k_ha1_x_87869 =
        let u_86745 k_ha1_x_u_87886 =
          if s1_86737
          then
            if not s0_86737 then <|fail|> () k_ha1_x_u_87886 else k_ha1_x_u_87886 ()
          else
            k_ha1_x_u_87886 ()
        in
        u_86745 (fun u_87903 -> rand_int_cps () (fun x_87891 -> k_ha1_x_87869 (x_87891 = 0)))
      in
      x_86740
        (fun x_87983 ->
           let sp_86754 k_ha1_sp_87933 =
             if x_87983
             then
               k_ha1_sp_87933 false false x_1018
             else
               k_ha1_sp_87933 s0_86737 s1_86737 p_x_86739
           in
           sp_86754
             (fun sp00_87982 sp01_87982 sp10_87982 -> ha1_2305 true true true sp10_87982 x_1018 k_ha1_87865))
    else
      ha1_2305 true true true x_1018 x_1018 k_ha1_87865
  in
  let rec ha2_2302 s0_86786 s1_86786 set_flag_86787 p_x_86788 x_1020 k_ha2_88076 =
    ha2_2302 true true set_flag_86787 0 x_1020 k_ha2_88076
  in
  let rec walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 =
    if x_1022 < 0
    then
      k_walk_88135 s0_86810 true x_1022
    else
      f_1023
        s0_86810 true set_flag_86811 0 x_1022 
        (fun s__r_f00_88209 s__r_f01_88209 s__r_f1_88209 ->
           walk_1021 s__r_f1_88209 s__r_f00_88209 s__r_f01_88209 set_flag_86811 0 f_1023 k_walk_88135)
  in
  let rec run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 =
    if x_1025 < 0
    then
      k_run_88237 s0_86840 true x_1025
    else
      f_1026
        s0_86840 true set_flag_86841 0 x_1025 
        (fun s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 ->
           f_1026
             s__r_f00_88327 s__r_f01_88327 set_flag_86841 0 s__r_f1_88327 
             (fun s__r_f00_88326 s__r_f01_88326 s__r_f1_88326 ->
                run_1024 s__r_f1_88326 s__r_f00_88326 s__r_f01_88326 set_flag_86841 0 f_1026 k_run_88237))
  in
  let rec life_2300 s0_86872 s1_86872 set_flag_86873 p_x_86874 x_1028 k_life_88349 =
    rand_int_cps
      () 
      (fun x_88352 ->
         if x_88352 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_86872 true set_flag_86873 0 1 
               (fun s__r_g00_87839 s__r_g01_87839 s__r_g1_87839 ->
                  walk_1021
                    x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 
                    0 s__r_g1_87839 
                    (fun s__r_app00_88434 s__r_app01_88434 s__r_app1_88434 ->
                       ha1_2305 s__r_app00_88434 s__r_app01_88434 set_flag_86873 0 s__r_app1_88434 k_life_88349))
           else
             g_1010
               s0_86872 true set_flag_86873 0 1 
               (fun s__r_g00_87839 s__r_g01_87839 s__r_g1_87839 ->
                  run_1024
                    x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 
                    0 s__r_g1_87839 
                    (fun s__r_app00_88491 s__r_app01_88491 s__r_app1_88491 ->
                       ha2_2302 s__r_app00_88491 s__r_app01_88491 set_flag_86873 0 s__r_app1_88491 k_life_88349))
         else
           life_2300 s0_86872 s1_86872 set_flag_86873 0 x_1028 k_life_88349)
  in
  let main_1029 s0_86916 s1_86916 set_flag_86917 p_x_86918 x_2295 k_main_88523 =
    rand_int_cps () (fun x_88546 -> life_2300 s0_86916 s1_86916 set_flag_86917 0 x_88546 k_main_88523)
  in
  main_1029 false false false 0 () (fun s__r_main00_88613 s__r_main01_88613 s__r_main1_88613 -> {end}) # 
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_86684 s1_86684 set_flag_86685 p_x_86686 i_1011 k_g_87680 =
    k_g_87680
      s0_86684 s1_86684 
      (fun s0_86689 s1_86689 set_flag_86690 p_x_86691 x_1012 k_g_87700 ->
         k_g_87700 s0_86689 s1_86689 (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 =
    if set_flag_86738
    then
      let x_86740 k_ha1_x_87869 =
        let u_86745 k_ha1_x_u_87886 =
          if s1_86737
          then
            if not s0_86737 then <|fail|> () k_ha1_x_u_87886 else k_ha1_x_u_87886 ()
          else
            k_ha1_x_u_87886 ()
        in
        u_86745 (fun u_87903 -> rand_int_cps () (fun x_87891 -> k_ha1_x_87869 (x_87891 = 0)))
      in
      x_86740
        (fun x_87983 ->
           let sp_86754 k_ha1_sp_87933 =
             if x_87983
             then
               k_ha1_sp_87933 false false x_1018
             else
               k_ha1_sp_87933 s0_86737 s1_86737 p_x_86739
           in
           sp_86754
             (fun sp00_87982 sp01_87982 sp10_87982 -> ha1_2305 true true true sp10_87982 x_1018 k_ha1_87865))
    else
      ha1_2305 true true true x_1018 x_1018 k_ha1_87865
  in
  let rec ha2_2302 s0_86786 s1_86786 set_flag_86787 p_x_86788 x_1020 k_ha2_88076 = _|_ in
  let rec walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 =
    if x_1022 < 0
    then
      k_walk_88135 s0_86810 true x_1022
    else
      f_1023
        s0_86810 true set_flag_86811 0 x_1022 
        (fun s__r_f00_88209 s__r_f01_88209 s__r_f1_88209 ->
           walk_1021 s__r_f1_88209 s__r_f00_88209 s__r_f01_88209 set_flag_86811 0 f_1023 k_walk_88135)
  in
  let rec run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 =
    if x_1025 < 0
    then
      k_run_88237 s0_86840 true x_1025
    else
      f_1026
        s0_86840 true set_flag_86841 0 x_1025 
        (fun s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 ->
           f_1026
             s__r_f00_88327 s__r_f01_88327 set_flag_86841 0 s__r_f1_88327 
             (fun s__r_f00_88326 s__r_f01_88326 s__r_f1_88326 ->
                run_1024 s__r_f1_88326 s__r_f00_88326 s__r_f01_88326 set_flag_86841 0 f_1026 k_run_88237))
  in
  let rec life_2300 s0_86872 s1_86872 set_flag_86873 p_x_86874 x_1028 k_life_88349 =
    rand_int_cps
      () 
      (fun x_88352 ->
         if x_88352 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_86872 true set_flag_86873 0 1 
               (fun s__r_g00_87839 s__r_g01_87839 s__r_g1_87839 ->
                  walk_1021
                    x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 
                    0 s__r_g1_87839 
                    (fun s__r_app00_88434 s__r_app01_88434 s__r_app1_88434 ->
                       ha1_2305 s__r_app00_88434 s__r_app01_88434 set_flag_86873 0 s__r_app1_88434 k_life_88349))
           else
             g_1010
               s0_86872 true set_flag_86873 0 1 
               (fun s__r_g00_87839 s__r_g01_87839 s__r_g1_87839 ->
                  run_1024
                    x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 
                    0 s__r_g1_87839 
                    (fun s__r_app00_88491 s__r_app01_88491 s__r_app1_88491 ->
                       ha2_2302 s__r_app00_88491 s__r_app01_88491 set_flag_86873 0 s__r_app1_88491 k_life_88349))
         else
           life_2300 s0_86872 s1_86872 set_flag_86873 0 x_1028 k_life_88349)
  in
  let main_1029 s0_86916 s1_86916 set_flag_86917 p_x_86918 x_2295 k_main_88523 =
    rand_int_cps () (fun x_88546 -> life_2300 s0_86916 s1_86916 set_flag_86917 0 x_88546 k_main_88523)
  in
  main_1029 false false false 0 () (fun s__r_main00_88613 s__r_main01_88613 s__r_main1_88613 -> {end}) # 
  [ACPS])

Program with abstraction types (CEGAR-cycle 28)::
Main: main_90074
  main_90074 -> (main_1029 false false false 0 () f_90089).
  br_f_life_90092 b_90093 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when b_90093 ->
      (g_1010 s0_86872 true set_flag_86873 0 1
       (f_life_90084 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349)).
  br_f_life_90092 b_90093 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (not b_90093) ->
      (g_1010 s0_86872 true set_flag_86873 0 1
       (f_life_90086 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349)).
  br_u_90090 b_90091 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when b_90091 ->
      (fail_90094 true k_ha1_x_u_87886).
  br_u_90090 b_90091 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when 
      (not b_90091) -> (k_ha1_x_u_87886 ()).
  f_90089 s__r_main00_88613 s__r_main01_88613 s__r_main1_88613 -> end.
  f_g_90075 i_1011 p_x_86686 s0_86684 s1_86684 set_flag_86685 s0_86689 s1_86689 set_flag_86690 p_x_86691 x_1012 
  k_g_87700 -> (k_g_87700 s0_86689 s1_86689 (x_1012 - i_1011)).
  f_ha1_90078 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_87865 x_87983 ->
      (sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983
       (f_ha1_90079 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_87865)).
  f_ha1_90079 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_87865 sp00_87982 sp01_87982 sp10_87982 ->
      (ha1_2305 true true true sp10_87982 x_1018 k_ha1_87865).
  f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (x_88352 > 0) ->
      (br_f_life_90092 (x_1028 < 0) p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352).
  f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (not (x_88352 > 0)) -> (life_2300 s0_86872 s1_86872 set_flag_86873 0 x_1028 k_life_88349).
  f_life_90084 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349 s__r_g00_87839 s__r_g01_87839 
  s__r_g1_87839 ->
      (walk_1021 x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 0 s__r_g1_87839
       (f_life_90085 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352
        k_life_88349)).
  f_life_90085 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352 k_life_88349 
  s__r_app00_88434 s__r_app01_88434 s__r_app1_88434 ->
      (ha1_2305 s__r_app00_88434 s__r_app01_88434 set_flag_86873 0 s__r_app1_88434 k_life_88349).
  f_life_90086 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349 s__r_g00_87839 s__r_g01_87839 
  s__r_g1_87839 ->
      (run_1024 x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 0 s__r_g1_87839
       (f_life_90087 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352
        k_life_88349)).
  f_life_90087 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352 k_life_88349 
  s__r_app00_88491 s__r_app01_88491 s__r_app1_88491 ->
      (ha2_2302 s__r_app00_88491 s__r_app01_88491 set_flag_86873 0 s__r_app1_88491 k_life_88349).
  f_main_90088 p_x_86918 s0_86916 s1_86916 set_flag_86917 x_2295 k_main_88523 x_88546 ->
      (life_2300 s0_86916 s1_86916 set_flag_86917 0 x_88546 k_main_88523).
  f_run_90081 p_x_86842 s0_86840 s1_86840 set_flag_86841 x_1025 f_1026 k_run_88237 s__r_f00_88327 s__r_f01_88327 
  s__r_f1_88327 ->
      (f_1026 s__r_f00_88327 s__r_f01_88327 set_flag_86841 0 s__r_f1_88327
       (f_run_90082 p_x_86842 s0_86840 s1_86840 s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 set_flag_86841 x_1025
        f_1026 k_run_88237)).
  f_run_90082 p_x_86842 s0_86840 s1_86840 s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 set_flag_86841 x_1025 f_1026 
  k_run_88237 s__r_f00_88326 s__r_f01_88326 s__r_f1_88326 ->
      (run_1024 s__r_f1_88326 s__r_f00_88326 s__r_f01_88326 set_flag_86841 0 f_1026 k_run_88237).
  f_walk_90080 p_x_86812 s0_86810 s1_86810 set_flag_86811 x_1022 f_1023 k_walk_88135 s__r_f00_88209 s__r_f01_88209 
  s__r_f1_88209 -> (walk_1021 s__r_f1_88209 s__r_f00_88209 s__r_f01_88209 set_flag_86811 0 f_1023 k_walk_88135).
  f_x_90076 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869 u_87903 ->
      (rand_int (f_x_90077 p_x_86739 s0_86737 s1_86737 set_flag_86738 u_87903 x_1018 k_ha1_x_87869)).
  f_x_90077 p_x_86739 s0_86737 s1_86737 set_flag_86738 u_87903 x_1018 k_ha1_x_87869 x_87891 ->
      (k_ha1_x_87869 (x_87891 = 0)).
  fail_90094 b k -> {fail} => (k ()).
  g_1010 s0_86684 s1_86684 set_flag_86685 p_x_86686 i_1011 k_g_87680 ->
      (k_g_87680 s0_86684 s1_86684 (f_g_90075 i_1011 p_x_86686 s0_86684 s1_86684 set_flag_86685)).
  ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 when set_flag_86738 ->
      (x_86740 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018
       (f_ha1_90078 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_87865)).
  ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 when 
      (not set_flag_86738) -> (ha1_2305 true true true x_1018 x_1018 k_ha1_87865).
  ha2_2302 s0_86786 s1_86786 set_flag_86787 p_x_86788 x_1020 k_ha2_88076 -> _|_.
  life_2300 s0_86872 s1_86872 set_flag_86873 p_x_86874 x_1028 k_life_88349 ->
      (rand_int (f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349)).
  main_1029 s0_86916 s1_86916 set_flag_86917 p_x_86918 x_2295 k_main_88523 ->
      (rand_int (f_main_90088 p_x_86918 s0_86916 s1_86916 set_flag_86917 x_2295 k_main_88523)).
  run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 when 
      (x_1025 < 0) -> (k_run_88237 s0_86840 true x_1025).
  run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_86840 true set_flag_86841 0 x_1025
       (f_run_90081 p_x_86842 s0_86840 s1_86840 set_flag_86841 x_1025 f_1026 k_run_88237)).
  sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_sp_87933 when x_87983 ->
      (k_ha1_sp_87933 false false x_1018).
  sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_sp_87933 when 
      (not x_87983) -> (k_ha1_sp_87933 s0_86737 s1_86737 p_x_86739).
  u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when s1_86737 ->
      (br_u_90090 (not s0_86737) p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886).
  u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when 
      (not s1_86737) -> (k_ha1_x_u_87886 ()).
  walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 when 
      (x_1022 < 0) -> (k_walk_88135 s0_86810 true x_1022).
  walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_86810 true set_flag_86811 0 x_1022
       (f_walk_90080 p_x_86812 s0_86810 s1_86810 set_flag_86811 x_1022 f_1023 k_walk_88135)).
  x_86740 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869 ->
      (u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018
       (f_x_90076 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869)).
Types:
  main_90074 : X
  br_f_life_90092 : (bool -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_90090 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_90083 : (int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_90094 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha1_2305 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_86754 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_86745 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
               bool -> bool -> int -> X) -> X)

(28-1) Abstracting ... DONE!

(28-2) Checking HORS ... DONE!

Error trace::
  main_90074 ... --> 
  main_1029 ... --> 
  f_main_90088 ... --> 
  life_2300 ... --> 
  f_life_90083 [1/2] ... --> 
  br_f_life_90092 [1/2] ... --> 
  g_1010 ... --> 
  f_life_90084 ... --> 
  walk_1021 [1/2] ... --> 
  f_life_90085 ... --> 
  ha1_2305 [1/2] ... --> 
  x_86740 ... --> 
  u_86745 [1/2] ... --> 
  br_u_90090 [1/2] ... --> 
  fail_90094 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0

(28-3) Checking counterexample ... DONE!

(28-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 29)::
Main: main_90074
  main_90074 -> (main_1029 false false false 0 () f_90089).
  br_f_life_90092 b_90093 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when b_90093 ->
      (g_1010 s0_86872 true set_flag_86873 0 1
       (f_life_90084 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349)).
  br_f_life_90092 b_90093 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (not b_90093) ->
      (g_1010 s0_86872 true set_flag_86873 0 1
       (f_life_90086 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349)).
  br_u_90090 b_90091 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when b_90091 ->
      (fail_90094 true k_ha1_x_u_87886).
  br_u_90090 b_90091 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when 
      (not b_90091) -> (k_ha1_x_u_87886 ()).
  f_90089 s__r_main00_88613 s__r_main01_88613 s__r_main1_88613 -> end.
  f_g_90075 i_1011 p_x_86686 s0_86684 s1_86684 set_flag_86685 s0_86689 s1_86689 set_flag_86690 p_x_86691 x_1012 
  k_g_87700 -> (k_g_87700 s0_86689 s1_86689 (x_1012 - i_1011)).
  f_ha1_90078 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_87865 x_87983 ->
      (sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983
       (f_ha1_90079 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_87865)).
  f_ha1_90079 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_87865 sp00_87982 sp01_87982 sp10_87982 ->
      (ha1_2305 true true true sp10_87982 x_1018 k_ha1_87865).
  f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (x_88352 > 0) ->
      (br_f_life_90092 (x_1028 < 0) p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352).
  f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (not (x_88352 > 0)) -> (life_2300 s0_86872 s1_86872 set_flag_86873 0 x_1028 k_life_88349).
  f_life_90084 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349 s__r_g00_87839 s__r_g01_87839 
  s__r_g1_87839 ->
      (walk_1021 x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 0 s__r_g1_87839
       (f_life_90085 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352
        k_life_88349)).
  f_life_90085 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352 k_life_88349 
  s__r_app00_88434 s__r_app01_88434 s__r_app1_88434 ->
      (ha1_2305 s__r_app00_88434 s__r_app01_88434 set_flag_86873 0 s__r_app1_88434 k_life_88349).
  f_life_90086 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349 s__r_g00_87839 s__r_g01_87839 
  s__r_g1_87839 ->
      (run_1024 x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 0 s__r_g1_87839
       (f_life_90087 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352
        k_life_88349)).
  f_life_90087 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352 k_life_88349 
  s__r_app00_88491 s__r_app01_88491 s__r_app1_88491 ->
      (ha2_2302 s__r_app00_88491 s__r_app01_88491 set_flag_86873 0 s__r_app1_88491 k_life_88349).
  f_main_90088 p_x_86918 s0_86916 s1_86916 set_flag_86917 x_2295 k_main_88523 x_88546 ->
      (life_2300 s0_86916 s1_86916 set_flag_86917 0 x_88546 k_main_88523).
  f_run_90081 p_x_86842 s0_86840 s1_86840 set_flag_86841 x_1025 f_1026 k_run_88237 s__r_f00_88327 s__r_f01_88327 
  s__r_f1_88327 ->
      (f_1026 s__r_f00_88327 s__r_f01_88327 set_flag_86841 0 s__r_f1_88327
       (f_run_90082 p_x_86842 s0_86840 s1_86840 s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 set_flag_86841 x_1025
        f_1026 k_run_88237)).
  f_run_90082 p_x_86842 s0_86840 s1_86840 s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 set_flag_86841 x_1025 f_1026 
  k_run_88237 s__r_f00_88326 s__r_f01_88326 s__r_f1_88326 ->
      (run_1024 s__r_f1_88326 s__r_f00_88326 s__r_f01_88326 set_flag_86841 0 f_1026 k_run_88237).
  f_walk_90080 p_x_86812 s0_86810 s1_86810 set_flag_86811 x_1022 f_1023 k_walk_88135 s__r_f00_88209 s__r_f01_88209 
  s__r_f1_88209 -> (walk_1021 s__r_f1_88209 s__r_f00_88209 s__r_f01_88209 set_flag_86811 0 f_1023 k_walk_88135).
  f_x_90076 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869 u_87903 ->
      (rand_int (f_x_90077 p_x_86739 s0_86737 s1_86737 set_flag_86738 u_87903 x_1018 k_ha1_x_87869)).
  f_x_90077 p_x_86739 s0_86737 s1_86737 set_flag_86738 u_87903 x_1018 k_ha1_x_87869 x_87891 ->
      (k_ha1_x_87869 (x_87891 = 0)).
  fail_90094 b k -> {fail} => (k ()).
  g_1010 s0_86684 s1_86684 set_flag_86685 p_x_86686 i_1011 k_g_87680 ->
      (k_g_87680 s0_86684 s1_86684 (f_g_90075 i_1011 p_x_86686 s0_86684 s1_86684 set_flag_86685)).
  ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 when set_flag_86738 ->
      (x_86740 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018
       (f_ha1_90078 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_87865)).
  ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 when 
      (not set_flag_86738) -> (ha1_2305 true true true x_1018 x_1018 k_ha1_87865).
  ha2_2302 s0_86786 s1_86786 set_flag_86787 p_x_86788 x_1020 k_ha2_88076 -> _|_.
  life_2300 s0_86872 s1_86872 set_flag_86873 p_x_86874 x_1028 k_life_88349 ->
      (rand_int (f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349)).
  main_1029 s0_86916 s1_86916 set_flag_86917 p_x_86918 x_2295 k_main_88523 ->
      (rand_int (f_main_90088 p_x_86918 s0_86916 s1_86916 set_flag_86917 x_2295 k_main_88523)).
  run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 when 
      (x_1025 < 0) -> (k_run_88237 s0_86840 true x_1025).
  run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_86840 true set_flag_86841 0 x_1025
       (f_run_90081 p_x_86842 s0_86840 s1_86840 set_flag_86841 x_1025 f_1026 k_run_88237)).
  sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_sp_87933 when x_87983 ->
      (k_ha1_sp_87933 false false x_1018).
  sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_sp_87933 when 
      (not x_87983) -> (k_ha1_sp_87933 s0_86737 s1_86737 p_x_86739).
  u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when s1_86737 ->
      (br_u_90090 (not s0_86737) p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886).
  u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when 
      (not s1_86737) -> (k_ha1_x_u_87886 ()).
  walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 when 
      (x_1022 < 0) -> (k_walk_88135 s0_86810 true x_1022).
  walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_86810 true set_flag_86811 0 x_1022
       (f_walk_90080 p_x_86812 s0_86810 s1_86810 set_flag_86811 x_1022 f_1023 k_walk_88135)).
  x_86740 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869 ->
      (u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018
       (f_x_90076 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869)).
Types:
  main_90074 : X
  br_f_life_90092 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_u_90090 : (bool -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_90083 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  fail_90094 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha1_2305 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_86754 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_86745 : (int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               x_5:bool ->
               int[(not x_5)] ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int[(not x_5)] -> X) -> X)

(29-1) Abstracting ... DONE!

(29-2) Checking HORS ... DONE!

Error trace::
  main_90074 ... --> 
  main_1029 ... --> 
  f_main_90088 ... --> 
  life_2300 ... --> 
  f_life_90083 [1/2] ... --> 
  br_f_life_90092 [1/2] ... --> 
  g_1010 ... --> 
  f_life_90084 ... --> 
  walk_1021 [1/2] ... --> 
  f_life_90085 ... --> 
  ha1_2305 [2/2] ... --> 
  ha1_2305 [1/2] ... --> 
  x_86740 ... --> 
  u_86745 [1/2] ... --> 
  br_u_90090 [1/2] ... --> 
  fail_90094 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0

(29-3) Checking counterexample ... DONE!

(29-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 30)::
Main: main_90074
  main_90074 -> (main_1029 false false false 0 () f_90089).
  br_f_life_90092 b_90093 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when b_90093 ->
      (g_1010 s0_86872 true set_flag_86873 0 1
       (f_life_90084 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349)).
  br_f_life_90092 b_90093 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (not b_90093) ->
      (g_1010 s0_86872 true set_flag_86873 0 1
       (f_life_90086 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349)).
  br_u_90090 b_90091 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when b_90091 ->
      (fail_90094 true k_ha1_x_u_87886).
  br_u_90090 b_90091 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when 
      (not b_90091) -> (k_ha1_x_u_87886 ()).
  f_90089 s__r_main00_88613 s__r_main01_88613 s__r_main1_88613 -> end.
  f_g_90075 i_1011 p_x_86686 s0_86684 s1_86684 set_flag_86685 s0_86689 s1_86689 set_flag_86690 p_x_86691 x_1012 
  k_g_87700 -> (k_g_87700 s0_86689 s1_86689 (x_1012 - i_1011)).
  f_ha1_90078 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_87865 x_87983 ->
      (sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983
       (f_ha1_90079 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_87865)).
  f_ha1_90079 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_87865 sp00_87982 sp01_87982 sp10_87982 ->
      (ha1_2305 true true true sp10_87982 x_1018 k_ha1_87865).
  f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (x_88352 > 0) ->
      (br_f_life_90092 (x_1028 < 0) p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352).
  f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349 x_88352 when 
      (not (x_88352 > 0)) -> (life_2300 s0_86872 s1_86872 set_flag_86873 0 x_1028 k_life_88349).
  f_life_90084 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349 s__r_g00_87839 s__r_g01_87839 
  s__r_g1_87839 ->
      (walk_1021 x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 0 s__r_g1_87839
       (f_life_90085 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352
        k_life_88349)).
  f_life_90085 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352 k_life_88349 
  s__r_app00_88434 s__r_app01_88434 s__r_app1_88434 ->
      (ha1_2305 s__r_app00_88434 s__r_app01_88434 set_flag_86873 0 s__r_app1_88434 k_life_88349).
  f_life_90086 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 x_88352 k_life_88349 s__r_g00_87839 s__r_g01_87839 
  s__r_g1_87839 ->
      (run_1024 x_1028 s__r_g00_87839 s__r_g01_87839 set_flag_86873 0 s__r_g1_87839
       (f_life_90087 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352
        k_life_88349)).
  f_life_90087 p_x_86874 s0_86872 s1_86872 s__r_g00_87839 s__r_g01_87839 set_flag_86873 x_1028 x_88352 k_life_88349 
  s__r_app00_88491 s__r_app01_88491 s__r_app1_88491 ->
      (ha2_2302 s__r_app00_88491 s__r_app01_88491 set_flag_86873 0 s__r_app1_88491 k_life_88349).
  f_main_90088 p_x_86918 s0_86916 s1_86916 set_flag_86917 x_2295 k_main_88523 x_88546 ->
      (life_2300 s0_86916 s1_86916 set_flag_86917 0 x_88546 k_main_88523).
  f_run_90081 p_x_86842 s0_86840 s1_86840 set_flag_86841 x_1025 f_1026 k_run_88237 s__r_f00_88327 s__r_f01_88327 
  s__r_f1_88327 ->
      (f_1026 s__r_f00_88327 s__r_f01_88327 set_flag_86841 0 s__r_f1_88327
       (f_run_90082 p_x_86842 s0_86840 s1_86840 s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 set_flag_86841 x_1025
        f_1026 k_run_88237)).
  f_run_90082 p_x_86842 s0_86840 s1_86840 s__r_f00_88327 s__r_f01_88327 s__r_f1_88327 set_flag_86841 x_1025 f_1026 
  k_run_88237 s__r_f00_88326 s__r_f01_88326 s__r_f1_88326 ->
      (run_1024 s__r_f1_88326 s__r_f00_88326 s__r_f01_88326 set_flag_86841 0 f_1026 k_run_88237).
  f_walk_90080 p_x_86812 s0_86810 s1_86810 set_flag_86811 x_1022 f_1023 k_walk_88135 s__r_f00_88209 s__r_f01_88209 
  s__r_f1_88209 -> (walk_1021 s__r_f1_88209 s__r_f00_88209 s__r_f01_88209 set_flag_86811 0 f_1023 k_walk_88135).
  f_x_90076 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869 u_87903 ->
      (rand_int (f_x_90077 p_x_86739 s0_86737 s1_86737 set_flag_86738 u_87903 x_1018 k_ha1_x_87869)).
  f_x_90077 p_x_86739 s0_86737 s1_86737 set_flag_86738 u_87903 x_1018 k_ha1_x_87869 x_87891 ->
      (k_ha1_x_87869 (x_87891 = 0)).
  fail_90094 b k -> {fail} => (k ()).
  g_1010 s0_86684 s1_86684 set_flag_86685 p_x_86686 i_1011 k_g_87680 ->
      (k_g_87680 s0_86684 s1_86684 (f_g_90075 i_1011 p_x_86686 s0_86684 s1_86684 set_flag_86685)).
  ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 when set_flag_86738 ->
      (x_86740 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018
       (f_ha1_90078 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_87865)).
  ha1_2305 s0_86737 s1_86737 set_flag_86738 p_x_86739 x_1018 k_ha1_87865 when 
      (not set_flag_86738) -> (ha1_2305 true true true x_1018 x_1018 k_ha1_87865).
  ha2_2302 s0_86786 s1_86786 set_flag_86787 p_x_86788 x_1020 k_ha2_88076 -> _|_.
  life_2300 s0_86872 s1_86872 set_flag_86873 p_x_86874 x_1028 k_life_88349 ->
      (rand_int (f_life_90083 p_x_86874 s0_86872 s1_86872 set_flag_86873 x_1028 k_life_88349)).
  main_1029 s0_86916 s1_86916 set_flag_86917 p_x_86918 x_2295 k_main_88523 ->
      (rand_int (f_main_90088 p_x_86918 s0_86916 s1_86916 set_flag_86917 x_2295 k_main_88523)).
  run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 when 
      (x_1025 < 0) -> (k_run_88237 s0_86840 true x_1025).
  run_1024 x_1025 s0_86840 s1_86840 set_flag_86841 p_x_86842 f_1026 k_run_88237 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_86840 true set_flag_86841 0 x_1025
       (f_run_90081 p_x_86842 s0_86840 s1_86840 set_flag_86841 x_1025 f_1026 k_run_88237)).
  sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_sp_87933 when x_87983 ->
      (k_ha1_sp_87933 false false x_1018).
  sp_86754 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 x_87983 k_ha1_sp_87933 when 
      (not x_87983) -> (k_ha1_sp_87933 s0_86737 s1_86737 p_x_86739).
  u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when s1_86737 ->
      (br_u_90090 (not s0_86737) p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886).
  u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_u_87886 when 
      (not s1_86737) -> (k_ha1_x_u_87886 ()).
  walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 when 
      (x_1022 < 0) -> (k_walk_88135 s0_86810 true x_1022).
  walk_1021 x_1022 s0_86810 s1_86810 set_flag_86811 p_x_86812 f_1023 k_walk_88135 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_86810 true set_flag_86811 0 x_1022
       (f_walk_90080 p_x_86812 s0_86810 s1_86810 set_flag_86811 x_1022 f_1023 k_walk_88135)).
  x_86740 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869 ->
      (u_86745 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018
       (f_x_90076 p_x_86739 s0_86737 s1_86737 set_flag_86738 x_1018 k_ha1_x_87869)).
Types:
  main_90074 : X
  br_f_life_90092 : (bool ->
                     int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  br_u_90090 : (x_2:bool -> int -> bool -> bool -> bool -> int[(not x_2)] -> (unit -> X) -> X)
  f_life_90083 : (int -> bool -> bool -> x_5:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_5)] -> X)
  fail_90094 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int -> (bool -> bool -> (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  ha1_2305 : (x_2:bool -> bool -> x_4:bool -> int -> int[x_2; (not x_4)] -> (bool -> bool -> unit -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) -> (
              bool -> bool -> int -> X) -> X)
  sp_86754 : (int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> X) -> X)
  u_86745 : (int -> x_3:bool -> bool -> bool -> int[x_3] -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               x_5:bool ->
               int[(not x_5)] ->
               (bool -> bool -> bool -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int[(not x_5)] -> X) -> X)

(30-1) Abstracting ... DONE!

(30-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_93441:(bool * bool)) (set_flag_93442:bool) (p_x_93443:int) (p_i_93444:int) (i_1011:int) =
   (s_93441, 
    (fun (s_93447:(bool * bool)) (set_flag_93448:bool) (p_x_93449:int) (p_i_93450:int) (x_1012:int) ->
       (s_93447, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              int ->
                                ((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int)) ->
                                  ((bool * bool) * int)))
             (x_1015:int) (s_93464:(bool * bool)) (set_flag_93465:bool) (
             p_x_93466:int) (p_i_93467:int) (i_1016:int) =
   if set_flag_93465
   then
     let x_93468 = let u_93474 = if snd s_93464 && not (fst s_93464) then assert false in
                   rand_int () = 0 in
     let sp_93485 = if x_93468 then ((false, false), (x_1015, i_1016)) else (s_93464, (p_x_93466, p_i_93467)) in
     let s_93469 = fst sp_93485 in
     let p_x_93471 = fst (snd sp_93485) in
     let p_i_93472 = snd (snd sp_93485) in
     let s__u_93490 = ((fst s_93469, true), ()) in
     let s_93491 = fst s__u_93490 in
     let u_2310 = snd s__u_93490 in
     let s__r_g_93496 = g_1010 s_93491 true p_x_93471 p_i_93472 i_1016 in
     let s_93497 = fst s__r_g_93496 in
     let r_g_2442 = snd s__r_g_93496 in
     f_1014 x_1015 s_93497 true p_x_93471 p_i_93472 r_g_2442
   else
     let sp_93508 =
       if true then ((false, false), (x_1015, i_1016)) else (s_93464, (p_x_93466, p_i_93467))
     in
     let s_93509 = fst sp_93508 in
     let p_x_93511 = fst (snd sp_93508) in
     let p_i_93512 = snd (snd sp_93508) in
     let s__u_93513 = ((fst s_93509, true), ()) in
     let s_93514 = fst s__u_93513 in
     let u_93515 = snd s__u_93513 in
     let s__r_g_93516 = g_1010 s_93514 true p_x_93511 p_i_93512 i_1016 in
     let s_93517 = fst s__r_g_93516 in
     let r_g_93518 = snd s__r_g_93516 in
     f_1014 x_1015 s_93517 true p_x_93511 p_i_93512 r_g_93518
 in
 let rec ha1_2305 (s_93528:(bool * bool)) (set_flag_93529:bool) (p_x_93530:int) (
                 p_i_93531:int) (x_1018:int) =
   let s__u_93536 = ((fst s_93528, true), ()) in
   let s_93537 = fst s__u_93536 in
   let u_2306 = snd s__u_93536 in
   let s__u_93542 = ((true, snd s_93537), ()) in
   let s_93543 = fst s__u_93542 in
   let u_2307 = snd s__u_93542 in
   ha1_2305 s_93543 set_flag_93529 0 0 x_1018
 in
 let rec ha2_2302 (s_93551:(bool * bool)) (set_flag_93552:bool) (p_x_93553:int) (
                 p_i_93554:int) (x_1020:int) =
   let s__u_93559 = ((fst s_93551, true), ()) in
   let s_93560 = fst s__u_93559 in
   let u_2303 = snd s__u_93559 in
   let s__u_93565 = ((true, snd s_93560), ()) in
   let s_93566 = fst s__u_93565 in
   let u_2304 = snd s__u_93565 in
   ha2_2302 s_93566 set_flag_93552 0 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_93576:(bool * bool)) (set_flag_93577:bool) (
                  p_x_93578:int) (p_i_93579:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_93584 = ((fst s_93576, true), ()) in
   let s_93585 = fst s__u_93584 in
   let u_2180 = snd s__u_93584 in
   if x_1022 < 0
   then
     (s_93585, x_1022)
   else
     let s__r_f_93590 = f_1023 s_93585 set_flag_93577 0 0 x_1022 in
     let s_93591 = fst s__r_f_93590 in
     let r_f_2443 = snd s__r_f_93590 in
     walk_1021 r_f_2443 s_93591 set_flag_93577 0 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_93607:(bool * bool)) (set_flag_93608:bool) (
                 p_x_93609:int) (p_i_93610:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_93615 = ((fst s_93607, true), ()) in
   let s_93616 = fst s__u_93615 in
   let u_2234 = snd s__u_93615 in
   if x_1025 < 0
   then
     (s_93616, x_1025)
   else
     let s__r_f_93621 = f_1026 s_93616 set_flag_93608 0 0 x_1025 in
     let s_93622 = fst s__r_f_93621 in
     let r_f_2444 = snd s__r_f_93621 in
     let s__r_f_93625 = f_1026 s_93622 set_flag_93608 0 0 r_f_2444 in
     let s_93626 = fst s__r_f_93625 in
     let r_f_2445 = snd s__r_f_93625 in
     run_1024 r_f_2445 s_93626 set_flag_93608 0 0 f_1026
 in
 let rec life_2300 (s_93640:(bool * bool)) (set_flag_93641:bool) (p_x_93642:int) (
                  p_i_93643:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_93648 = ((fst s_93640, true), ()) in
     let s_93649 = fst s__u_93648 in
     let u_2301 = snd s__u_93648 in
     if x_1028 < 0
     then
       let s__r_app_93660 = app_2308 walk_1021 x_1028 s_93649 set_flag_93641 0 0 1 in
       let s_93661 = fst s__r_app_93660 in
       let r_app_2447 = snd s__r_app_93660 in
       ha1_2305 s_93661 set_flag_93641 0 0 r_app_2447
     else
       let s__r_app_93674 = app_2308 run_1024 x_1028 s_93649 set_flag_93641 0 0 1 in
       let s_93675 = fst s__r_app_93674 in
       let r_app_2446 = snd s__r_app_93674 in
       ha2_2302 s_93675 set_flag_93641 0 0 r_app_2446
   else
     life_2300 s_93640 set_flag_93641 0 0 x_1028
 in
 let main_1029 (s_93685:(bool * bool)) (set_flag_93686:bool) (p_x_93687:int) (
              p_i_93688:int) (x_2295:unit) = life_2300 s_93685 set_flag_93686 0 0 (rand_int ())
 in
 let s__r_main_93693 = main_1029 (false, false) false 0 0 () in
 let s_93694 = fst s__r_main_93693 in
 let r_main_2448 = snd s__r_main_93693 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_93441:(bool * bool)) (set_flag_93442:bool) (p_x_93443:int) (p_i_93444:int) (i_1011:int) =
   (s_93441, 
    (fun (s_93447:(bool * bool)) (set_flag_93448:bool) (p_x_93449:int) (p_i_93450:int) (x_1012:int) ->
       (s_93447, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              int ->
                                ((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int)) ->
                                  ((bool * bool) * int)))
             (x_1015:int) (s_93464:(bool * bool)) (set_flag_93465:bool) (
             p_x_93466:int) (p_i_93467:int) (i_1016:int) =
   if set_flag_93465
   then
     let x_93468 = let u_93474 = if snd s_93464 && not (fst s_93464) then assert false in
                   rand_int () = 0 in
     let sp_93485 = if x_93468 then ((false, false), (x_1015, i_1016)) else (s_93464, (p_x_93466, p_i_93467)) in
     let s_93469 = fst sp_93485 in
     let p_x_93471 = fst (snd sp_93485) in
     let p_i_93472 = snd (snd sp_93485) in
     let s__u_93490 = ((fst s_93469, true), ()) in
     let s_93491 = fst s__u_93490 in
     let s__r_g_93496 = g_1010 s_93491 true p_x_93471 p_i_93472 i_1016 in
     let s_93497 = fst s__r_g_93496 in
     let r_g_2442 = snd s__r_g_93496 in
     f_1014 x_1015 s_93497 true p_x_93471 p_i_93472 r_g_2442
   else
     let sp_93508 =
       if true then ((false, false), (x_1015, i_1016)) else (s_93464, (p_x_93466, p_i_93467))
     in
     let s_93509 = fst sp_93508 in
     let p_x_93511 = fst (snd sp_93508) in
     let p_i_93512 = snd (snd sp_93508) in
     let s__u_93513 = ((fst s_93509, true), ()) in
     let s_93514 = fst s__u_93513 in
     let s__r_g_93516 = g_1010 s_93514 true p_x_93511 p_i_93512 i_1016 in
     let s_93517 = fst s__r_g_93516 in
     let r_g_93518 = snd s__r_g_93516 in
     f_1014 x_1015 s_93517 true p_x_93511 p_i_93512 r_g_93518
 in
 let rec ha1_2305 (s_93528:(bool * bool)) (set_flag_93529:bool) (p_x_93530:int) (
                 p_i_93531:int) (x_1018:int) =
   let s__u_93536 = ((fst s_93528, true), ()) in
   let s_93537 = fst s__u_93536 in
   let s__u_93542 = ((true, snd s_93537), ()) in
   let s_93543 = fst s__u_93542 in
   ha1_2305 s_93543 set_flag_93529 0 0 x_1018
 in
 let rec ha2_2302 (s_93551:(bool * bool)) (set_flag_93552:bool) (p_x_93553:int) (
                 p_i_93554:int) (x_1020:int) =
   let s__u_93559 = ((fst s_93551, true), ()) in
   let s_93560 = fst s__u_93559 in
   let s__u_93565 = ((true, snd s_93560), ()) in
   let s_93566 = fst s__u_93565 in
   ha2_2302 s_93566 set_flag_93552 0 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_93576:(bool * bool)) (set_flag_93577:bool) (
                  p_x_93578:int) (p_i_93579:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_93584 = ((fst s_93576, true), ()) in
   let s_93585 = fst s__u_93584 in
   if x_1022 < 0
   then
     (s_93585, x_1022)
   else
     let s__r_f_93590 = f_1023 s_93585 set_flag_93577 0 0 x_1022 in
     let s_93591 = fst s__r_f_93590 in
     let r_f_2443 = snd s__r_f_93590 in
     walk_1021 r_f_2443 s_93591 set_flag_93577 0 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_93607:(bool * bool)) (set_flag_93608:bool) (
                 p_x_93609:int) (p_i_93610:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_93615 = ((fst s_93607, true), ()) in
   let s_93616 = fst s__u_93615 in
   if x_1025 < 0
   then
     (s_93616, x_1025)
   else
     let s__r_f_93621 = f_1026 s_93616 set_flag_93608 0 0 x_1025 in
     let s_93622 = fst s__r_f_93621 in
     let r_f_2444 = snd s__r_f_93621 in
     let s__r_f_93625 = f_1026 s_93622 set_flag_93608 0 0 r_f_2444 in
     let s_93626 = fst s__r_f_93625 in
     let r_f_2445 = snd s__r_f_93625 in
     run_1024 r_f_2445 s_93626 set_flag_93608 0 0 f_1026
 in
 let rec life_2300 (s_93640:(bool * bool)) (set_flag_93641:bool) (p_x_93642:int) (
                  p_i_93643:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_93648 = ((fst s_93640, true), ()) in
     let s_93649 = fst s__u_93648 in
     if x_1028 < 0
     then
       let s__r_app_93660 = app_2308 walk_1021 x_1028 s_93649 set_flag_93641 0 0 1 in
       let s_93661 = fst s__r_app_93660 in
       let r_app_2447 = snd s__r_app_93660 in
       ha1_2305 s_93661 set_flag_93641 0 0 r_app_2447
     else
       let s__r_app_93674 = app_2308 run_1024 x_1028 s_93649 set_flag_93641 0 0 1 in
       let s_93675 = fst s__r_app_93674 in
       let r_app_2446 = snd s__r_app_93674 in
       ha2_2302 s_93675 set_flag_93641 0 0 r_app_2446
   else
     life_2300 s_93640 set_flag_93641 0 0 x_1028
 in
 let main_1029 (s_93685:(bool * bool)) (set_flag_93686:bool) (p_x_93687:int) (
              p_i_93688:int) (x_2295:unit) = life_2300 s_93685 set_flag_93686 0 0 (rand_int ())
 in
 let s__r_main_93693 = main_1029 (false, false) false 0 0 () in
 let r_main_2448 = snd s__r_main_93693 in
 r_main_2448

###inline:
 let g_1010 (s_93441:(bool * bool)) (set_flag_93442:bool) (p_x_93443:int) (p_i_93444:int) (i_1011:int) =
   (s_93441, 
    (fun (s_93447:(bool * bool)) (set_flag_93448:bool) (p_x_93449:int) (p_i_93450:int) (x_1012:int) ->
       (s_93447, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              int ->
                                ((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int)) ->
                                  ((bool * bool) * int)))
             (x_1015:int) (s_93464:(bool * bool)) (set_flag_93465:bool) (
             p_x_93466:int) (p_i_93467:int) (i_1016:int) =
   if set_flag_93465
   then
     let x_93468 = let u_93474 = if snd s_93464 && not (fst s_93464) then assert false in
                   rand_int () = 0 in
     let sp_93485 = if x_93468 then ((false, false), (x_1015, i_1016)) else (s_93464, (p_x_93466, p_i_93467)) in
     let p_x_93471 = fst (snd sp_93485) in
     let p_i_93472 = snd (snd sp_93485) in
     let s__u_93490 = ((fst (fst sp_93485), true), ()) in
     let s__r_g_93496 = g_1010 (fst s__u_93490) true p_x_93471 p_i_93472 i_1016 in
     f_1014 x_1015 (fst s__r_g_93496) true p_x_93471 p_i_93472 (snd s__r_g_93496)
   else
     let sp_93508 =
       if true then ((false, false), (x_1015, i_1016)) else (s_93464, (p_x_93466, p_i_93467))
     in
     let p_x_93511 = fst (snd sp_93508) in
     let p_i_93512 = snd (snd sp_93508) in
     let s__u_93513 = ((fst (fst sp_93508), true), ()) in
     let s__r_g_93516 = g_1010 (fst s__u_93513) true p_x_93511 p_i_93512 i_1016 in
     f_1014 x_1015 (fst s__r_g_93516) true p_x_93511 p_i_93512 (snd s__r_g_93516)
 in
 let rec ha1_2305 (s_93528:(bool * bool)) (set_flag_93529:bool) (p_x_93530:int) (
                 p_i_93531:int) (x_1018:int) =
   let s__u_93536 = ((fst s_93528, true), ()) in
   let s__u_93542 = ((true, snd (fst s__u_93536)), ()) in
   ha1_2305 (fst s__u_93542) set_flag_93529 0 0 x_1018
 in
 let rec ha2_2302 (s_93551:(bool * bool)) (set_flag_93552:bool) (p_x_93553:int) (
                 p_i_93554:int) (x_1020:int) =
   let s__u_93559 = ((fst s_93551, true), ()) in
   let s__u_93565 = ((true, snd (fst s__u_93559)), ()) in
   ha2_2302 (fst s__u_93565) set_flag_93552 0 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_93576:(bool * bool)) (set_flag_93577:bool) (
                  p_x_93578:int) (p_i_93579:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_93584 = ((fst s_93576, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_93584, x_1022)
   else
     let s__r_f_93590 = f_1023 (fst s__u_93584) set_flag_93577 0 0 x_1022 in
     walk_1021 (snd s__r_f_93590) (fst s__r_f_93590) set_flag_93577 0 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_93607:(bool * bool)) (set_flag_93608:bool) (
                 p_x_93609:int) (p_i_93610:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_93615 = ((fst s_93607, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_93615, x_1025)
   else
     let s__r_f_93621 = f_1026 (fst s__u_93615) set_flag_93608 0 0 x_1025 in
     let s__r_f_93625 = f_1026 (fst s__r_f_93621) set_flag_93608 0 0 (snd s__r_f_93621) in
     run_1024 (snd s__r_f_93625) (fst s__r_f_93625) set_flag_93608 0 0 f_1026
 in
 let rec life_2300 (s_93640:(bool * bool)) (set_flag_93641:bool) (p_x_93642:int) (
                  p_i_93643:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_93648 = ((fst s_93640, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_93660 = app_2308 walk_1021 x_1028 (fst s__u_93648) set_flag_93641 0 0 1 in
       ha1_2305 (fst s__r_app_93660) set_flag_93641 0 0 (snd s__r_app_93660)
     else
       let s__r_app_93674 = app_2308 run_1024 x_1028 (fst s__u_93648) set_flag_93641 0 0 1 in
       ha2_2302 (fst s__r_app_93674) set_flag_93641 0 0 (snd s__r_app_93674)
   else
     life_2300 s_93640 set_flag_93641 0 0 x_1028
 in
 let main_1029 (s_93685:(bool * bool)) (set_flag_93686:bool) (p_x_93687:int) (
              p_i_93688:int) (x_2295:unit) = life_2300 s_93685 set_flag_93686 0 0 (rand_int ())
 in
 let s__r_main_93693 = main_1029 (false, false) false 0 0 () in
 snd s__r_main_93693

###CPS:
 (let g_1010 s_93441 set_flag_93442 p_x_93443 p_i_93444 i_1011 k_g_94660 =
    k_g_94660
      (s_93441, 
       (fun s_93447 set_flag_93448 p_x_93449 p_i_93450 x_1012 k_g_94682 -> k_g_94682 (s_93447, x_1012 - i_1011)))
  in
  let app_2308 f_1014 x_1015 s_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 =
    if set_flag_93465
    then
      let x_93468 k_app_x_94725 =
        let u_93474 k_app_x_u_94742 =
          if snd s_93464
          then
            if not (fst s_93464) then <|fail|> () k_app_x_u_94742 else k_app_x_u_94742 ()
          else
            k_app_x_u_94742 ()
        in
        u_93474 (fun u_94759 -> rand_int_cps () (fun x_94747 -> k_app_x_94725 (x_94747 = 0)))
      in
      x_93468
        (fun x_94920 ->
           let sp_93485 k_app_sp_94793 =
             if x_94920
             then
               k_app_sp_94793 ((false, false), (x_1015, i_1016))
             else
               k_app_sp_94793 (s_93464, (p_x_93466, p_i_93467))
           in
           sp_93485
             (fun sp_94919 ->
                let s__u_93490 k_app_s__u_94803 = k_app_s__u_94803 ((fst (fst sp_94919), true), ()) in
                s__u_93490
                  (fun s__u_94916 ->
                     let s__r_g_93496 k_app_s__r_g_94838 =
                       (g_1010 (fst s__u_94916) true (fst (snd sp_94919)) (snd (snd sp_94919)))
                         i_1016 k_app_s__r_g_94838
                     in
                     s__r_g_93496
                       (fun s__r_g_94915 ->
                          (f_1014 x_1015 (fst s__r_g_94915) true (fst (snd sp_94919)) (snd (snd sp_94919)))
                            (snd s__r_g_94915) k_app_94721))))
    else
      let sp_93508 k_app_sp_94954 = k_app_sp_94954 ((false, false), (x_1015, i_1016)) in
      sp_93508
        (fun sp_95080 ->
           let s__u_93513 k_app_s__u_94964 = k_app_s__u_94964 ((fst (fst sp_95080), true), ()) in
           s__u_93513
             (fun s__u_95077 ->
                let s__r_g_93516 k_app_s__r_g_94999 =
                  (g_1010 (fst s__u_95077) true (fst (snd sp_95080)) (snd (snd sp_95080)))
                    i_1016 k_app_s__r_g_94999
                in
                s__r_g_93516
                  (fun s__r_g_95076 ->
                     (f_1014 x_1015 (fst s__r_g_95076) true (fst (snd sp_95080)) (snd (snd sp_95080)))
                       (snd s__r_g_95076) k_app_94721)))
  in
  let rec ha1_2305 s_93528 set_flag_93529 p_x_93530 p_i_93531 x_1018 k_ha1_95112 =
    let s__u_93536 k_ha1_s__u_95116 = k_ha1_s__u_95116 ((fst s_93528, true), ()) in
    s__u_93536
      (fun s__u_95156 ->
         let s__u_93542 k_ha1_s__u_95130 = k_ha1_s__u_95130 ((true, snd (fst s__u_95156)), ()) in
         s__u_93542 (fun s__u_95155 -> (ha1_2305 (fst s__u_95155) set_flag_93529 0 0) x_1018 k_ha1_95112))
  in
  let rec ha2_2302 s_93551 set_flag_93552 p_x_93553 p_i_93554 x_1020 k_ha2_95167 =
    let s__u_93559 k_ha2_s__u_95171 = k_ha2_s__u_95171 ((fst s_93551, true), ()) in
    s__u_93559
      (fun s__u_95211 ->
         let s__u_93565 k_ha2_s__u_95185 = k_ha2_s__u_95185 ((true, snd (fst s__u_95211)), ()) in
         s__u_93565 (fun s__u_95210 -> (ha2_2302 (fst s__u_95210) set_flag_93552 0 0) x_1020 k_ha2_95167))
  in
  let rec walk_1021 x_1022 s_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 =
    let s__u_93584 k_walk_s__u_95233 = k_walk_s__u_95233 ((fst s_93576, true), ()) in
    s__u_93584
      (fun s__u_95314 ->
         if x_1022 < 0
         then
           k_walk_95229 (fst s__u_95314, x_1022)
         else
           let s__r_f_93590 k_walk_s__r_f_95260 =
             (f_1023 (fst s__u_95314) set_flag_93577 0 0) x_1022 k_walk_s__r_f_95260
           in
           s__r_f_93590
             (fun s__r_f_95309 ->
                (walk_1021 (snd s__r_f_95309) (fst s__r_f_95309) set_flag_93577 0 0) f_1023 k_walk_95229))
  in
  let rec run_1024 x_1025 s_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 =
    let s__u_93615 k_run_s__u_95344 = k_run_s__u_95344 ((fst s_93607, true), ()) in
    s__u_93615
      (fun s__u_95442 ->
         if x_1025 < 0
         then
           k_run_95340 (fst s__u_95442, x_1025)
         else
           let s__r_f_93621 k_run_s__r_f_95371 =
             (f_1026 (fst s__u_95442) set_flag_93608 0 0) x_1025 k_run_s__r_f_95371
           in
           s__r_f_93621
             (fun s__r_f_95437 ->
                let s__r_f_93625 k_run_s__r_f_95387 =
                  (f_1026 (fst s__r_f_95437) set_flag_93608 0 0) (snd s__r_f_95437) k_run_s__r_f_95387
                in
                s__r_f_93625
                  (fun s__r_f_95436 ->
                     (run_1024 (snd s__r_f_95436) (fst s__r_f_95436) set_flag_93608 0 0) f_1026 k_run_95340)))
  in
  let rec life_2300 s_93640 set_flag_93641 p_x_93642 p_i_93643 x_1028 k_life_95461 =
    rand_int_cps
      () 
      (fun x_95464 ->
         if x_95464 > 0
         then
           let s__u_93648 k_life_s__u_95479 = k_life_s__u_95479 ((fst s_93640, true), ()) in
           s__u_93648
             (fun s__u_95620 ->
                if x_1028 < 0
                then
                  let s__r_app_93660 k_life_s__r_app_95532 =
                    (app_2308 walk_1021 x_1028 (fst s__u_95620) set_flag_93641 0 0) 1 k_life_s__r_app_95532
                  in
                  s__r_app_93660
                    (fun s__r_app_95552 ->
                       (ha1_2305 (fst s__r_app_95552) set_flag_93641 0 0) (snd s__r_app_95552) k_life_95461)
                else
                  let s__r_app_93674 k_life_s__r_app_95595 =
                    (app_2308 run_1024 x_1028 (fst s__u_95620) set_flag_93641 0 0) 1 k_life_s__r_app_95595
                  in
                  s__r_app_93674
                    (fun s__r_app_95615 ->
                       (ha2_2302 (fst s__r_app_95615) set_flag_93641 0 0) (snd s__r_app_95615) k_life_95461))
         else
           (life_2300 s_93640 set_flag_93641 0 0) x_1028 k_life_95461)
  in
  let main_1029 s_93685 set_flag_93686 p_x_93687 p_i_93688 x_2295 k_main_95649 =
    rand_int_cps () (fun x_95673 -> (life_2300 s_93685 set_flag_93686 0 0) x_95673 k_main_95649)
  in
  let s__r_main_93693 k_s__r_main_95753 = ((((main_1029 (false, false)) false) 0) 0) () k_s__r_main_95753 in
  s__r_main_93693 (fun s__r_main_95759 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_93441 s1_93441 set_flag_93442 p_x_93443 p_i_93444 i_1011 k_g_94660 =
    k_g_94660
      s0_93441 s1_93441 
      (fun s0_93447 s1_93447 set_flag_93448 p_x_93449 p_i_93450 x_1012 k_g_94682 ->
         k_g_94682 s0_93447 s1_93447 (x_1012 - i_1011))
  in
  let app_2308 f_1014 x_1015 s0_93464 s1_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 =
    if set_flag_93465
    then
      let x_93468 k_app_x_94725 =
        let u_93474 k_app_x_u_94742 =
          if s1_93464
          then
            if not s0_93464 then <|fail|> () k_app_x_u_94742 else k_app_x_u_94742 ()
          else
            k_app_x_u_94742 ()
        in
        u_93474 (fun u_94759 -> rand_int_cps () (fun x_94747 -> k_app_x_94725 (x_94747 = 0)))
      in
      x_93468
        (fun x_94920 ->
           let sp_93485 k_app_sp_94793 =
             if x_94920
             then
               k_app_sp_94793 false false x_1015 i_1016
             else
               k_app_sp_94793 s0_93464 s1_93464 p_x_93466 p_i_93467
           in
           sp_93485
             (fun sp00_94919 sp01_94919 sp10_94919 sp11_94919 ->
                g_1010
                  sp00_94919 true true sp10_94919 sp11_94919 i_1016 
                  (fun s__r_g00_94915 s__r_g01_94915 s__r_g1_94915 ->
                     f_1014
                       x_1015 s__r_g00_94915 s__r_g01_94915 true sp10_94919 
                       sp11_94919 s__r_g1_94915 k_app_94721)))
    else
      g_1010
        false true true x_1015 i_1016 i_1016 
        (fun s__r_g00_95076 s__r_g01_95076 s__r_g1_95076 ->
           f_1014 x_1015 s__r_g00_95076 s__r_g01_95076 true x_1015 i_1016 s__r_g1_95076 k_app_94721)
  in
  let rec ha1_2305 s0_93528 s1_93528 set_flag_93529 p_x_93530 p_i_93531 x_1018 k_ha1_95112 =
    ha1_2305 true true set_flag_93529 0 0 x_1018 k_ha1_95112
  in
  let rec ha2_2302 s0_93551 s1_93551 set_flag_93552 p_x_93553 p_i_93554 x_1020 k_ha2_95167 =
    ha2_2302 true true set_flag_93552 0 0 x_1020 k_ha2_95167
  in
  let rec walk_1021 x_1022 s0_93576 s1_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 =
    if x_1022 < 0
    then
      k_walk_95229 s0_93576 true x_1022
    else
      f_1023
        s0_93576 true set_flag_93577 0 0 x_1022 
        (fun s__r_f00_95309 s__r_f01_95309 s__r_f1_95309 ->
           walk_1021 s__r_f1_95309 s__r_f00_95309 s__r_f01_95309 set_flag_93577 0 0 f_1023 k_walk_95229)
  in
  let rec run_1024 x_1025 s0_93607 s1_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 =
    if x_1025 < 0
    then
      k_run_95340 s0_93607 true x_1025
    else
      f_1026
        s0_93607 true set_flag_93608 0 0 x_1025 
        (fun s__r_f00_95437 s__r_f01_95437 s__r_f1_95437 ->
           f_1026
             s__r_f00_95437 s__r_f01_95437 set_flag_93608 0 0 s__r_f1_95437 
             (fun s__r_f00_95436 s__r_f01_95436 s__r_f1_95436 ->
                run_1024 s__r_f1_95436 s__r_f00_95436 s__r_f01_95436 set_flag_93608 0 0 f_1026 k_run_95340))
  in
  let rec life_2300 s0_93640 s1_93640 set_flag_93641 p_x_93642 p_i_93643 x_1028 k_life_95461 =
    rand_int_cps
      () 
      (fun x_95464 ->
         if x_95464 > 0
         then
           if x_1028 < 0
           then
             app_2308
               walk_1021 x_1028 s0_93640 true set_flag_93641 0 0 1 
               (fun s__r_app00_95552 s__r_app01_95552 s__r_app1_95552 ->
                  ha1_2305 s__r_app00_95552 s__r_app01_95552 set_flag_93641 0 0 s__r_app1_95552 k_life_95461)
           else
             app_2308
               run_1024 x_1028 s0_93640 true set_flag_93641 0 0 1 
               (fun s__r_app00_95615 s__r_app01_95615 s__r_app1_95615 ->
                  ha2_2302 s__r_app00_95615 s__r_app01_95615 set_flag_93641 0 0 s__r_app1_95615 k_life_95461)
         else
           life_2300 s0_93640 s1_93640 set_flag_93641 0 0 x_1028 k_life_95461)
  in
  let main_1029 s0_93685 s1_93685 set_flag_93686 p_x_93687 p_i_93688 x_2295 k_main_95649 =
    rand_int_cps () (fun x_95673 -> life_2300 s0_93685 s1_93685 set_flag_93686 0 0 x_95673 k_main_95649)
  in
  main_1029 false false false 0 0 () (fun s__r_main00_95759 s__r_main01_95759 s__r_main1_95759 -> {end}) #
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_93441 s1_93441 set_flag_93442 p_x_93443 p_i_93444 i_1011 k_g_94660 =
    k_g_94660
      s0_93441 s1_93441 
      (fun s0_93447 s1_93447 set_flag_93448 p_x_93449 p_i_93450 x_1012 k_g_94682 ->
         k_g_94682 s0_93447 s1_93447 (x_1012 - i_1011))
  in
  let app_2308 f_1014 x_1015 s0_93464 s1_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 =
    if set_flag_93465
    then
      let x_93468 k_app_x_94725 =
        let u_93474 k_app_x_u_94742 =
          if s1_93464
          then
            if not s0_93464 then <|fail|> () k_app_x_u_94742 else k_app_x_u_94742 ()
          else
            k_app_x_u_94742 ()
        in
        u_93474 (fun u_94759 -> rand_int_cps () (fun x_94747 -> k_app_x_94725 (x_94747 = 0)))
      in
      x_93468
        (fun x_94920 ->
           let sp_93485 k_app_sp_94793 =
             if x_94920
             then
               k_app_sp_94793 false false x_1015 i_1016
             else
               k_app_sp_94793 s0_93464 s1_93464 p_x_93466 p_i_93467
           in
           sp_93485
             (fun sp00_94919 sp01_94919 sp10_94919 sp11_94919 ->
                g_1010
                  sp00_94919 true true sp10_94919 sp11_94919 i_1016 
                  (fun s__r_g00_94915 s__r_g01_94915 s__r_g1_94915 ->
                     f_1014
                       x_1015 s__r_g00_94915 s__r_g01_94915 true sp10_94919 
                       sp11_94919 s__r_g1_94915 k_app_94721)))
    else
      g_1010
        false true true x_1015 i_1016 i_1016 
        (fun s__r_g00_95076 s__r_g01_95076 s__r_g1_95076 ->
           f_1014 x_1015 s__r_g00_95076 s__r_g01_95076 true x_1015 i_1016 s__r_g1_95076 k_app_94721)
  in
  let rec ha1_2305 s0_93528 s1_93528 set_flag_93529 p_x_93530 p_i_93531 x_1018 k_ha1_95112 = _|_ in
  let rec ha2_2302 s0_93551 s1_93551 set_flag_93552 p_x_93553 p_i_93554 x_1020 k_ha2_95167 = _|_ in
  let rec walk_1021 x_1022 s0_93576 s1_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 =
    if x_1022 < 0
    then
      k_walk_95229 s0_93576 true x_1022
    else
      f_1023
        s0_93576 true set_flag_93577 0 0 x_1022 
        (fun s__r_f00_95309 s__r_f01_95309 s__r_f1_95309 ->
           walk_1021 s__r_f1_95309 s__r_f00_95309 s__r_f01_95309 set_flag_93577 0 0 f_1023 k_walk_95229)
  in
  let rec run_1024 x_1025 s0_93607 s1_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 =
    if x_1025 < 0
    then
      k_run_95340 s0_93607 true x_1025
    else
      f_1026
        s0_93607 true set_flag_93608 0 0 x_1025 
        (fun s__r_f00_95437 s__r_f01_95437 s__r_f1_95437 ->
           f_1026
             s__r_f00_95437 s__r_f01_95437 set_flag_93608 0 0 s__r_f1_95437 
             (fun s__r_f00_95436 s__r_f01_95436 s__r_f1_95436 ->
                run_1024 s__r_f1_95436 s__r_f00_95436 s__r_f01_95436 set_flag_93608 0 0 f_1026 k_run_95340))
  in
  let rec life_2300 s0_93640 s1_93640 set_flag_93641 p_x_93642 p_i_93643 x_1028 k_life_95461 =
    rand_int_cps
      () 
      (fun x_95464 ->
         if x_95464 > 0
         then
           if x_1028 < 0
           then
             app_2308
               walk_1021 x_1028 s0_93640 true set_flag_93641 0 0 1 
               (fun s__r_app00_95552 s__r_app01_95552 s__r_app1_95552 ->
                  ha1_2305 s__r_app00_95552 s__r_app01_95552 set_flag_93641 0 0 s__r_app1_95552 k_life_95461)
           else
             app_2308
               run_1024 x_1028 s0_93640 true set_flag_93641 0 0 1 
               (fun s__r_app00_95615 s__r_app01_95615 s__r_app1_95615 ->
                  ha2_2302 s__r_app00_95615 s__r_app01_95615 set_flag_93641 0 0 s__r_app1_95615 k_life_95461)
         else
           life_2300 s0_93640 s1_93640 set_flag_93641 0 0 x_1028 k_life_95461)
  in
  let main_1029 s0_93685 s1_93685 set_flag_93686 p_x_93687 p_i_93688 x_2295 k_main_95649 =
    rand_int_cps () (fun x_95673 -> life_2300 s0_93685 s1_93685 set_flag_93686 0 0 x_95673 k_main_95649)
  in
  main_1029 false false false 0 0 () (fun s__r_main00_95759 s__r_main01_95759 s__r_main1_95759 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 31)::
Main: main_97389
  main_97389 -> (main_1029 false false false 0 0 () f_97404).
  app_2308 f_1014 x_1015 s0_93464 s1_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 when set_flag_93465 ->
      (x_93468 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015
       (f_app_97393 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721)).
  app_2308 f_1014 x_1015 s0_93464 s1_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 when 
      (not set_flag_93465) ->
      (g_1010 false true true x_1015 i_1016 i_1016
       (f_app_97396 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721)).
  br_f_life_97407 b_97408 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when b_97408 ->
      (app_2308 walk_1021 x_1028 s0_93640 true set_flag_93641 0 0 1
       (f_life_97401 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461)).
  br_f_life_97407 b_97408 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when 
      (not b_97408) ->
      (app_2308 run_1024 x_1028 s0_93640 true set_flag_93641 0 0 1
       (f_life_97402 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461)).
  br_u_97405 b_97406 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when b_97406 ->
      (fail_97409 true k_app_x_u_94742).
  br_u_97405 b_97406 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when 
      (not b_97406) -> (k_app_x_u_94742 ()).
  f_97404 s__r_main00_95759 s__r_main01_95759 s__r_main1_95759 -> end.
  f_app_97393 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721 x_94920 ->
      (sp_93485 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920
       (f_app_97394 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 f_1014 k_app_94721)).
  f_app_97394 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 f_1014 k_app_94721 sp00_94919 
  sp01_94919 sp10_94919 sp11_94919 ->
      (g_1010 sp00_94919 true true sp10_94919 sp11_94919 i_1016
       (f_app_97395 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 sp00_94919 sp01_94919 sp10_94919
        sp11_94919 x_1015 x_94920 f_1014 k_app_94721)).
  f_app_97395 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 sp00_94919 sp01_94919 sp10_94919 sp11_94919 
  x_1015 x_94920 f_1014 k_app_94721 s__r_g00_94915 s__r_g01_94915 s__r_g1_94915 ->
      (f_1014 x_1015 s__r_g00_94915 s__r_g01_94915 true sp10_94919 sp11_94919 s__r_g1_94915 k_app_94721).
  f_app_97396 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721 s__r_g00_95076 
  s__r_g01_95076 s__r_g1_95076 ->
      (f_1014 x_1015 s__r_g00_95076 s__r_g01_95076 true x_1015 i_1016 s__r_g1_95076 k_app_94721).
  f_g_97390 i_1011 p_i_93444 p_x_93443 s0_93441 s1_93441 set_flag_93442 s0_93447 s1_93447 set_flag_93448 p_x_93449 
  p_i_93450 x_1012 k_g_94682 -> (k_g_94682 s0_93447 s1_93447 (x_1012 - i_1011)).
  f_life_97400 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when 
      (x_95464 > 0) ->
      (br_f_life_97407 (x_1028 < 0) p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464).
  f_life_97400 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when 
      (not (x_95464 > 0)) -> (life_2300 s0_93640 s1_93640 set_flag_93641 0 0 x_1028 k_life_95461).
  f_life_97401 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461 s__r_app00_95552 
  s__r_app01_95552 s__r_app1_95552 ->
      (ha1_2305 s__r_app00_95552 s__r_app01_95552 set_flag_93641 0 0 s__r_app1_95552 k_life_95461).
  f_life_97402 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461 s__r_app00_95615 
  s__r_app01_95615 s__r_app1_95615 ->
      (ha2_2302 s__r_app00_95615 s__r_app01_95615 set_flag_93641 0 0 s__r_app1_95615 k_life_95461).
  f_main_97403 p_i_93688 p_x_93687 s0_93685 s1_93685 set_flag_93686 x_2295 k_main_95649 x_95673 ->
      (life_2300 s0_93685 s1_93685 set_flag_93686 0 0 x_95673 k_main_95649).
  f_run_97398 p_i_93610 p_x_93609 s0_93607 s1_93607 set_flag_93608 x_1025 f_1026 k_run_95340 s__r_f00_95437 
  s__r_f01_95437 s__r_f1_95437 ->
      (f_1026 s__r_f00_95437 s__r_f01_95437 set_flag_93608 0 0 s__r_f1_95437
       (f_run_97399 p_i_93610 p_x_93609 s0_93607 s1_93607 s__r_f00_95437 s__r_f01_95437 s__r_f1_95437 set_flag_93608
        x_1025 f_1026 k_run_95340)).
  f_run_97399 p_i_93610 p_x_93609 s0_93607 s1_93607 s__r_f00_95437 s__r_f01_95437 s__r_f1_95437 set_flag_93608 x_1025 
  f_1026 k_run_95340 s__r_f00_95436 s__r_f01_95436 s__r_f1_95436 ->
      (run_1024 s__r_f1_95436 s__r_f00_95436 s__r_f01_95436 set_flag_93608 0 0 f_1026 k_run_95340).
  f_walk_97397 p_i_93579 p_x_93578 s0_93576 s1_93576 set_flag_93577 x_1022 f_1023 k_walk_95229 s__r_f00_95309 
  s__r_f01_95309 s__r_f1_95309 ->
      (walk_1021 s__r_f1_95309 s__r_f00_95309 s__r_f01_95309 set_flag_93577 0 0 f_1023 k_walk_95229).
  f_x_97391 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_94725 u_94759 ->
      (rand_int (f_x_97392 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 u_94759 x_1015 k_app_x_94725)).
  f_x_97392 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 u_94759 x_1015 k_app_x_94725 x_94747 ->
      (k_app_x_94725 (x_94747 = 0)).
  fail_97409 b k -> {fail} => (k ()).
  g_1010 s0_93441 s1_93441 set_flag_93442 p_x_93443 p_i_93444 i_1011 k_g_94660 ->
      (k_g_94660 s0_93441 s1_93441 (f_g_97390 i_1011 p_i_93444 p_x_93443 s0_93441 s1_93441 set_flag_93442)).
  ha1_2305 s0_93528 s1_93528 set_flag_93529 p_x_93530 p_i_93531 x_1018 k_ha1_95112 -> _|_.
  ha2_2302 s0_93551 s1_93551 set_flag_93552 p_x_93553 p_i_93554 x_1020 k_ha2_95167 -> _|_.
  life_2300 s0_93640 s1_93640 set_flag_93641 p_x_93642 p_i_93643 x_1028 k_life_95461 ->
      (rand_int (f_life_97400 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461)).
  main_1029 s0_93685 s1_93685 set_flag_93686 p_x_93687 p_i_93688 x_2295 k_main_95649 ->
      (rand_int (f_main_97403 p_i_93688 p_x_93687 s0_93685 s1_93685 set_flag_93686 x_2295 k_main_95649)).
  run_1024 x_1025 s0_93607 s1_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 when 
      (x_1025 < 0) -> (k_run_95340 s0_93607 true x_1025).
  run_1024 x_1025 s0_93607 s1_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_93607 true set_flag_93608 0 0 x_1025
       (f_run_97398 p_i_93610 p_x_93609 s0_93607 s1_93607 set_flag_93608 x_1025 f_1026 k_run_95340)).
  sp_93485 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 k_app_sp_94793 when x_94920 ->
      (k_app_sp_94793 false false x_1015 i_1016).
  sp_93485 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 k_app_sp_94793 when 
      (not x_94920) -> (k_app_sp_94793 s0_93464 s1_93464 p_x_93466 p_i_93467).
  u_93474 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when s1_93464 ->
      (br_u_97405 (not s0_93464) i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742).
  u_93474 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when 
      (not s1_93464) -> (k_app_x_u_94742 ()).
  walk_1021 x_1022 s0_93576 s1_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 when 
      (x_1022 < 0) -> (k_walk_95229 s0_93576 true x_1022).
  walk_1021 x_1022 s0_93576 s1_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_93576 true set_flag_93577 0 0 x_1022
       (f_walk_97397 p_i_93579 p_x_93578 s0_93576 s1_93576 set_flag_93577 x_1022 f_1023 k_walk_95229)).
  x_93468 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_94725 ->
      (u_93474 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015
       (f_x_97391 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_94725)).
Types:
  main_97389 : X
  app_2308 : ((int ->
               bool ->
               bool ->
               bool ->
               int ->
               int ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X) ->
              int -> bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X)
  br_f_life_97407 : (bool -> int -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_97405 : (bool -> int -> int -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_97400 : (int -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_97409 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int ->
            int ->
            (bool -> bool -> (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              int ->
              (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_93485 : (int -> int -> int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> int -> X) -> X)
  u_93474 : (int -> int -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               int ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X)

(31-1) Abstracting ... DONE!

(31-2) Checking HORS ... DONE!

Error trace::
  main_97389 ... --> 
  main_1029 ... --> 
  f_main_97403 ... --> 
  life_2300 ... --> 
  f_life_97400 [1/2] ... --> 
  br_f_life_97407 [2/2] ... --> 
  app_2308 [1/2] ... --> 
  x_93468 ... --> 
  u_93474 [1/2] ... --> 
  br_u_97405 [1/2] ... --> 
  fail_97409 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0

(31-3) Checking counterexample ... DONE!

(31-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 32)::
Main: main_97389
  main_97389 -> (main_1029 false false false 0 0 () f_97404).
  app_2308 f_1014 x_1015 s0_93464 s1_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 when set_flag_93465 ->
      (x_93468 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015
       (f_app_97393 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721)).
  app_2308 f_1014 x_1015 s0_93464 s1_93464 set_flag_93465 p_x_93466 p_i_93467 i_1016 k_app_94721 when 
      (not set_flag_93465) ->
      (g_1010 false true true x_1015 i_1016 i_1016
       (f_app_97396 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721)).
  br_f_life_97407 b_97408 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when b_97408 ->
      (app_2308 walk_1021 x_1028 s0_93640 true set_flag_93641 0 0 1
       (f_life_97401 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461)).
  br_f_life_97407 b_97408 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when 
      (not b_97408) ->
      (app_2308 run_1024 x_1028 s0_93640 true set_flag_93641 0 0 1
       (f_life_97402 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461)).
  br_u_97405 b_97406 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when b_97406 ->
      (fail_97409 true k_app_x_u_94742).
  br_u_97405 b_97406 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when 
      (not b_97406) -> (k_app_x_u_94742 ()).
  f_97404 s__r_main00_95759 s__r_main01_95759 s__r_main1_95759 -> end.
  f_app_97393 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721 x_94920 ->
      (sp_93485 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920
       (f_app_97394 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 f_1014 k_app_94721)).
  f_app_97394 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 f_1014 k_app_94721 sp00_94919 
  sp01_94919 sp10_94919 sp11_94919 ->
      (g_1010 sp00_94919 true true sp10_94919 sp11_94919 i_1016
       (f_app_97395 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 sp00_94919 sp01_94919 sp10_94919
        sp11_94919 x_1015 x_94920 f_1014 k_app_94721)).
  f_app_97395 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 sp00_94919 sp01_94919 sp10_94919 sp11_94919 
  x_1015 x_94920 f_1014 k_app_94721 s__r_g00_94915 s__r_g01_94915 s__r_g1_94915 ->
      (f_1014 x_1015 s__r_g00_94915 s__r_g01_94915 true sp10_94919 sp11_94919 s__r_g1_94915 k_app_94721).
  f_app_97396 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 f_1014 k_app_94721 s__r_g00_95076 
  s__r_g01_95076 s__r_g1_95076 ->
      (f_1014 x_1015 s__r_g00_95076 s__r_g01_95076 true x_1015 i_1016 s__r_g1_95076 k_app_94721).
  f_g_97390 i_1011 p_i_93444 p_x_93443 s0_93441 s1_93441 set_flag_93442 s0_93447 s1_93447 set_flag_93448 p_x_93449 
  p_i_93450 x_1012 k_g_94682 -> (k_g_94682 s0_93447 s1_93447 (x_1012 - i_1011)).
  f_life_97400 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when 
      (x_95464 > 0) ->
      (br_f_life_97407 (x_1028 < 0) p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464).
  f_life_97400 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461 x_95464 when 
      (not (x_95464 > 0)) -> (life_2300 s0_93640 s1_93640 set_flag_93641 0 0 x_1028 k_life_95461).
  f_life_97401 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461 s__r_app00_95552 
  s__r_app01_95552 s__r_app1_95552 ->
      (ha1_2305 s__r_app00_95552 s__r_app01_95552 set_flag_93641 0 0 s__r_app1_95552 k_life_95461).
  f_life_97402 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 x_95464 k_life_95461 s__r_app00_95615 
  s__r_app01_95615 s__r_app1_95615 ->
      (ha2_2302 s__r_app00_95615 s__r_app01_95615 set_flag_93641 0 0 s__r_app1_95615 k_life_95461).
  f_main_97403 p_i_93688 p_x_93687 s0_93685 s1_93685 set_flag_93686 x_2295 k_main_95649 x_95673 ->
      (life_2300 s0_93685 s1_93685 set_flag_93686 0 0 x_95673 k_main_95649).
  f_run_97398 p_i_93610 p_x_93609 s0_93607 s1_93607 set_flag_93608 x_1025 f_1026 k_run_95340 s__r_f00_95437 
  s__r_f01_95437 s__r_f1_95437 ->
      (f_1026 s__r_f00_95437 s__r_f01_95437 set_flag_93608 0 0 s__r_f1_95437
       (f_run_97399 p_i_93610 p_x_93609 s0_93607 s1_93607 s__r_f00_95437 s__r_f01_95437 s__r_f1_95437 set_flag_93608
        x_1025 f_1026 k_run_95340)).
  f_run_97399 p_i_93610 p_x_93609 s0_93607 s1_93607 s__r_f00_95437 s__r_f01_95437 s__r_f1_95437 set_flag_93608 x_1025 
  f_1026 k_run_95340 s__r_f00_95436 s__r_f01_95436 s__r_f1_95436 ->
      (run_1024 s__r_f1_95436 s__r_f00_95436 s__r_f01_95436 set_flag_93608 0 0 f_1026 k_run_95340).
  f_walk_97397 p_i_93579 p_x_93578 s0_93576 s1_93576 set_flag_93577 x_1022 f_1023 k_walk_95229 s__r_f00_95309 
  s__r_f01_95309 s__r_f1_95309 ->
      (walk_1021 s__r_f1_95309 s__r_f00_95309 s__r_f01_95309 set_flag_93577 0 0 f_1023 k_walk_95229).
  f_x_97391 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_94725 u_94759 ->
      (rand_int (f_x_97392 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 u_94759 x_1015 k_app_x_94725)).
  f_x_97392 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 u_94759 x_1015 k_app_x_94725 x_94747 ->
      (k_app_x_94725 (x_94747 = 0)).
  fail_97409 b k -> {fail} => (k ()).
  g_1010 s0_93441 s1_93441 set_flag_93442 p_x_93443 p_i_93444 i_1011 k_g_94660 ->
      (k_g_94660 s0_93441 s1_93441 (f_g_97390 i_1011 p_i_93444 p_x_93443 s0_93441 s1_93441 set_flag_93442)).
  ha1_2305 s0_93528 s1_93528 set_flag_93529 p_x_93530 p_i_93531 x_1018 k_ha1_95112 -> _|_.
  ha2_2302 s0_93551 s1_93551 set_flag_93552 p_x_93553 p_i_93554 x_1020 k_ha2_95167 -> _|_.
  life_2300 s0_93640 s1_93640 set_flag_93641 p_x_93642 p_i_93643 x_1028 k_life_95461 ->
      (rand_int (f_life_97400 p_i_93643 p_x_93642 s0_93640 s1_93640 set_flag_93641 x_1028 k_life_95461)).
  main_1029 s0_93685 s1_93685 set_flag_93686 p_x_93687 p_i_93688 x_2295 k_main_95649 ->
      (rand_int (f_main_97403 p_i_93688 p_x_93687 s0_93685 s1_93685 set_flag_93686 x_2295 k_main_95649)).
  run_1024 x_1025 s0_93607 s1_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 when 
      (x_1025 < 0) -> (k_run_95340 s0_93607 true x_1025).
  run_1024 x_1025 s0_93607 s1_93607 set_flag_93608 p_x_93609 p_i_93610 f_1026 k_run_95340 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_93607 true set_flag_93608 0 0 x_1025
       (f_run_97398 p_i_93610 p_x_93609 s0_93607 s1_93607 set_flag_93608 x_1025 f_1026 k_run_95340)).
  sp_93485 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 k_app_sp_94793 when x_94920 ->
      (k_app_sp_94793 false false x_1015 i_1016).
  sp_93485 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 x_94920 k_app_sp_94793 when 
      (not x_94920) -> (k_app_sp_94793 s0_93464 s1_93464 p_x_93466 p_i_93467).
  u_93474 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when s1_93464 ->
      (br_u_97405 (not s0_93464) i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742).
  u_93474 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_u_94742 when 
      (not s1_93464) -> (k_app_x_u_94742 ()).
  walk_1021 x_1022 s0_93576 s1_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 when 
      (x_1022 < 0) -> (k_walk_95229 s0_93576 true x_1022).
  walk_1021 x_1022 s0_93576 s1_93576 set_flag_93577 p_x_93578 p_i_93579 f_1023 k_walk_95229 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_93576 true set_flag_93577 0 0 x_1022
       (f_walk_97397 p_i_93579 p_x_93578 s0_93576 s1_93576 set_flag_93577 x_1022 f_1023 k_walk_95229)).
  x_93468 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_94725 ->
      (u_93474 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015
       (f_x_97391 i_1016 p_i_93467 p_x_93466 s0_93464 s1_93464 set_flag_93465 x_1015 k_app_x_94725)).
Types:
  main_97389 : X
  app_2308 : ((int ->
               bool ->
               bool ->
               bool ->
               int ->
               int ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X) ->
              int -> bool -> bool -> x_31:bool -> int -> int -> int[(not x_31)] -> (bool -> bool -> int -> X) -> X)
  br_f_life_97407 : (bool ->
                     int ->
                     int -> bool -> bool -> x_7:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_7)] -> X)
  br_u_97405 : (bool -> int -> int -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_life_97400 : (int -> int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  fail_97409 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int ->
            int ->
            (bool -> bool -> (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              int ->
              (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_93485 : (int -> int -> int -> bool -> bool -> bool -> int -> bool -> (bool -> bool -> int -> int -> X) -> X)
  u_93474 : (int -> int -> int -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               int ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X)

(32-1) Abstracting ... DONE!

(32-2) Checking HORS ... DONE!

Safe!

###set_main:
 let g_1010 (s_99869:(bool * bool)) (set_flag_99870:bool) (p_i_99871:int) (p_x_99872:int) (i_1011:int) =
   (s_99869, 
    (fun (s_99875:(bool * bool)) (set_flag_99876:bool) (p_i_99877:int) (p_x_99878:int) (x_1012:int) ->
       if set_flag_99876
       then
         let x_99879 = let u_99885 = if snd s_99875 && not (fst s_99875) then assert false in
                       rand_int () = 0 in
         let sp_99896 =
           if x_99879 then ((false, false), (i_1011, x_1012)) else (s_99875, (p_i_99877, p_x_99878))
         in
         let s_99880 = fst sp_99896 in
         let p_i_99882 = fst (snd sp_99896) in
         let p_x_99883 = snd (snd sp_99896) in
         (s_99880, x_1012 - i_1011)
       else
         let sp_99901 =
           if true then ((false, false), (i_1011, x_1012)) else (s_99875, (p_i_99877, p_x_99878))
         in
         let s_99902 = fst sp_99901 in
         let p_i_99904 = fst (snd sp_99901) in
         let p_x_99905 = snd (snd sp_99901) in
         (s_99902, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              int ->
                                ((bool * bool) ->
                                   bool -> int -> int -> int -> ((bool * bool) * int)) ->
                                  ((bool * bool) * int)))
             (x_1015:int) (s_99917:(bool * bool)) (set_flag_99918:bool) (
             p_i_99919:int) (p_x_99920:int) (i_1016:int) =
   let s__u_99925 = ((fst s_99917, true), ()) in
   let s_99926 = fst s__u_99925 in
   let u_2310 = snd s__u_99925 in
   let s__r_g_99931 = g_1010 s_99926 set_flag_99918 0 0 i_1016 in
   let s_99932 = fst s__r_g_99931 in
   let r_g_2442 = snd s__r_g_99931 in
   f_1014 x_1015 s_99932 set_flag_99918 0 0 r_g_2442
 in
 let rec ha1_2305 (s_99950:(bool * bool)) (set_flag_99951:bool) (p_i_99952:int) (
                 p_x_99953:int) (x_1018:int) =
   let s__u_99958 = ((fst s_99950, true), ()) in
   let s_99959 = fst s__u_99958 in
   let u_2306 = snd s__u_99958 in
   let s__u_99964 = ((true, snd s_99959), ()) in
   let s_99965 = fst s__u_99964 in
   let u_2307 = snd s__u_99964 in
   ha1_2305 s_99965 set_flag_99951 0 0 x_1018
 in
 let rec ha2_2302 (s_99973:(bool * bool)) (set_flag_99974:bool) (p_i_99975:int) (
                 p_x_99976:int) (x_1020:int) =
   let s__u_99981 = ((fst s_99973, true), ()) in
   let s_99982 = fst s__u_99981 in
   let u_2303 = snd s__u_99981 in
   let s__u_99987 = ((true, snd s_99982), ()) in
   let s_99988 = fst s__u_99987 in
   let u_2304 = snd s__u_99987 in
   ha2_2302 s_99988 set_flag_99974 0 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_99998:(bool * bool)) (set_flag_99999:bool) (
                  p_i_100000:int) (p_x_100001:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_100006 = ((fst s_99998, true), ()) in
   let s_100007 = fst s__u_100006 in
   let u_2180 = snd s__u_100006 in
   if x_1022 < 0
   then
     (s_100007, x_1022)
   else
     let s__r_f_100012 = f_1023 s_100007 set_flag_99999 0 0 x_1022 in
     let s_100013 = fst s__r_f_100012 in
     let r_f_2443 = snd s__r_f_100012 in
     walk_1021 r_f_2443 s_100013 set_flag_99999 0 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_100029:(bool * bool)) (set_flag_100030:bool) (
                 p_i_100031:int) (p_x_100032:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_100037 = ((fst s_100029, true), ()) in
   let s_100038 = fst s__u_100037 in
   let u_2234 = snd s__u_100037 in
   if x_1025 < 0
   then
     (s_100038, x_1025)
   else
     let s__r_f_100043 = f_1026 s_100038 set_flag_100030 0 0 x_1025 in
     let s_100044 = fst s__r_f_100043 in
     let r_f_2444 = snd s__r_f_100043 in
     let s__r_f_100047 = f_1026 s_100044 set_flag_100030 0 0 r_f_2444 in
     let s_100048 = fst s__r_f_100047 in
     let r_f_2445 = snd s__r_f_100047 in
     run_1024 r_f_2445 s_100048 set_flag_100030 0 0 f_1026
 in
 let rec life_2300 (s_100062:(bool * bool)) (set_flag_100063:bool) (p_i_100064:int) 
                  (p_x_100065:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_100070 = ((fst s_100062, true), ()) in
     let s_100071 = fst s__u_100070 in
     let u_2301 = snd s__u_100070 in
     if x_1028 < 0
     then
       let s__r_app_100082 = app_2308 walk_1021 x_1028 s_100071 set_flag_100063 0 0 1 in
       let s_100083 = fst s__r_app_100082 in
       let r_app_2447 = snd s__r_app_100082 in
       ha1_2305 s_100083 set_flag_100063 0 0 r_app_2447
     else
       let s__r_app_100096 = app_2308 run_1024 x_1028 s_100071 set_flag_100063 0 0 1 in
       let s_100097 = fst s__r_app_100096 in
       let r_app_2446 = snd s__r_app_100096 in
       ha2_2302 s_100097 set_flag_100063 0 0 r_app_2446
   else
     life_2300 s_100062 set_flag_100063 0 0 x_1028
 in
 let main_1029 (s_100107:(bool * bool)) (set_flag_100108:bool) (p_i_100109:int) (
              p_x_100110:int) (x_2295:unit) = life_2300 s_100107 set_flag_100108 0 0 (rand_int ())
 in
 let s__r_main_100115 = main_1029 (false, false) false 0 0 () in
 let s_100116 = fst s__r_main_100115 in
 let r_main_2448 = snd s__r_main_100115 in
 r_main_2448

###beta_reduce_trivial:
 let g_1010 (s_99869:(bool * bool)) (set_flag_99870:bool) (p_i_99871:int) (p_x_99872:int) (i_1011:int) =
   (s_99869, 
    (fun (s_99875:(bool * bool)) (set_flag_99876:bool) (p_i_99877:int) (p_x_99878:int) (x_1012:int) ->
       if set_flag_99876
       then
         let x_99879 = let u_99885 = if snd s_99875 && not (fst s_99875) then assert false in
                       rand_int () = 0 in
         let sp_99896 =
           if x_99879 then ((false, false), (i_1011, x_1012)) else (s_99875, (p_i_99877, p_x_99878))
         in
         let s_99880 = fst sp_99896 in
         (s_99880, x_1012 - i_1011)
       else
         let sp_99901 =
           if true then ((false, false), (i_1011, x_1012)) else (s_99875, (p_i_99877, p_x_99878))
         in
         let s_99902 = fst sp_99901 in
         (s_99902, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              int ->
                                ((bool * bool) ->
                                   bool -> int -> int -> int -> ((bool * bool) * int)) ->
                                  ((bool * bool) * int)))
             (x_1015:int) (s_99917:(bool * bool)) (set_flag_99918:bool) (
             p_i_99919:int) (p_x_99920:int) (i_1016:int) =
   let s__u_99925 = ((fst s_99917, true), ()) in
   let s_99926 = fst s__u_99925 in
   let s__r_g_99931 = g_1010 s_99926 set_flag_99918 0 0 i_1016 in
   let s_99932 = fst s__r_g_99931 in
   let r_g_2442 = snd s__r_g_99931 in
   f_1014 x_1015 s_99932 set_flag_99918 0 0 r_g_2442
 in
 let rec ha1_2305 (s_99950:(bool * bool)) (set_flag_99951:bool) (p_i_99952:int) (
                 p_x_99953:int) (x_1018:int) =
   let s__u_99958 = ((fst s_99950, true), ()) in
   let s_99959 = fst s__u_99958 in
   let s__u_99964 = ((true, snd s_99959), ()) in
   let s_99965 = fst s__u_99964 in
   ha1_2305 s_99965 set_flag_99951 0 0 x_1018
 in
 let rec ha2_2302 (s_99973:(bool * bool)) (set_flag_99974:bool) (p_i_99975:int) (
                 p_x_99976:int) (x_1020:int) =
   let s__u_99981 = ((fst s_99973, true), ()) in
   let s_99982 = fst s__u_99981 in
   let s__u_99987 = ((true, snd s_99982), ()) in
   let s_99988 = fst s__u_99987 in
   ha2_2302 s_99988 set_flag_99974 0 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_99998:(bool * bool)) (set_flag_99999:bool) (
                  p_i_100000:int) (p_x_100001:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_100006 = ((fst s_99998, true), ()) in
   let s_100007 = fst s__u_100006 in
   if x_1022 < 0
   then
     (s_100007, x_1022)
   else
     let s__r_f_100012 = f_1023 s_100007 set_flag_99999 0 0 x_1022 in
     let s_100013 = fst s__r_f_100012 in
     let r_f_2443 = snd s__r_f_100012 in
     walk_1021 r_f_2443 s_100013 set_flag_99999 0 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_100029:(bool * bool)) (set_flag_100030:bool) (
                 p_i_100031:int) (p_x_100032:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_100037 = ((fst s_100029, true), ()) in
   let s_100038 = fst s__u_100037 in
   if x_1025 < 0
   then
     (s_100038, x_1025)
   else
     let s__r_f_100043 = f_1026 s_100038 set_flag_100030 0 0 x_1025 in
     let s_100044 = fst s__r_f_100043 in
     let r_f_2444 = snd s__r_f_100043 in
     let s__r_f_100047 = f_1026 s_100044 set_flag_100030 0 0 r_f_2444 in
     let s_100048 = fst s__r_f_100047 in
     let r_f_2445 = snd s__r_f_100047 in
     run_1024 r_f_2445 s_100048 set_flag_100030 0 0 f_1026
 in
 let rec life_2300 (s_100062:(bool * bool)) (set_flag_100063:bool) (p_i_100064:int) 
                  (p_x_100065:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_100070 = ((fst s_100062, true), ()) in
     let s_100071 = fst s__u_100070 in
     if x_1028 < 0
     then
       let s__r_app_100082 = app_2308 walk_1021 x_1028 s_100071 set_flag_100063 0 0 1 in
       let s_100083 = fst s__r_app_100082 in
       let r_app_2447 = snd s__r_app_100082 in
       ha1_2305 s_100083 set_flag_100063 0 0 r_app_2447
     else
       let s__r_app_100096 = app_2308 run_1024 x_1028 s_100071 set_flag_100063 0 0 1 in
       let s_100097 = fst s__r_app_100096 in
       let r_app_2446 = snd s__r_app_100096 in
       ha2_2302 s_100097 set_flag_100063 0 0 r_app_2446
   else
     life_2300 s_100062 set_flag_100063 0 0 x_1028
 in
 let main_1029 (s_100107:(bool * bool)) (set_flag_100108:bool) (p_i_100109:int) (
              p_x_100110:int) (x_2295:unit) = life_2300 s_100107 set_flag_100108 0 0 (rand_int ())
 in
 let s__r_main_100115 = main_1029 (false, false) false 0 0 () in
 let r_main_2448 = snd s__r_main_100115 in
 r_main_2448

###inline:
 let g_1010 (s_99869:(bool * bool)) (set_flag_99870:bool) (p_i_99871:int) (p_x_99872:int) (i_1011:int) =
   (s_99869, 
    (fun (s_99875:(bool * bool)) (set_flag_99876:bool) (p_i_99877:int) (p_x_99878:int) (x_1012:int) ->
       if set_flag_99876
       then
         let x_99879 = let u_99885 = if snd s_99875 && not (fst s_99875) then assert false in
                       rand_int () = 0 in
         let sp_99896 =
           if x_99879 then ((false, false), (i_1011, x_1012)) else (s_99875, (p_i_99877, p_x_99878))
         in
         (fst sp_99896, x_1012 - i_1011)
       else
         let sp_99901 =
           if true then ((false, false), (i_1011, x_1012)) else (s_99875, (p_i_99877, p_x_99878))
         in
         (fst sp_99901, x_1012 - i_1011)))
 in
 let app_2308
             (f_1014:(int ->
                        (bool * bool) ->
                          bool ->
                            int ->
                              int ->
                                ((bool * bool) ->
                                   bool -> int -> int -> int -> ((bool * bool) * int)) ->
                                  ((bool * bool) * int)))
             (x_1015:int) (s_99917:(bool * bool)) (set_flag_99918:bool) (
             p_i_99919:int) (p_x_99920:int) (i_1016:int) =
   let s__u_99925 = ((fst s_99917, true), ()) in
   let s__r_g_99931 = g_1010 (fst s__u_99925) set_flag_99918 0 0 i_1016 in
   f_1014 x_1015 (fst s__r_g_99931) set_flag_99918 0 0 (snd s__r_g_99931)
 in
 let rec ha1_2305 (s_99950:(bool * bool)) (set_flag_99951:bool) (p_i_99952:int) (
                 p_x_99953:int) (x_1018:int) =
   let s__u_99958 = ((fst s_99950, true), ()) in
   let s__u_99964 = ((true, snd (fst s__u_99958)), ()) in
   ha1_2305 (fst s__u_99964) set_flag_99951 0 0 x_1018
 in
 let rec ha2_2302 (s_99973:(bool * bool)) (set_flag_99974:bool) (p_i_99975:int) (
                 p_x_99976:int) (x_1020:int) =
   let s__u_99981 = ((fst s_99973, true), ()) in
   let s__u_99987 = ((true, snd (fst s__u_99981)), ()) in
   ha2_2302 (fst s__u_99987) set_flag_99974 0 0 x_1020
 in
 let rec walk_1021 (x_1022:int) (s_99998:(bool * bool)) (set_flag_99999:bool) (
                  p_i_100000:int) (p_x_100001:int) 
                  (f_1023:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_100006 = ((fst s_99998, true), ()) in
   if x_1022 < 0
   then
     (fst s__u_100006, x_1022)
   else
     let s__r_f_100012 = f_1023 (fst s__u_100006) set_flag_99999 0 0 x_1022 in
     walk_1021 (snd s__r_f_100012) (fst s__r_f_100012) set_flag_99999 0 0 f_1023
 in
 let rec run_1024 (x_1025:int) (s_100029:(bool * bool)) (set_flag_100030:bool) (
                 p_i_100031:int) (p_x_100032:int) 
                 (f_1026:((bool * bool) -> bool -> int -> int -> int -> ((bool * bool) * int))) =
   let s__u_100037 = ((fst s_100029, true), ()) in
   if x_1025 < 0
   then
     (fst s__u_100037, x_1025)
   else
     let s__r_f_100043 = f_1026 (fst s__u_100037) set_flag_100030 0 0 x_1025 in
     let s__r_f_100047 = f_1026 (fst s__r_f_100043) set_flag_100030 0 0 (snd s__r_f_100043) in
     run_1024 (snd s__r_f_100047) (fst s__r_f_100047) set_flag_100030 0 0 f_1026
 in
 let rec life_2300 (s_100062:(bool * bool)) (set_flag_100063:bool) (p_i_100064:int) 
                  (p_x_100065:int) (x_1028:int) =
   if rand_int () > 0
   then
     let s__u_100070 = ((fst s_100062, true), ()) in
     if x_1028 < 0
     then
       let s__r_app_100082 = app_2308 walk_1021 x_1028 (fst s__u_100070) set_flag_100063 0 0 1 in
       ha1_2305 (fst s__r_app_100082) set_flag_100063 0 0 (snd s__r_app_100082)
     else
       let s__r_app_100096 = app_2308 run_1024 x_1028 (fst s__u_100070) set_flag_100063 0 0 1 in
       ha2_2302 (fst s__r_app_100096) set_flag_100063 0 0 (snd s__r_app_100096)
   else
     life_2300 s_100062 set_flag_100063 0 0 x_1028
 in
 let main_1029 (s_100107:(bool * bool)) (set_flag_100108:bool) (p_i_100109:int) (
              p_x_100110:int) (x_2295:unit) = life_2300 s_100107 set_flag_100108 0 0 (rand_int ())
 in
 let s__r_main_100115 = main_1029 (false, false) false 0 0 () in
 snd s__r_main_100115

###CPS:
 (let g_1010 s_99869 set_flag_99870 p_i_99871 p_x_99872 i_1011 k_g_100983 =
    k_g_100983
      (s_99869, 
       (fun s_99875 set_flag_99876 p_i_99877 p_x_99878 x_1012 k_g_101005 ->
          if set_flag_99876
          then
            let x_99879 k_g_x_101009 =
              let u_99885 k_g_x_u_101026 =
                if snd s_99875
                then
                  if not (fst s_99875) then <|fail|> () k_g_x_u_101026 else k_g_x_u_101026 ()
                else
                  k_g_x_u_101026 ()
              in
              u_99885 (fun u_101043 -> rand_int_cps () (fun x_101031 -> k_g_x_101009 (x_101031 = 0)))
            in
            x_99879
              (fun x_101087 ->
                 let sp_99896 k_g_sp_101077 =
                   if x_101087
                   then
                     k_g_sp_101077 ((false, false), (i_1011, x_1012))
                   else
                     k_g_sp_101077 (s_99875, (p_i_99877, p_x_99878))
                 in
                 sp_99896 (fun sp_101086 -> k_g_101005 (fst sp_101086, x_1012 - i_1011)))
          else
            let sp_99901 k_g_sp_101121 = k_g_sp_101121 ((false, false), (i_1011, x_1012)) in
            sp_99901 (fun sp_101130 -> k_g_101005 (fst sp_101130, x_1012 - i_1011))))
  in
  let app_2308 f_1014 x_1015 s_99917 set_flag_99918 p_i_99919 p_x_99920 i_1016 k_app_101167 =
    let s__u_99925 k_app_s__u_101171 = k_app_s__u_101171 ((fst s_99917, true), ()) in
    s__u_99925
      (fun s__u_101284 ->
         let s__r_g_99931 k_app_s__r_g_101206 =
           (g_1010 (fst s__u_101284) set_flag_99918 0 0) i_1016 k_app_s__r_g_101206
         in
         s__r_g_99931
           (fun s__r_g_101283 ->
              (f_1014 x_1015 (fst s__r_g_101283) set_flag_99918 0 0) (snd s__r_g_101283) k_app_101167))
  in
  let rec ha1_2305 s_99950 set_flag_99951 p_i_99952 p_x_99953 x_1018 k_ha1_101312 =
    let s__u_99958 k_ha1_s__u_101316 = k_ha1_s__u_101316 ((fst s_99950, true), ()) in
    s__u_99958
      (fun s__u_101356 ->
         let s__u_99964 k_ha1_s__u_101330 = k_ha1_s__u_101330 ((true, snd (fst s__u_101356)), ()) in
         s__u_99964 (fun s__u_101355 -> (ha1_2305 (fst s__u_101355) set_flag_99951 0 0) x_1018 k_ha1_101312))
  in
  let rec ha2_2302 s_99973 set_flag_99974 p_i_99975 p_x_99976 x_1020 k_ha2_101367 =
    let s__u_99981 k_ha2_s__u_101371 = k_ha2_s__u_101371 ((fst s_99973, true), ()) in
    s__u_99981
      (fun s__u_101411 ->
         let s__u_99987 k_ha2_s__u_101385 = k_ha2_s__u_101385 ((true, snd (fst s__u_101411)), ()) in
         s__u_99987 (fun s__u_101410 -> (ha2_2302 (fst s__u_101410) set_flag_99974 0 0) x_1020 k_ha2_101367))
  in
  let rec walk_1021 x_1022 s_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 =
    let s__u_100006 k_walk_s__u_101433 = k_walk_s__u_101433 ((fst s_99998, true), ()) in
    s__u_100006
      (fun s__u_101514 ->
         if x_1022 < 0
         then
           k_walk_101429 (fst s__u_101514, x_1022)
         else
           let s__r_f_100012 k_walk_s__r_f_101460 =
             (f_1023 (fst s__u_101514) set_flag_99999 0 0) x_1022 k_walk_s__r_f_101460
           in
           s__r_f_100012
             (fun s__r_f_101509 ->
                (walk_1021 (snd s__r_f_101509) (fst s__r_f_101509) set_flag_99999 0 0) f_1023 k_walk_101429))
  in
  let rec run_1024 x_1025 s_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 =
    let s__u_100037 k_run_s__u_101544 = k_run_s__u_101544 ((fst s_100029, true), ()) in
    s__u_100037
      (fun s__u_101642 ->
         if x_1025 < 0
         then
           k_run_101540 (fst s__u_101642, x_1025)
         else
           let s__r_f_100043 k_run_s__r_f_101571 =
             (f_1026 (fst s__u_101642) set_flag_100030 0 0) x_1025 k_run_s__r_f_101571
           in
           s__r_f_100043
             (fun s__r_f_101637 ->
                let s__r_f_100047 k_run_s__r_f_101587 =
                  (f_1026 (fst s__r_f_101637) set_flag_100030 0 0) (snd s__r_f_101637) k_run_s__r_f_101587
                in
                s__r_f_100047
                  (fun s__r_f_101636 ->
                     (run_1024 (snd s__r_f_101636) (fst s__r_f_101636) set_flag_100030 0 0) f_1026 k_run_101540)))
  in
  let rec life_2300 s_100062 set_flag_100063 p_i_100064 p_x_100065 x_1028 k_life_101661 =
    rand_int_cps
      () 
      (fun x_101664 ->
         if x_101664 > 0
         then
           let s__u_100070 k_life_s__u_101679 = k_life_s__u_101679 ((fst s_100062, true), ()) in
           s__u_100070
             (fun s__u_101820 ->
                if x_1028 < 0
                then
                  let s__r_app_100082 k_life_s__r_app_101732 =
                    (app_2308 walk_1021 x_1028 (fst s__u_101820) set_flag_100063 0 0) 1 k_life_s__r_app_101732
                  in
                  s__r_app_100082
                    (fun s__r_app_101752 ->
                       (ha1_2305 (fst s__r_app_101752) set_flag_100063 0 0) (snd s__r_app_101752) k_life_101661)
                else
                  let s__r_app_100096 k_life_s__r_app_101795 =
                    (app_2308 run_1024 x_1028 (fst s__u_101820) set_flag_100063 0 0) 1 k_life_s__r_app_101795
                  in
                  s__r_app_100096
                    (fun s__r_app_101815 ->
                       (ha2_2302 (fst s__r_app_101815) set_flag_100063 0 0) (snd s__r_app_101815) k_life_101661))
         else
           (life_2300 s_100062 set_flag_100063 0 0) x_1028 k_life_101661)
  in
  let main_1029 s_100107 set_flag_100108 p_i_100109 p_x_100110 x_2295 k_main_101849 =
    rand_int_cps () (fun x_101873 -> (life_2300 s_100107 set_flag_100108 0 0) x_101873 k_main_101849)
  in
  let s__r_main_100115 k_s__r_main_101953 = ((((main_1029 (false, false)) false) 0) 0) () k_s__r_main_101953 in
  s__r_main_100115 (fun s__r_main_101959 -> {end}) # [ACPS])

###remove_pair:
 (let g_1010 s0_99869 s1_99869 set_flag_99870 p_i_99871 p_x_99872 i_1011 k_g_100983 =
    k_g_100983
      s0_99869 s1_99869 
      (fun s0_99875 s1_99875 set_flag_99876 p_i_99877 p_x_99878 x_1012 k_g_101005 ->
         if set_flag_99876
         then
           let x_99879 k_g_x_101009 =
             let u_99885 k_g_x_u_101026 =
               if s1_99875
               then
                 if not s0_99875 then <|fail|> () k_g_x_u_101026 else k_g_x_u_101026 ()
               else
                 k_g_x_u_101026 ()
             in
             u_99885 (fun u_101043 -> rand_int_cps () (fun x_101031 -> k_g_x_101009 (x_101031 = 0)))
           in
           x_99879
             (fun x_101087 ->
                let sp_99896 k_g_sp_101077 =
                  if x_101087
                  then
                    k_g_sp_101077 false false i_1011 x_1012
                  else
                    k_g_sp_101077 s0_99875 s1_99875 p_i_99877 p_x_99878
                in
                sp_99896
                  (fun sp00_101086 sp01_101086 sp10_101086 sp11_101086 ->
                     k_g_101005 sp00_101086 sp01_101086 (x_1012 - i_1011)))
         else
           k_g_101005 false false (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_99950 s1_99950 set_flag_99951 p_i_99952 p_x_99953 x_1018 k_ha1_101312 =
    ha1_2305 true true set_flag_99951 0 0 x_1018 k_ha1_101312
  in
  let rec ha2_2302 s0_99973 s1_99973 set_flag_99974 p_i_99975 p_x_99976 x_1020 k_ha2_101367 =
    ha2_2302 true true set_flag_99974 0 0 x_1020 k_ha2_101367
  in
  let rec walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 =
    if x_1022 < 0
    then
      k_walk_101429 s0_99998 true x_1022
    else
      f_1023
        s0_99998 true set_flag_99999 0 0 x_1022 
        (fun s__r_f00_101509 s__r_f01_101509 s__r_f1_101509 ->
           walk_1021 s__r_f1_101509 s__r_f00_101509 s__r_f01_101509 set_flag_99999 0 0 f_1023 k_walk_101429)
  in
  let rec run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 =
    if x_1025 < 0
    then
      k_run_101540 s0_100029 true x_1025
    else
      f_1026
        s0_100029 true set_flag_100030 0 0 x_1025 
        (fun s__r_f00_101637 s__r_f01_101637 s__r_f1_101637 ->
           f_1026
             s__r_f00_101637 s__r_f01_101637 set_flag_100030 0 0 s__r_f1_101637 
             (fun s__r_f00_101636 s__r_f01_101636 s__r_f1_101636 ->
                run_1024 s__r_f1_101636 s__r_f00_101636 s__r_f01_101636 set_flag_100030 0 0 f_1026 k_run_101540))
  in
  let rec life_2300 s0_100062 s1_100062 set_flag_100063 p_i_100064 p_x_100065 x_1028 k_life_101661 =
    rand_int_cps
      () 
      (fun x_101664 ->
         if x_101664 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_100062 true set_flag_100063 0 0 1 
               (fun s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
                  walk_1021
                    x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 
                    0 0 s__r_g1_101283 
                    (fun s__r_app00_101752 s__r_app01_101752 s__r_app1_101752 ->
                       ha1_2305
                         s__r_app00_101752 s__r_app01_101752 set_flag_100063 0 0 s__r_app1_101752 k_life_101661))
           else
             g_1010
               s0_100062 true set_flag_100063 0 0 1 
               (fun s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
                  run_1024
                    x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 
                    0 0 s__r_g1_101283 
                    (fun s__r_app00_101815 s__r_app01_101815 s__r_app1_101815 ->
                       ha2_2302
                         s__r_app00_101815 s__r_app01_101815 set_flag_100063 0 0 s__r_app1_101815 k_life_101661))
         else
           life_2300 s0_100062 s1_100062 set_flag_100063 0 0 x_1028 k_life_101661)
  in
  let main_1029 s0_100107 s1_100107 set_flag_100108 p_i_100109 p_x_100110 x_2295 k_main_101849 =
    rand_int_cps () (fun x_101873 -> life_2300 s0_100107 s1_100107 set_flag_100108 0 0 x_101873 k_main_101849)
  in
  main_1029 false false false 0 0 () (fun s__r_main00_101959 s__r_main01_101959 s__r_main1_101959 -> {end}) #
  [ACPS])

###replace_bottom_def:
 (let g_1010 s0_99869 s1_99869 set_flag_99870 p_i_99871 p_x_99872 i_1011 k_g_100983 =
    k_g_100983
      s0_99869 s1_99869 
      (fun s0_99875 s1_99875 set_flag_99876 p_i_99877 p_x_99878 x_1012 k_g_101005 ->
         if set_flag_99876
         then
           let x_99879 k_g_x_101009 =
             let u_99885 k_g_x_u_101026 =
               if s1_99875
               then
                 if not s0_99875 then <|fail|> () k_g_x_u_101026 else k_g_x_u_101026 ()
               else
                 k_g_x_u_101026 ()
             in
             u_99885 (fun u_101043 -> rand_int_cps () (fun x_101031 -> k_g_x_101009 (x_101031 = 0)))
           in
           x_99879
             (fun x_101087 ->
                let sp_99896 k_g_sp_101077 =
                  if x_101087
                  then
                    k_g_sp_101077 false false i_1011 x_1012
                  else
                    k_g_sp_101077 s0_99875 s1_99875 p_i_99877 p_x_99878
                in
                sp_99896
                  (fun sp00_101086 sp01_101086 sp10_101086 sp11_101086 ->
                     k_g_101005 sp00_101086 sp01_101086 (x_1012 - i_1011)))
         else
           k_g_101005 false false (x_1012 - i_1011))
  in
  let rec ha1_2305 s0_99950 s1_99950 set_flag_99951 p_i_99952 p_x_99953 x_1018 k_ha1_101312 = _|_ in
  let rec ha2_2302 s0_99973 s1_99973 set_flag_99974 p_i_99975 p_x_99976 x_1020 k_ha2_101367 = _|_ in
  let rec walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 =
    if x_1022 < 0
    then
      k_walk_101429 s0_99998 true x_1022
    else
      f_1023
        s0_99998 true set_flag_99999 0 0 x_1022 
        (fun s__r_f00_101509 s__r_f01_101509 s__r_f1_101509 ->
           walk_1021 s__r_f1_101509 s__r_f00_101509 s__r_f01_101509 set_flag_99999 0 0 f_1023 k_walk_101429)
  in
  let rec run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 =
    if x_1025 < 0
    then
      k_run_101540 s0_100029 true x_1025
    else
      f_1026
        s0_100029 true set_flag_100030 0 0 x_1025 
        (fun s__r_f00_101637 s__r_f01_101637 s__r_f1_101637 ->
           f_1026
             s__r_f00_101637 s__r_f01_101637 set_flag_100030 0 0 s__r_f1_101637 
             (fun s__r_f00_101636 s__r_f01_101636 s__r_f1_101636 ->
                run_1024 s__r_f1_101636 s__r_f00_101636 s__r_f01_101636 set_flag_100030 0 0 f_1026 k_run_101540))
  in
  let rec life_2300 s0_100062 s1_100062 set_flag_100063 p_i_100064 p_x_100065 x_1028 k_life_101661 =
    rand_int_cps
      () 
      (fun x_101664 ->
         if x_101664 > 0
         then
           if x_1028 < 0
           then
             g_1010
               s0_100062 true set_flag_100063 0 0 1 
               (fun s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
                  walk_1021
                    x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 
                    0 0 s__r_g1_101283 
                    (fun s__r_app00_101752 s__r_app01_101752 s__r_app1_101752 ->
                       ha1_2305
                         s__r_app00_101752 s__r_app01_101752 set_flag_100063 0 0 s__r_app1_101752 k_life_101661))
           else
             g_1010
               s0_100062 true set_flag_100063 0 0 1 
               (fun s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
                  run_1024
                    x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 
                    0 0 s__r_g1_101283 
                    (fun s__r_app00_101815 s__r_app01_101815 s__r_app1_101815 ->
                       ha2_2302
                         s__r_app00_101815 s__r_app01_101815 set_flag_100063 0 0 s__r_app1_101815 k_life_101661))
         else
           life_2300 s0_100062 s1_100062 set_flag_100063 0 0 x_1028 k_life_101661)
  in
  let main_1029 s0_100107 s1_100107 set_flag_100108 p_i_100109 p_x_100110 x_2295 k_main_101849 =
    rand_int_cps () (fun x_101873 -> life_2300 s0_100107 s1_100107 set_flag_100108 0 0 x_101873 k_main_101849)
  in
  main_1029 false false false 0 0 () (fun s__r_main00_101959 s__r_main01_101959 s__r_main1_101959 -> {end}) #
  [ACPS])

Program with abstraction types (CEGAR-cycle 33)::
Main: main_103463
  main_103463 -> (main_1029 false false false 0 0 () f_103478).
  br_f_life_103481 b_103482 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when b_103482 ->
      (g_1010 s0_100062 true set_flag_100063 0 0 1
       (f_life_103473 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661)).
  br_f_life_103481 b_103482 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (not b_103482) ->
      (g_1010 s0_100062 true set_flag_100063 0 0 1
       (f_life_103475 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661)).
  br_u_103479 b_103480 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 
  set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026 when b_103480 -> 
      (fail_103483 true k_g_x_u_101026).
  br_u_103479 b_103480 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 
  set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026 when (not b_103480) -> 
      (k_g_x_u_101026 ()).
  f_103478 s__r_main00_101959 s__r_main01_101959 s__r_main1_101959 -> end.
  f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870 s0_99875 s1_99875 set_flag_99876 p_i_99877 
  p_x_99878 x_1012 k_g_101005 when set_flag_99876 ->
      (x_99879 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_1012
       (f_g_103467 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_1012 k_g_101005)).
  f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870 s0_99875 s1_99875 set_flag_99876 p_i_99877 
  p_x_99878 x_1012 k_g_101005 when (not set_flag_99876) -> (k_g_101005 false false (x_1012 - i_1011)).
  f_g_103467 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_101005 x_101087 ->
      (sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_101087 x_1012
       (f_g_103468 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_101087 x_1012 k_g_101005)).
  f_g_103468 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_101005 sp00_101086 sp01_101086 sp10_101086 sp11_101086 ->
      (k_g_101005 sp00_101086 sp01_101086 (x_1012 - i_1011)).
  f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (x_101664 > 0) ->
      (br_f_life_103481 (x_1028 < 0) p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661
       x_101664).
  f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (not (x_101664 > 0)) -> (life_2300 s0_100062 s1_100062 set_flag_100063 0 0 x_1028 k_life_101661).
  f_life_103473 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661 
  s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
      (walk_1021 x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 0 0 s__r_g1_101283
       (f_life_103474 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063
        x_101664 x_1028 k_life_101661)).
  f_life_103474 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063 x_101664 
  x_1028 k_life_101661 s__r_app00_101752 s__r_app01_101752 s__r_app1_101752 ->
      (ha1_2305 s__r_app00_101752 s__r_app01_101752 set_flag_100063 0 0 s__r_app1_101752 k_life_101661).
  f_life_103475 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661 
  s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
      (run_1024 x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 0 0 s__r_g1_101283
       (f_life_103476 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063
        x_101664 x_1028 k_life_101661)).
  f_life_103476 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063 x_101664 
  x_1028 k_life_101661 s__r_app00_101815 s__r_app01_101815 s__r_app1_101815 ->
      (ha2_2302 s__r_app00_101815 s__r_app01_101815 set_flag_100063 0 0 s__r_app1_101815 k_life_101661).
  f_main_103477 p_i_100109 p_x_100110 s0_100107 s1_100107 set_flag_100108 x_2295 k_main_101849 x_101873 ->
      (life_2300 s0_100107 s1_100107 set_flag_100108 0 0 x_101873 k_main_101849).
  f_run_103470 p_i_100031 p_x_100032 s0_100029 s1_100029 set_flag_100030 x_1025 f_1026 k_run_101540 s__r_f00_101637 
  s__r_f01_101637 s__r_f1_101637 ->
      (f_1026 s__r_f00_101637 s__r_f01_101637 set_flag_100030 0 0 s__r_f1_101637
       (f_run_103471 p_i_100031 p_x_100032 s0_100029 s1_100029 s__r_f00_101637 s__r_f01_101637 s__r_f1_101637
        set_flag_100030 x_1025 f_1026 k_run_101540)).
  f_run_103471 p_i_100031 p_x_100032 s0_100029 s1_100029 s__r_f00_101637 s__r_f01_101637 s__r_f1_101637 
  set_flag_100030 x_1025 f_1026 k_run_101540 s__r_f00_101636 s__r_f01_101636 s__r_f1_101636 ->
      (run_1024 s__r_f1_101636 s__r_f00_101636 s__r_f01_101636 set_flag_100030 0 0 f_1026 k_run_101540).
  f_walk_103469 p_i_100000 p_x_100001 s0_99998 s1_99998 set_flag_99999 x_1022 f_1023 k_walk_101429 s__r_f00_101509 
  s__r_f01_101509 s__r_f1_101509 ->
      (walk_1021 s__r_f1_101509 s__r_f00_101509 s__r_f01_101509 set_flag_99999 0 0 f_1023 k_walk_101429).
  f_x_103465 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_101009 u_101043 ->
      (rand_int
       (f_x_103466 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 u_101043 x_1012 k_g_x_101009)).
  f_x_103466 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 u_101043 x_1012 k_g_x_101009 x_101031 -> (k_g_x_101009 (x_101031 = 0)).
  fail_103483 b k -> {fail} => (k ()).
  g_1010 s0_99869 s1_99869 set_flag_99870 p_i_99871 p_x_99872 i_1011 k_g_100983 ->
      (k_g_100983 s0_99869 s1_99869 (f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870)).
  ha1_2305 s0_99950 s1_99950 set_flag_99951 p_i_99952 p_x_99953 x_1018 k_ha1_101312 -> _|_.
  ha2_2302 s0_99973 s1_99973 set_flag_99974 p_i_99975 p_x_99976 x_1020 k_ha2_101367 -> _|_.
  life_2300 s0_100062 s1_100062 set_flag_100063 p_i_100064 p_x_100065 x_1028 k_life_101661 ->
      (rand_int (f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661)).
  main_1029 s0_100107 s1_100107 set_flag_100108 p_i_100109 p_x_100110 x_2295 k_main_101849 ->
      (rand_int (f_main_103477 p_i_100109 p_x_100110 s0_100107 s1_100107 set_flag_100108 x_2295 k_main_101849)).
  run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 when 
      (x_1025 < 0) -> (k_run_101540 s0_100029 true x_1025).
  run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_100029 true set_flag_100030 0 0 x_1025
       (f_run_103470 p_i_100031 p_x_100032 s0_100029 s1_100029 set_flag_100030 x_1025 f_1026 k_run_101540)).
  sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_sp_101077 when x_101087 -> (k_g_sp_101077 false false i_1011 x_1012).
  sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_sp_101077 when (not x_101087) ->
      (k_g_sp_101077 s0_99875 s1_99875 p_i_99877 p_x_99878).
  u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_u_101026 when s1_99875 ->
      (br_u_103479 (not s0_99875) i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875
       set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026).
  u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_u_101026 when (not s1_99875) -> (k_g_x_u_101026 ()).
  walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 when 
      (x_1022 < 0) -> (k_walk_101429 s0_99998 true x_1022).
  walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_99998 true set_flag_99999 0 0 x_1022
       (f_walk_103469 p_i_100000 p_x_100001 s0_99998 s1_99998 set_flag_99999 x_1022 f_1023 k_walk_101429)).
  x_99879 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_101009 ->
      (u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_1012
       (f_x_103465 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_1012 k_g_x_101009)).
Types:
  main_103463 : X
  br_f_life_103481 : (bool -> int -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  br_u_103479 : (bool ->
                 int ->
                 int -> int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_g_103464 : (int ->
                int ->
                int ->
                bool -> bool -> bool -> bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X)
  f_life_103472 : (int -> int -> bool -> bool -> bool -> int -> (bool -> bool -> unit -> X) -> int -> X)
  fail_103483 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int ->
            int ->
            (bool -> bool -> (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) -> X) -> X)
  life_2300 : (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              bool ->
              int ->
              int ->
              (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_99896 : (int ->
              int ->
              int ->
              int ->
              int ->
              bool -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (bool -> bool -> int -> int -> X) -> X)
  u_99885 : (int -> int -> int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               int ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X)

(33-1) Abstracting ... DONE!

(33-2) Checking HORS ... DONE!

Error trace::
  main_103463 ... --> 
  main_1029 ... --> 
  f_main_103477 ... --> 
  life_2300 ... --> 
  f_life_103472 [1/2] ... --> 
  br_f_life_103481 [2/2] ... --> 
  g_1010 ... --> 
  f_life_103475 ... --> 
  run_1024 [2/2] ... --> 
  f_g_103464 [1/2] ... --> 
  x_99879 ... --> 
  u_99885 [1/2] ... --> 
  br_u_103479 [1/2] ... --> 
  fail_103483 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 1; 0; 0; 1; 0; 0; 0; 0; 0

(33-3) Checking counterexample ... DONE!

(33-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 1; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 34)::
Main: main_103463
  main_103463 -> (main_1029 false false false 0 0 () f_103478).
  br_f_life_103481 b_103482 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when b_103482 ->
      (g_1010 s0_100062 true set_flag_100063 0 0 1
       (f_life_103473 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661)).
  br_f_life_103481 b_103482 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (not b_103482) ->
      (g_1010 s0_100062 true set_flag_100063 0 0 1
       (f_life_103475 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661)).
  br_u_103479 b_103480 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 
  set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026 when b_103480 -> 
      (fail_103483 true k_g_x_u_101026).
  br_u_103479 b_103480 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 
  set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026 when (not b_103480) -> 
      (k_g_x_u_101026 ()).
  f_103478 s__r_main00_101959 s__r_main01_101959 s__r_main1_101959 -> end.
  f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870 s0_99875 s1_99875 set_flag_99876 p_i_99877 
  p_x_99878 x_1012 k_g_101005 when set_flag_99876 ->
      (x_99879 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_1012
       (f_g_103467 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_1012 k_g_101005)).
  f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870 s0_99875 s1_99875 set_flag_99876 p_i_99877 
  p_x_99878 x_1012 k_g_101005 when (not set_flag_99876) -> (k_g_101005 false false (x_1012 - i_1011)).
  f_g_103467 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_101005 x_101087 ->
      (sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_101087 x_1012
       (f_g_103468 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_101087 x_1012 k_g_101005)).
  f_g_103468 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_101005 sp00_101086 sp01_101086 sp10_101086 sp11_101086 ->
      (k_g_101005 sp00_101086 sp01_101086 (x_1012 - i_1011)).
  f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (x_101664 > 0) ->
      (br_f_life_103481 (x_1028 < 0) p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661
       x_101664).
  f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (not (x_101664 > 0)) -> (life_2300 s0_100062 s1_100062 set_flag_100063 0 0 x_1028 k_life_101661).
  f_life_103473 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661 
  s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
      (walk_1021 x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 0 0 s__r_g1_101283
       (f_life_103474 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063
        x_101664 x_1028 k_life_101661)).
  f_life_103474 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063 x_101664 
  x_1028 k_life_101661 s__r_app00_101752 s__r_app01_101752 s__r_app1_101752 ->
      (ha1_2305 s__r_app00_101752 s__r_app01_101752 set_flag_100063 0 0 s__r_app1_101752 k_life_101661).
  f_life_103475 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661 
  s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
      (run_1024 x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 0 0 s__r_g1_101283
       (f_life_103476 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063
        x_101664 x_1028 k_life_101661)).
  f_life_103476 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063 x_101664 
  x_1028 k_life_101661 s__r_app00_101815 s__r_app01_101815 s__r_app1_101815 ->
      (ha2_2302 s__r_app00_101815 s__r_app01_101815 set_flag_100063 0 0 s__r_app1_101815 k_life_101661).
  f_main_103477 p_i_100109 p_x_100110 s0_100107 s1_100107 set_flag_100108 x_2295 k_main_101849 x_101873 ->
      (life_2300 s0_100107 s1_100107 set_flag_100108 0 0 x_101873 k_main_101849).
  f_run_103470 p_i_100031 p_x_100032 s0_100029 s1_100029 set_flag_100030 x_1025 f_1026 k_run_101540 s__r_f00_101637 
  s__r_f01_101637 s__r_f1_101637 ->
      (f_1026 s__r_f00_101637 s__r_f01_101637 set_flag_100030 0 0 s__r_f1_101637
       (f_run_103471 p_i_100031 p_x_100032 s0_100029 s1_100029 s__r_f00_101637 s__r_f01_101637 s__r_f1_101637
        set_flag_100030 x_1025 f_1026 k_run_101540)).
  f_run_103471 p_i_100031 p_x_100032 s0_100029 s1_100029 s__r_f00_101637 s__r_f01_101637 s__r_f1_101637 
  set_flag_100030 x_1025 f_1026 k_run_101540 s__r_f00_101636 s__r_f01_101636 s__r_f1_101636 ->
      (run_1024 s__r_f1_101636 s__r_f00_101636 s__r_f01_101636 set_flag_100030 0 0 f_1026 k_run_101540).
  f_walk_103469 p_i_100000 p_x_100001 s0_99998 s1_99998 set_flag_99999 x_1022 f_1023 k_walk_101429 s__r_f00_101509 
  s__r_f01_101509 s__r_f1_101509 ->
      (walk_1021 s__r_f1_101509 s__r_f00_101509 s__r_f01_101509 set_flag_99999 0 0 f_1023 k_walk_101429).
  f_x_103465 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_101009 u_101043 ->
      (rand_int
       (f_x_103466 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 u_101043 x_1012 k_g_x_101009)).
  f_x_103466 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 u_101043 x_1012 k_g_x_101009 x_101031 -> (k_g_x_101009 (x_101031 = 0)).
  fail_103483 b k -> {fail} => (k ()).
  g_1010 s0_99869 s1_99869 set_flag_99870 p_i_99871 p_x_99872 i_1011 k_g_100983 ->
      (k_g_100983 s0_99869 s1_99869 (f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870)).
  ha1_2305 s0_99950 s1_99950 set_flag_99951 p_i_99952 p_x_99953 x_1018 k_ha1_101312 -> _|_.
  ha2_2302 s0_99973 s1_99973 set_flag_99974 p_i_99975 p_x_99976 x_1020 k_ha2_101367 -> _|_.
  life_2300 s0_100062 s1_100062 set_flag_100063 p_i_100064 p_x_100065 x_1028 k_life_101661 ->
      (rand_int (f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661)).
  main_1029 s0_100107 s1_100107 set_flag_100108 p_i_100109 p_x_100110 x_2295 k_main_101849 ->
      (rand_int (f_main_103477 p_i_100109 p_x_100110 s0_100107 s1_100107 set_flag_100108 x_2295 k_main_101849)).
  run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 when 
      (x_1025 < 0) -> (k_run_101540 s0_100029 true x_1025).
  run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_100029 true set_flag_100030 0 0 x_1025
       (f_run_103470 p_i_100031 p_x_100032 s0_100029 s1_100029 set_flag_100030 x_1025 f_1026 k_run_101540)).
  sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_sp_101077 when x_101087 -> (k_g_sp_101077 false false i_1011 x_1012).
  sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_sp_101077 when (not x_101087) ->
      (k_g_sp_101077 s0_99875 s1_99875 p_i_99877 p_x_99878).
  u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_u_101026 when s1_99875 ->
      (br_u_103479 (not s0_99875) i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875
       set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026).
  u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_u_101026 when (not s1_99875) -> (k_g_x_u_101026 ()).
  walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 when 
      (x_1022 < 0) -> (k_walk_101429 s0_99998 true x_1022).
  walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_99998 true set_flag_99999 0 0 x_1022
       (f_walk_103469 p_i_100000 p_x_100001 s0_99998 s1_99998 set_flag_99999 x_1022 f_1023 k_walk_101429)).
  x_99879 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_101009 ->
      (u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_1012
       (f_x_103465 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_1012 k_g_x_101009)).
Types:
  main_103463 : X
  br_f_life_103481 : (bool ->
                      int ->
                      int -> bool -> bool -> x_7:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_7)] -> X)
  br_u_103479 : (bool ->
                 int ->
                 int -> int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_g_103464 : (int ->
                int ->
                int ->
                bool ->
                bool ->
                bool -> bool -> bool -> x_10:bool -> int -> int -> int[(not x_10)] -> (bool -> bool -> int -> X) -> X)
  f_life_103472 : (int -> int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  fail_103483 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int ->
            int ->
            (bool ->
             bool -> (bool -> bool -> x_14:bool -> int -> int -> int[(not x_14)] -> (bool -> bool -> int -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              x_5:bool ->
              int ->
              int[(not x_5)] ->
              (bool -> bool -> x_11:bool -> int -> int -> int[(not x_11)] -> (bool -> bool -> int -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_99896 : (int ->
              int ->
              int ->
              int ->
              int ->
              bool -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (bool -> bool -> int -> int -> X) -> X)
  u_99885 : (int -> int -> int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (int ->
               bool ->
               bool ->
               bool ->
               int ->
               int ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X)

(34-1) Abstracting ... DONE!

(34-2) Checking HORS ... DONE!

Error trace::
  main_103463 ... --> 
  main_1029 ... --> 
  f_main_103477 ... --> 
  life_2300 ... --> 
  f_life_103472 [1/2] ... --> 
  br_f_life_103481 [1/2] ... --> 
  g_1010 ... --> 
  f_life_103473 ... --> 
  walk_1021 [2/2] ... --> 
  f_g_103464 [1/2] ... --> 
  x_99879 ... --> 
  u_99885 [1/2] ... --> 
  br_u_103479 [1/2] ... --> 
  fail_103483 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0

(34-3) Checking counterexample ... DONE!

(34-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 35)::
Main: main_103463
  main_103463 -> (main_1029 false false false 0 0 () f_103478).
  br_f_life_103481 b_103482 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when b_103482 ->
      (g_1010 s0_100062 true set_flag_100063 0 0 1
       (f_life_103473 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661)).
  br_f_life_103481 b_103482 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (not b_103482) ->
      (g_1010 s0_100062 true set_flag_100063 0 0 1
       (f_life_103475 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661)).
  br_u_103479 b_103480 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 
  set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026 when b_103480 -> 
      (fail_103483 true k_g_x_u_101026).
  br_u_103479 b_103480 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 
  set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026 when (not b_103480) -> 
      (k_g_x_u_101026 ()).
  f_103478 s__r_main00_101959 s__r_main01_101959 s__r_main1_101959 -> end.
  f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870 s0_99875 s1_99875 set_flag_99876 p_i_99877 
  p_x_99878 x_1012 k_g_101005 when set_flag_99876 ->
      (x_99879 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_1012
       (f_g_103467 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_1012 k_g_101005)).
  f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870 s0_99875 s1_99875 set_flag_99876 p_i_99877 
  p_x_99878 x_1012 k_g_101005 when (not set_flag_99876) -> (k_g_101005 false false (x_1012 - i_1011)).
  f_g_103467 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_101005 x_101087 ->
      (sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_101087 x_1012
       (f_g_103468 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_101087 x_1012 k_g_101005)).
  f_g_103468 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_101005 sp00_101086 sp01_101086 sp10_101086 sp11_101086 ->
      (k_g_101005 sp00_101086 sp01_101086 (x_1012 - i_1011)).
  f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (x_101664 > 0) ->
      (br_f_life_103481 (x_1028 < 0) p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661
       x_101664).
  f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661 x_101664 when 
      (not (x_101664 > 0)) -> (life_2300 s0_100062 s1_100062 set_flag_100063 0 0 x_1028 k_life_101661).
  f_life_103473 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661 
  s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
      (walk_1021 x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 0 0 s__r_g1_101283
       (f_life_103474 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063
        x_101664 x_1028 k_life_101661)).
  f_life_103474 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063 x_101664 
  x_1028 k_life_101661 s__r_app00_101752 s__r_app01_101752 s__r_app1_101752 ->
      (ha1_2305 s__r_app00_101752 s__r_app01_101752 set_flag_100063 0 0 s__r_app1_101752 k_life_101661).
  f_life_103475 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_101664 x_1028 k_life_101661 
  s__r_g00_101283 s__r_g01_101283 s__r_g1_101283 ->
      (run_1024 x_1028 s__r_g00_101283 s__r_g01_101283 set_flag_100063 0 0 s__r_g1_101283
       (f_life_103476 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063
        x_101664 x_1028 k_life_101661)).
  f_life_103476 p_i_100064 p_x_100065 s0_100062 s1_100062 s__r_g00_101283 s__r_g01_101283 set_flag_100063 x_101664 
  x_1028 k_life_101661 s__r_app00_101815 s__r_app01_101815 s__r_app1_101815 ->
      (ha2_2302 s__r_app00_101815 s__r_app01_101815 set_flag_100063 0 0 s__r_app1_101815 k_life_101661).
  f_main_103477 p_i_100109 p_x_100110 s0_100107 s1_100107 set_flag_100108 x_2295 k_main_101849 x_101873 ->
      (life_2300 s0_100107 s1_100107 set_flag_100108 0 0 x_101873 k_main_101849).
  f_run_103470 p_i_100031 p_x_100032 s0_100029 s1_100029 set_flag_100030 x_1025 f_1026 k_run_101540 s__r_f00_101637 
  s__r_f01_101637 s__r_f1_101637 ->
      (f_1026 s__r_f00_101637 s__r_f01_101637 set_flag_100030 0 0 s__r_f1_101637
       (f_run_103471 p_i_100031 p_x_100032 s0_100029 s1_100029 s__r_f00_101637 s__r_f01_101637 s__r_f1_101637
        set_flag_100030 x_1025 f_1026 k_run_101540)).
  f_run_103471 p_i_100031 p_x_100032 s0_100029 s1_100029 s__r_f00_101637 s__r_f01_101637 s__r_f1_101637 
  set_flag_100030 x_1025 f_1026 k_run_101540 s__r_f00_101636 s__r_f01_101636 s__r_f1_101636 ->
      (run_1024 s__r_f1_101636 s__r_f00_101636 s__r_f01_101636 set_flag_100030 0 0 f_1026 k_run_101540).
  f_walk_103469 p_i_100000 p_x_100001 s0_99998 s1_99998 set_flag_99999 x_1022 f_1023 k_walk_101429 s__r_f00_101509 
  s__r_f01_101509 s__r_f1_101509 ->
      (walk_1021 s__r_f1_101509 s__r_f00_101509 s__r_f01_101509 set_flag_99999 0 0 f_1023 k_walk_101429).
  f_x_103465 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_101009 u_101043 ->
      (rand_int
       (f_x_103466 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 u_101043 x_1012 k_g_x_101009)).
  f_x_103466 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 u_101043 x_1012 k_g_x_101009 x_101031 -> (k_g_x_101009 (x_101031 = 0)).
  fail_103483 b k -> {fail} => (k ()).
  g_1010 s0_99869 s1_99869 set_flag_99870 p_i_99871 p_x_99872 i_1011 k_g_100983 ->
      (k_g_100983 s0_99869 s1_99869 (f_g_103464 i_1011 p_i_99871 p_x_99872 s0_99869 s1_99869 set_flag_99870)).
  ha1_2305 s0_99950 s1_99950 set_flag_99951 p_i_99952 p_x_99953 x_1018 k_ha1_101312 -> _|_.
  ha2_2302 s0_99973 s1_99973 set_flag_99974 p_i_99975 p_x_99976 x_1020 k_ha2_101367 -> _|_.
  life_2300 s0_100062 s1_100062 set_flag_100063 p_i_100064 p_x_100065 x_1028 k_life_101661 ->
      (rand_int (f_life_103472 p_i_100064 p_x_100065 s0_100062 s1_100062 set_flag_100063 x_1028 k_life_101661)).
  main_1029 s0_100107 s1_100107 set_flag_100108 p_i_100109 p_x_100110 x_2295 k_main_101849 ->
      (rand_int (f_main_103477 p_i_100109 p_x_100110 s0_100107 s1_100107 set_flag_100108 x_2295 k_main_101849)).
  run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 when 
      (x_1025 < 0) -> (k_run_101540 s0_100029 true x_1025).
  run_1024 x_1025 s0_100029 s1_100029 set_flag_100030 p_i_100031 p_x_100032 f_1026 k_run_101540 when 
      (not (x_1025 < 0)) ->
      (f_1026 s0_100029 true set_flag_100030 0 0 x_1025
       (f_run_103470 p_i_100031 p_x_100032 s0_100029 s1_100029 set_flag_100030 x_1025 f_1026 k_run_101540)).
  sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_sp_101077 when x_101087 -> (k_g_sp_101077 false false i_1011 x_1012).
  sp_99896 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_101087 x_1012 k_g_sp_101077 when (not x_101087) ->
      (k_g_sp_101077 s0_99875 s1_99875 p_i_99877 p_x_99878).
  u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_u_101026 when s1_99875 ->
      (br_u_103479 (not s0_99875) i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875
       set_flag_99870 set_flag_99876 x_1012 k_g_x_u_101026).
  u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_u_101026 when (not s1_99875) -> (k_g_x_u_101026 ()).
  walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 when 
      (x_1022 < 0) -> (k_walk_101429 s0_99998 true x_1022).
  walk_1021 x_1022 s0_99998 s1_99998 set_flag_99999 p_i_100000 p_x_100001 f_1023 k_walk_101429 when 
      (not (x_1022 < 0)) ->
      (f_1023 s0_99998 true set_flag_99999 0 0 x_1022
       (f_walk_103469 p_i_100000 p_x_100001 s0_99998 s1_99998 set_flag_99999 x_1022 f_1023 k_walk_101429)).
  x_99879 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870 
  set_flag_99876 x_1012 k_g_x_101009 ->
      (u_99885 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
       set_flag_99876 x_1012
       (f_x_103465 i_1011 p_i_99871 p_i_99877 p_x_99872 p_x_99878 s0_99869 s0_99875 s1_99869 s1_99875 set_flag_99870
        set_flag_99876 x_1012 k_g_x_101009)).
Types:
  main_103463 : X
  br_f_life_103481 : (x_2:bool ->
                      int ->
                      int ->
                      bool ->
                      bool ->
                      x_7:bool -> x_8:int -> (bool -> bool -> unit -> X) -> int[1 <= -x_8 || (not x_2); (not x_7)] -> X)
  br_u_103479 : (bool ->
                 int ->
                 int -> int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  f_g_103464 : (int ->
                int ->
                int ->
                bool ->
                bool ->
                bool -> bool -> bool -> x_10:bool -> int -> int -> int[(not x_10)] -> (bool -> bool -> int -> X) -> X)
  f_life_103472 : (int -> int -> bool -> bool -> x_6:bool -> int -> (bool -> bool -> unit -> X) -> int[(not x_6)] -> X)
  fail_103483 : (bool -> (unit -> X) -> X)
  g_1010 : (bool ->
            bool ->
            bool ->
            int ->
            int ->
            int ->
            (bool ->
             bool -> (bool -> bool -> x_14:bool -> int -> int -> int[(not x_14)] -> (bool -> bool -> int -> X) -> X) ->
             X) ->
            X)
  life_2300 : (bool -> bool -> x_4:bool -> int -> int -> int[(not x_4)] -> (bool -> bool -> unit -> X) -> X)
  run_1024 : (int ->
              bool ->
              bool ->
              x_5:bool ->
              int ->
              int[(not x_5)] ->
              (bool -> bool -> x_11:bool -> int -> int -> int[(not x_11)] -> (bool -> bool -> int -> X) -> X) ->
              (bool -> bool -> int -> X) -> X)
  sp_99896 : (int ->
              int ->
              int ->
              int ->
              int ->
              bool -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (bool -> bool -> int -> int -> X) -> X)
  u_99885 : (int -> int -> int -> int -> int -> bool -> bool -> bool -> bool -> bool -> bool -> int -> (unit -> X) -> X)
  walk_1021 : (x_2:int ->
               bool ->
               bool ->
               bool ->
               int ->
               int[1 <= -x_2] ->
               (bool -> bool -> bool -> int -> int -> int -> (bool -> bool -> int -> X) -> X) ->
               (bool -> bool -> int -> X) -> X)

(35-1) Abstracting ... DONE!

(35-2) Checking HORS ... DONE!

Safe!

Fair terminating!

cycles: 10
CEGAR-cycles: 35
total: 140.824 sec
  abst: 92.356 sec
  mc: 41.912 sec
  refine: 4.804 sec

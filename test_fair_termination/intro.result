MoCHi: Model Checker for Higher-Order Programs
  Build: _af132b7 (after 2015-07-27 18:08:37 +0900)
  FPAT version: af132b7
  TRecS version: 1.33
  HorSat version: 0.99
  OCaml version: 4.02.1
  Command: ./mochi.opt -ignore-conf -color -fair-termination -bool-init-empty -fpat '-wp-max 2 -neg-pred' 
           test_fair_termination/intro.ml -rank-widen -horsat

parsed:
 let event_1008 s_1009 = () in
 let rec f_1010 x_1011 =
   if x_1011 < 0 then () else if x_1011 = 0 then event_1008 "A" else let u_2021 = f_1010 0 in
                                                             f_1010 1
 in
 ()

FAIRNESS: {(A, Never)}

###set_main:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047 then let u_2054 = if not (#0 s_2046) then assert false in
                         rand_int () = 0 else true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let s_2050 = fst sp_2062 in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (s_2050, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 s_2050 true p_x_2052 0 in
       let s_2071 = fst s__r_f_2070 in
       let u_2021 = snd s__r_f_2070 in
       f_1010 s_2071 true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 let s_2077 = fst s__r_f_2076 in
 let r_f_2037 = snd s__r_f_2076 in
 r_f_2037

###beta_reduce_trivial:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047 then let u_2054 = if not (#0 s_2046) then assert false in
                         rand_int () = 0 else true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let s_2050 = fst sp_2062 in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (s_2050, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 s_2050 true p_x_2052 0 in
       let s_2071 = fst s__r_f_2070 in
       f_1010 s_2071 true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 let r_f_2037 = snd s__r_f_2076 in
 r_f_2037

###inline:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047 then let u_2054 = if not (#0 s_2046) then assert false in
                         rand_int () = 0 else true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (fst sp_2062, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 (fst sp_2062) true p_x_2052 0 in
       f_1010 (fst s__r_f_2070) true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 snd s__r_f_2076

###CPS:
 (let rec f_1010 s_2046 set_flag_2047 p_x_2048 x_1011 k_f_2250 =
    let x_2049 k_f_x_2286 =
      if set_flag_2047
      then
        let u_2054 k_f_x_u_2267 = if not (#0 s_2046) then <|fail|> () k_f_x_u_2267 else k_f_x_u_2267 () in
        u_2054 (fun u_2284 -> rand_int_cps () (fun x_2272 -> k_f_x_2286 (x_2272 = 0)))
      else
        k_f_x_2286 true
    in
    x_2049
      (fun x_2376 ->
         let sp_2062 k_f_sp_2316 =
           if x_2376 then k_f_sp_2316 ((false), (x_1011)) else k_f_sp_2316 (s_2046, (p_x_2048))
         in
         sp_2062
           (fun sp_2375 ->
              if x_1011 < 0
              then
                k_f_2250 (fst sp_2375, ())
              else
                if x_1011 = 0
                then
                  k_f_2250 ((true), ())
                else
                  let s__r_f_2070 k_f_s__r_f_2346 =
                    (f_1010 (fst sp_2375) true (#0 (snd sp_2375))) 0 k_f_s__r_f_2346
                  in
                  s__r_f_2070
                    (fun s__r_f_2365 -> (f_1010 (fst s__r_f_2365) true (#0 (snd sp_2375))) 1 k_f_2250)))
  in
  let s__r_f_2076 k_s__r_f_2445 =
    rand_int_cps () (fun x_2450 -> (((f_1010 (false)) false) 0) x_2450 k_s__r_f_2445)
  in
  s__r_f_2076 (fun s__r_f_2451 -> {end}) # [ACPS])

###remove_pair:
 (let rec f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_2250 =
    let x_2049 k_f_x_2286 =
      if set_flag_2047
      then
        let u_2054 k_f_x_u_2267 = if not s0_2046 then <|fail|> () k_f_x_u_2267 else k_f_x_u_2267 () in
        u_2054 (fun u_2284 -> rand_int_cps () (fun x_2272 -> k_f_x_2286 (x_2272 = 0)))
      else
        k_f_x_2286 true
    in
    x_2049
      (fun x_2376 ->
         let sp_2062 k_f_sp_2316 =
           if x_2376 then k_f_sp_2316 false x_1011 else k_f_sp_2316 s0_2046 p_x_2048
         in
         sp_2062
           (fun sp00_2375 sp10_2375 ->
              if x_1011 < 0
              then
                k_f_2250 sp00_2375 ()
              else
                if x_1011 = 0
                then
                  k_f_2250 true ()
                else
                  f_1010
                    sp00_2375 true sp10_2375 0 
                    (fun s__r_f00_2365 s__r_f1_2365 -> f_1010 s__r_f00_2365 true sp10_2375 1 k_f_2250)))
  in
  let s__r_f_2076 k_s__r_f_2445 =
    rand_int_cps () (fun x_2450 -> f_1010 false false 0 x_2450 k_s__r_f_2445)
  in
  s__r_f_2076 (fun s__r_f00_2451 s__r_f1_2451 -> {end}) # [ACPS])

Program with abstraction types (CEGAR-cycle 0)::
Main: main_2811
  main_2811 -> (s__r_f_2076 f_2818).
  br_f_f_2819 b_2820 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when b_2820 ->
      (k_f_2250 true ()).
  br_f_f_2819 b_2820 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (not b_2820) ->
      (f_1010 sp00_2375 true sp10_2375 0
       (f_f_2816 p_x_2048 s0_2046 set_flag_2047 sp00_2375 sp10_2375 x_1011 x_2376 k_f_2250)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_2250 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_2814 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_2250)).
  f_2818 s__r_f00_2451 s__r_f1_2451 -> end.
  f_f_2814 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_2250 x_2376 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376
       (f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250)).
  f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (x_1011 < 0) -> (k_f_2250 sp00_2375 ()).
  f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (not (x_1011 < 0)) ->
      (br_f_f_2819 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375).
  f_f_2816 p_x_2048 s0_2046 set_flag_2047 sp00_2375 sp10_2375 x_1011 x_2376 k_f_2250 s__r_f00_2365 s__r_f1_2365 ->
      (f_1010 s__r_f00_2365 true sp10_2375 1 k_f_2250).
  f_s__r_f_2817 k_s__r_f_2445 x_2450 -> (f_1010 false false 0 x_2450 k_s__r_f_2445).
  f_x_2812 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 u_2284 ->
      (rand_int (f_x_2813 p_x_2048 s0_2046 set_flag_2047 u_2284 x_1011 k_f_x_2286)).
  f_x_2813 p_x_2048 s0_2046 set_flag_2047 u_2284 x_1011 k_f_x_2286 x_2272 -> (k_f_x_2286 (x_2272 = 0)).
  fail_2821 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_2445 -> (rand_int (f_s__r_f_2817 k_s__r_f_2445)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_sp_2316 when x_2376 -> (k_f_sp_2316 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_sp_2316 when (not x_2376) -> (k_f_sp_2316 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_2267 when (not s0_2046) -> (fail_2821 true k_f_x_u_2267).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_2267 when (not (not s0_2046)) -> (k_f_x_u_2267 ()).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_2812 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 when (not set_flag_2047) -> (k_f_x_2286 true).
Types:
  main_2811 : X
  br_f_f_2819 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> bool -> int -> int -> (bool -> unit -> X) -> X)
  f_f_2815 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  fail_2821 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> bool -> int -> (bool -> X) -> X)

(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_2811 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_2817 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  fail_2821 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0

(0-3) Checking counterexample ... DONE!

(0-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 1)::
Main: main_2811
  main_2811 -> (s__r_f_2076 f_2818).
  br_f_f_2819 b_2820 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when b_2820 ->
      (k_f_2250 true ()).
  br_f_f_2819 b_2820 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (not b_2820) ->
      (f_1010 sp00_2375 true sp10_2375 0
       (f_f_2816 p_x_2048 s0_2046 set_flag_2047 sp00_2375 sp10_2375 x_1011 x_2376 k_f_2250)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_2250 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_2814 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_2250)).
  f_2818 s__r_f00_2451 s__r_f1_2451 -> end.
  f_f_2814 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_2250 x_2376 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376
       (f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250)).
  f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (x_1011 < 0) -> (k_f_2250 sp00_2375 ()).
  f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (not (x_1011 < 0)) ->
      (br_f_f_2819 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375).
  f_f_2816 p_x_2048 s0_2046 set_flag_2047 sp00_2375 sp10_2375 x_1011 x_2376 k_f_2250 s__r_f00_2365 s__r_f1_2365 ->
      (f_1010 s__r_f00_2365 true sp10_2375 1 k_f_2250).
  f_s__r_f_2817 k_s__r_f_2445 x_2450 -> (f_1010 false false 0 x_2450 k_s__r_f_2445).
  f_x_2812 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 u_2284 ->
      (rand_int (f_x_2813 p_x_2048 s0_2046 set_flag_2047 u_2284 x_1011 k_f_x_2286)).
  f_x_2813 p_x_2048 s0_2046 set_flag_2047 u_2284 x_1011 k_f_x_2286 x_2272 -> (k_f_x_2286 (x_2272 = 0)).
  fail_2821 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_2445 -> (rand_int (f_s__r_f_2817 k_s__r_f_2445)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_sp_2316 when x_2376 -> (k_f_sp_2316 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_sp_2316 when (not x_2376) -> (k_f_sp_2316 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_2267 when (not s0_2046) -> (fail_2821 true k_f_x_u_2267).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_2267 when (not (not s0_2046)) -> (k_f_x_u_2267 ()).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_2812 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 when (not set_flag_2047) -> (k_f_x_2286 true).
Types:
  main_2811 : X
  br_f_f_2819 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> x_3:bool -> int -> int[(not x_3)] -> (bool -> unit -> X) -> X)
  f_f_2815 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  fail_2821 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> x_4:bool -> int[(not x_4)] -> (bool -> X) -> X)

(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_2811 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_2817 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_2814 ... --> 
  sp_2062 [2/2] ... --> 
  f_f_2815 [2/2] ... --> 
  br_f_f_2819 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  fail_2821 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 1; 1; 1; 0; 0; 0; 0

(1-3) Checking counterexample ... DONE!

(1-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_2811
  main_2811 -> (s__r_f_2076 f_2818).
  br_f_f_2819 b_2820 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when b_2820 ->
      (k_f_2250 true ()).
  br_f_f_2819 b_2820 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (not b_2820) ->
      (f_1010 sp00_2375 true sp10_2375 0
       (f_f_2816 p_x_2048 s0_2046 set_flag_2047 sp00_2375 sp10_2375 x_1011 x_2376 k_f_2250)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_2250 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_2814 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_2250)).
  f_2818 s__r_f00_2451 s__r_f1_2451 -> end.
  f_f_2814 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_2250 x_2376 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376
       (f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250)).
  f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (x_1011 < 0) -> (k_f_2250 sp00_2375 ()).
  f_f_2815 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375 when 
      (not (x_1011 < 0)) ->
      (br_f_f_2819 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_2250 sp00_2375 sp10_2375).
  f_f_2816 p_x_2048 s0_2046 set_flag_2047 sp00_2375 sp10_2375 x_1011 x_2376 k_f_2250 s__r_f00_2365 s__r_f1_2365 ->
      (f_1010 s__r_f00_2365 true sp10_2375 1 k_f_2250).
  f_s__r_f_2817 k_s__r_f_2445 x_2450 -> (f_1010 false false 0 x_2450 k_s__r_f_2445).
  f_x_2812 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 u_2284 ->
      (rand_int (f_x_2813 p_x_2048 s0_2046 set_flag_2047 u_2284 x_1011 k_f_x_2286)).
  f_x_2813 p_x_2048 s0_2046 set_flag_2047 u_2284 x_1011 k_f_x_2286 x_2272 -> (k_f_x_2286 (x_2272 = 0)).
  fail_2821 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_2445 -> (rand_int (f_s__r_f_2817 k_s__r_f_2445)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_sp_2316 when x_2376 -> (k_f_sp_2316 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_2376 k_f_sp_2316 when (not x_2376) -> (k_f_sp_2316 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_2267 when (not s0_2046) -> (fail_2821 true k_f_x_u_2267).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_2267 when (not (not s0_2046)) -> (k_f_x_u_2267 ()).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_2812 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_2286 when (not set_flag_2047) -> (k_f_x_2286 true).
Types:
  main_2811 : X
  br_f_f_2819 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> x_3:bool -> int -> int[(not x_3)] -> (bool -> unit -> X) -> X)
  f_f_2815 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  fail_2821 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> x_6:bool[x_6] -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> x_4:bool -> int[(not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_2811 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_2817 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_2814 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_2815 [2/2] ... --> 
  br_f_f_2819 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  fail_2821 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0

(2-3) Checking counterexample ... DONE!

(2-4) Discovering ranking function ... 
DONE!

###set_main:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047
     then
       let u_2054 =
         if not (#0 s_2046)
         then
           let u_3699 = if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then () else _|_ () in
           assert ((1 * x_1011) + 0 >= 0)
       in
       rand_int () = 0
     else
       true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let s_2050 = fst sp_2062 in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (s_2050, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 s_2050 true p_x_2052 0 in
       let s_2071 = fst s__r_f_2070 in
       let u_2021 = snd s__r_f_2070 in
       f_1010 s_2071 true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 let s_2077 = fst s__r_f_2076 in
 let r_f_2037 = snd s__r_f_2076 in
 r_f_2037

###beta_reduce_trivial:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047
     then
       let u_2054 =
         if not (#0 s_2046)
         then
           let u_3699 = if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then () else _|_ () in
           assert ((1 * x_1011) + 0 >= 0)
       in
       rand_int () = 0
     else
       true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let s_2050 = fst sp_2062 in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (s_2050, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 s_2050 true p_x_2052 0 in
       let s_2071 = fst s__r_f_2070 in
       f_1010 s_2071 true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 let r_f_2037 = snd s__r_f_2076 in
 r_f_2037

###inline:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047
     then
       let u_2054 =
         if not (#0 s_2046)
         then
           let u_3699 = if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then () else _|_ () in
           assert ((1 * x_1011) + 0 >= 0)
       in
       rand_int () = 0
     else
       true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (fst sp_2062, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 (fst sp_2062) true p_x_2052 0 in
       f_1010 (fst s__r_f_2070) true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 snd s__r_f_2076

###CPS:
 (let rec f_1010 s_2046 set_flag_2047 p_x_2048 x_1011 k_f_3876 =
    let x_2049 k_f_x_3931 =
      if set_flag_2047
      then
        let u_2054 k_f_x_u_3912 =
          if not (#0 s_2046)
          then
            let u_3699 k_f_x_u_u_3896 = if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then k_f_x_u_u_3896 () else _|_ in
            u_3699
              (fun u_3910 -> if (1 * x_1011) + 0 >= 0 then k_f_x_u_3912 () else <|fail|> () k_f_x_u_3912)
          else
            k_f_x_u_3912 ()
        in
        u_2054 (fun u_3929 -> rand_int_cps () (fun x_3917 -> k_f_x_3931 (x_3917 = 0)))
      else
        k_f_x_3931 true
    in
    x_2049
      (fun x_4021 ->
         let sp_2062 k_f_sp_3961 =
           if x_4021 then k_f_sp_3961 ((false), (x_1011)) else k_f_sp_3961 (s_2046, (p_x_2048))
         in
         sp_2062
           (fun sp_4020 ->
              if x_1011 < 0
              then
                k_f_3876 (fst sp_4020, ())
              else
                if x_1011 = 0
                then
                  k_f_3876 ((true), ())
                else
                  let s__r_f_2070 k_f_s__r_f_3991 =
                    (f_1010 (fst sp_4020) true (#0 (snd sp_4020))) 0 k_f_s__r_f_3991
                  in
                  s__r_f_2070
                    (fun s__r_f_4010 ->
                       (f_1010 (fst s__r_f_4010) true (#0 (snd sp_4020))) 1 k_f_3876)))
  in
  let s__r_f_2076 k_s__r_f_4090 =
    rand_int_cps () (fun x_4095 -> (((f_1010 (false)) false) 0) x_4095 k_s__r_f_4090)
  in
  s__r_f_2076 (fun s__r_f_4096 -> {end}) # [ACPS])

###remove_pair:
 (let rec f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_3876 =
    let x_2049 k_f_x_3931 =
      if set_flag_2047
      then
        let u_2054 k_f_x_u_3912 =
          if not s0_2046
          then
            let u_3699 k_f_x_u_u_3896 = if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then k_f_x_u_u_3896 () else _|_ in
            u_3699
              (fun u_3910 -> if (1 * x_1011) + 0 >= 0 then k_f_x_u_3912 () else <|fail|> () k_f_x_u_3912)
          else
            k_f_x_u_3912 ()
        in
        u_2054 (fun u_3929 -> rand_int_cps () (fun x_3917 -> k_f_x_3931 (x_3917 = 0)))
      else
        k_f_x_3931 true
    in
    x_2049
      (fun x_4021 ->
         let sp_2062 k_f_sp_3961 =
           if x_4021 then k_f_sp_3961 false x_1011 else k_f_sp_3961 s0_2046 p_x_2048
         in
         sp_2062
           (fun sp00_4020 sp10_4020 ->
              if x_1011 < 0
              then
                k_f_3876 sp00_4020 ()
              else
                if x_1011 = 0
                then
                  k_f_3876 true ()
                else
                  f_1010
                    sp00_4020 true sp10_4020 0 
                    (fun s__r_f00_4010 s__r_f1_4010 ->
                       f_1010 s__r_f00_4010 true sp10_4020 1 k_f_3876)))
  in
  let s__r_f_2076 k_s__r_f_4090 =
    rand_int_cps () (fun x_4095 -> f_1010 false false 0 x_4095 k_s__r_f_4090)
  in
  s__r_f_2076 (fun s__r_f00_4096 s__r_f1_4096 -> {end}) # [ACPS])

Program with abstraction types (CEGAR-cycle 2)::
Main: main_4486
  main_4486 -> (s__r_f_2076 f_4494).
  br_f_f_4495 b_4496 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when b_4496 ->
      (k_f_3876 true ()).
  br_f_f_4495 b_4496 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (not b_4496) ->
      (f_1010 sp00_4020 true sp10_4020 0
       (f_f_4492 p_x_2048 s0_2046 set_flag_2047 sp00_4020 sp10_4020 x_1011 x_4021 k_f_3876)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_3876 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_4490 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_3876)).
  f_4494 s__r_f00_4096 s__r_f1_4096 -> end.
  f_f_4490 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_3876 x_4021 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021
       (f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876)).
  f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (x_1011 < 0) -> (k_f_3876 sp00_4020 ()).
  f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (not (x_1011 < 0)) ->
      (br_f_f_4495 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020).
  f_f_4492 p_x_2048 s0_2046 set_flag_2047 sp00_4020 sp10_4020 x_1011 x_4021 k_f_3876 s__r_f00_4010 s__r_f1_4010 ->
      (f_1010 s__r_f00_4010 true sp10_4020 1 k_f_3876).
  f_s__r_f_4493 k_s__r_f_4090 x_4095 -> (f_1010 false false 0 x_4095 k_s__r_f_4090).
  f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 u_3910 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_3912 ()).
  f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 u_3910 when 
      (not (((1 * x_1011) + 0) >= 0)) -> (fail_4497 true k_f_x_u_3912).
  f_x_4488 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 u_3929 ->
      (rand_int (f_x_4489 p_x_2048 s0_2046 set_flag_2047 u_3929 x_1011 k_f_x_3931)).
  f_x_4489 p_x_2048 s0_2046 set_flag_2047 u_3929 x_1011 k_f_x_3931 x_3917 -> (k_f_x_3931 (x_3917 = 0)).
  fail_4497 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_4090 -> (rand_int (f_s__r_f_4493 k_s__r_f_4090)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_sp_3961 when x_4021 -> (k_f_sp_3961 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_sp_3961 when (not x_4021) -> (k_f_sp_3961 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 when (not (not s0_2046)) -> (k_f_x_u_3912 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_3896 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_3896 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_3896 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      _|_.
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_4488 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 when (not set_flag_2047) -> (k_f_x_3931 true).
Types:
  main_4486 : X
  br_f_f_4495 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> bool -> int -> int -> (bool -> unit -> X) -> X)
  f_f_4491 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_u_4487 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_4497 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  u_3699 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> bool -> int -> (bool -> X) -> X)

(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_4486 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_4493 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [1/2] ... --> 
  f_u_4487 [2/2] ... --> 
  fail_4497 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 0; 1; 0

(2-3) Checking counterexample ... DONE!

(2-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_4486
  main_4486 -> (s__r_f_2076 f_4494).
  br_f_f_4495 b_4496 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when b_4496 ->
      (k_f_3876 true ()).
  br_f_f_4495 b_4496 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (not b_4496) ->
      (f_1010 sp00_4020 true sp10_4020 0
       (f_f_4492 p_x_2048 s0_2046 set_flag_2047 sp00_4020 sp10_4020 x_1011 x_4021 k_f_3876)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_3876 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_4490 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_3876)).
  f_4494 s__r_f00_4096 s__r_f1_4096 -> end.
  f_f_4490 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_3876 x_4021 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021
       (f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876)).
  f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (x_1011 < 0) -> (k_f_3876 sp00_4020 ()).
  f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (not (x_1011 < 0)) ->
      (br_f_f_4495 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020).
  f_f_4492 p_x_2048 s0_2046 set_flag_2047 sp00_4020 sp10_4020 x_1011 x_4021 k_f_3876 s__r_f00_4010 s__r_f1_4010 ->
      (f_1010 s__r_f00_4010 true sp10_4020 1 k_f_3876).
  f_s__r_f_4493 k_s__r_f_4090 x_4095 -> (f_1010 false false 0 x_4095 k_s__r_f_4090).
  f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 u_3910 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_3912 ()).
  f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 u_3910 when 
      (not (((1 * x_1011) + 0) >= 0)) -> (fail_4497 true k_f_x_u_3912).
  f_x_4488 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 u_3929 ->
      (rand_int (f_x_4489 p_x_2048 s0_2046 set_flag_2047 u_3929 x_1011 k_f_x_3931)).
  f_x_4489 p_x_2048 s0_2046 set_flag_2047 u_3929 x_1011 k_f_x_3931 x_3917 -> (k_f_x_3931 (x_3917 = 0)).
  fail_4497 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_4090 -> (rand_int (f_s__r_f_4493 k_s__r_f_4090)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_sp_3961 when x_4021 -> (k_f_sp_3961 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_sp_3961 when (not x_4021) -> (k_f_sp_3961 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 when (not (not s0_2046)) -> (k_f_x_u_3912 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_3896 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_3896 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_3896 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      _|_.
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_4488 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 when (not set_flag_2047) -> (k_f_x_3931 true).
Types:
  main_4486 : X
  br_f_f_4495 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> x_3:bool -> int -> int[(not x_3)] -> (bool -> unit -> X) -> X)
  f_f_4491 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_u_4487 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_4497 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  u_3699 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> x_4:bool -> int[(not x_4)] -> (bool -> X) -> X)

(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_4486 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_4493 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_4490 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_4491 [2/2] ... --> 
  br_f_f_4495 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [1/2] ... --> 
  f_u_4487 [2/2] ... --> 
  fail_4497 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 1; 0

(3-3) Checking counterexample ... DONE!

(3-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 4)::
Main: main_4486
  main_4486 -> (s__r_f_2076 f_4494).
  br_f_f_4495 b_4496 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when b_4496 ->
      (k_f_3876 true ()).
  br_f_f_4495 b_4496 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (not b_4496) ->
      (f_1010 sp00_4020 true sp10_4020 0
       (f_f_4492 p_x_2048 s0_2046 set_flag_2047 sp00_4020 sp10_4020 x_1011 x_4021 k_f_3876)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_3876 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_4490 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_3876)).
  f_4494 s__r_f00_4096 s__r_f1_4096 -> end.
  f_f_4490 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_3876 x_4021 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021
       (f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876)).
  f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (x_1011 < 0) -> (k_f_3876 sp00_4020 ()).
  f_f_4491 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020 when 
      (not (x_1011 < 0)) ->
      (br_f_f_4495 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_3876 sp00_4020 sp10_4020).
  f_f_4492 p_x_2048 s0_2046 set_flag_2047 sp00_4020 sp10_4020 x_1011 x_4021 k_f_3876 s__r_f00_4010 s__r_f1_4010 ->
      (f_1010 s__r_f00_4010 true sp10_4020 1 k_f_3876).
  f_s__r_f_4493 k_s__r_f_4090 x_4095 -> (f_1010 false false 0 x_4095 k_s__r_f_4090).
  f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 u_3910 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_3912 ()).
  f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 u_3910 when 
      (not (((1 * x_1011) + 0) >= 0)) -> (fail_4497 true k_f_x_u_3912).
  f_x_4488 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 u_3929 ->
      (rand_int (f_x_4489 p_x_2048 s0_2046 set_flag_2047 u_3929 x_1011 k_f_x_3931)).
  f_x_4489 p_x_2048 s0_2046 set_flag_2047 u_3929 x_1011 k_f_x_3931 x_3917 -> (k_f_x_3931 (x_3917 = 0)).
  fail_4497 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_4090 -> (rand_int (f_s__r_f_4493 k_s__r_f_4090)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_sp_3961 when x_4021 -> (k_f_sp_3961 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_4021 k_f_sp_3961 when (not x_4021) -> (k_f_sp_3961 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_4487 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_3912 when (not (not s0_2046)) -> (k_f_x_u_3912 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_3896 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_3896 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_3896 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      _|_.
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_4488 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_3931 when (not set_flag_2047) -> (k_f_x_3931 true).
Types:
  main_4486 : X
  br_f_f_4495 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> x_3:bool -> int -> x_5:int[x_5 >= 0; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_4491 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_u_4487 : (int -> bool -> bool -> x_5:int -> (unit -> X) -> unit[x_5 >= 0] -> X)
  fail_4497 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> x_5:int[x_5 >= 0] -> (unit -> X) -> X)
  u_3699 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> x_4:bool -> x_5:int[x_5 >= 0; (not x_4)] -> (bool -> X) -> X)

(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Safe!

###set_main:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047
     then
       let u_2054 =
         if not (#0 s_2046)
         then
           let u_3699 = assert ((1 * p_x_2048) + 0 > (1 * x_1011) + 0) in
           if (1 * x_1011) + 0 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     else
       true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let s_2050 = fst sp_2062 in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (s_2050, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 s_2050 true p_x_2052 0 in
       let s_2071 = fst s__r_f_2070 in
       let u_2021 = snd s__r_f_2070 in
       f_1010 s_2071 true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 let s_2077 = fst s__r_f_2076 in
 let r_f_2037 = snd s__r_f_2076 in
 r_f_2037

###beta_reduce_trivial:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047
     then
       let u_2054 =
         if not (#0 s_2046)
         then
           let u_3699 = assert ((1 * p_x_2048) + 0 > (1 * x_1011) + 0) in
           if (1 * x_1011) + 0 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     else
       true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let s_2050 = fst sp_2062 in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (s_2050, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 s_2050 true p_x_2052 0 in
       let s_2071 = fst s__r_f_2070 in
       f_1010 s_2071 true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 let r_f_2037 = snd s__r_f_2076 in
 r_f_2037

###inline:
 let rec f_1010 (s_2046:(bool)) (set_flag_2047:bool) (p_x_2048:int) (x_1011:int) =
   let x_2049 =
     if set_flag_2047
     then
       let u_2054 =
         if not (#0 s_2046)
         then
           let u_3699 = assert ((1 * p_x_2048) + 0 > (1 * x_1011) + 0) in
           if (1 * x_1011) + 0 >= 0 then () else _|_ ()
       in
       rand_int () = 0
     else
       true
   in
   let sp_2062 = if x_2049 then ((false), (x_1011)) else (s_2046, (p_x_2048)) in
   let p_x_2052 = #0 (snd sp_2062) in
   if x_1011 < 0
   then
     (fst sp_2062, ())
   else
     if x_1011 = 0
     then
       ((true), ())
     else
       let s__r_f_2070 = f_1010 (fst sp_2062) true p_x_2052 0 in
       f_1010 (fst s__r_f_2070) true p_x_2052 1
 in
 let s__r_f_2076 = f_1010 (false) false 0 (rand_int ()) in
 snd s__r_f_2076

###CPS:
 (let rec f_1010 s_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 =
    let x_2049 k_f_x_5695 =
      if set_flag_2047
      then
        let u_2054 k_f_x_u_5676 =
          if not (#0 s_2046)
          then
            let u_3699 k_f_x_u_u_5655 =
              if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then k_f_x_u_u_5655 () else <|fail|> () k_f_x_u_u_5655
            in
            u_3699 (fun u_5674 -> if (1 * x_1011) + 0 >= 0 then k_f_x_u_5676 () else _|_)
          else
            k_f_x_u_5676 ()
        in
        u_2054 (fun u_5693 -> rand_int_cps () (fun x_5681 -> k_f_x_5695 (x_5681 = 0)))
      else
        k_f_x_5695 true
    in
    x_2049
      (fun x_5785 ->
         let sp_2062 k_f_sp_5725 =
           if x_5785 then k_f_sp_5725 ((false), (x_1011)) else k_f_sp_5725 (s_2046, (p_x_2048))
         in
         sp_2062
           (fun sp_5784 ->
              if x_1011 < 0
              then
                k_f_5640 (fst sp_5784, ())
              else
                if x_1011 = 0
                then
                  k_f_5640 ((true), ())
                else
                  let s__r_f_2070 k_f_s__r_f_5755 =
                    (f_1010 (fst sp_5784) true (#0 (snd sp_5784))) 0 k_f_s__r_f_5755
                  in
                  s__r_f_2070
                    (fun s__r_f_5774 ->
                       (f_1010 (fst s__r_f_5774) true (#0 (snd sp_5784))) 1 k_f_5640)))
  in
  let s__r_f_2076 k_s__r_f_5854 =
    rand_int_cps () (fun x_5859 -> (((f_1010 (false)) false) 0) x_5859 k_s__r_f_5854)
  in
  s__r_f_2076 (fun s__r_f_5860 -> {end}) # [ACPS])

###remove_pair:
 (let rec f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 =
    let x_2049 k_f_x_5695 =
      if set_flag_2047
      then
        let u_2054 k_f_x_u_5676 =
          if not s0_2046
          then
            let u_3699 k_f_x_u_u_5655 =
              if (1 * p_x_2048) + 0 > (1 * x_1011) + 0 then k_f_x_u_u_5655 () else <|fail|> () k_f_x_u_u_5655
            in
            u_3699 (fun u_5674 -> if (1 * x_1011) + 0 >= 0 then k_f_x_u_5676 () else _|_)
          else
            k_f_x_u_5676 ()
        in
        u_2054 (fun u_5693 -> rand_int_cps () (fun x_5681 -> k_f_x_5695 (x_5681 = 0)))
      else
        k_f_x_5695 true
    in
    x_2049
      (fun x_5785 ->
         let sp_2062 k_f_sp_5725 =
           if x_5785 then k_f_sp_5725 false x_1011 else k_f_sp_5725 s0_2046 p_x_2048
         in
         sp_2062
           (fun sp00_5784 sp10_5784 ->
              if x_1011 < 0
              then
                k_f_5640 sp00_5784 ()
              else
                if x_1011 = 0
                then
                  k_f_5640 true ()
                else
                  f_1010
                    sp00_5784 true sp10_5784 0 
                    (fun s__r_f00_5774 s__r_f1_5774 ->
                       f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640)))
  in
  let s__r_f_2076 k_s__r_f_5854 =
    rand_int_cps () (fun x_5859 -> f_1010 false false 0 x_5859 k_s__r_f_5854)
  in
  s__r_f_2076 (fun s__r_f00_5860 s__r_f1_5860 -> {end}) # [ACPS])

Program with abstraction types (CEGAR-cycle 5)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> bool -> int -> int -> (bool -> unit -> X) -> X)
  f_f_6255 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  u_3699 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> bool -> int -> (bool -> X) -> X)

(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 0; 0; 1; 0

(5-3) Checking counterexample ... DONE!

(5-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 6)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (bool -> int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_1010 : (bool -> x_3:bool -> int -> int[(not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> int -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> int -> bool -> (bool -> int -> X) -> X)
  u_2054 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  u_3699 : (int -> bool -> bool -> int -> (unit -> X) -> X)
  x_2049 : (int -> bool -> x_4:bool -> int[(not x_4)] -> (bool -> X) -> X)

(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 1; 0

(6-3) Checking counterexample ... DONE!

(6-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 7)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> x_13:int[x_13 > 0 || x_2] -> X)
  f_1010 : (bool -> x_3:bool -> x_4:int -> x_5:int[1 <= x_4 - x_5; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int -> bool -> bool -> x_5:int -> bool -> (bool -> unit -> X) -> bool -> x_12:int[x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> x_5:int -> bool -> (bool -> x_9:int[x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int -> bool -> x_4:bool -> x_5:int[1 <= x_2 - x_5; (not x_4)] -> (bool -> X) -> X)

(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [2/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 1; 1; 1; 0; 0; 0; 1; 0

(7-3) Checking counterexample ... DONE!

(7-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 1

Program with abstraction types (CEGAR-cycle 8)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> x_13:int[x_13 > 0 || x_2] -> X)
  f_1010 : (bool -> x_3:bool -> x_4:int -> x_5:int[1 <= x_4 - x_5; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int -> bool -> bool -> x_5:int -> bool -> (bool -> unit -> X) -> bool -> x_12:int[x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> x_5:int -> x_6:bool[x_6] -> (bool -> x_9:int[x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int -> bool -> x_4:bool -> x_5:int[1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(8-1) Abstracting ... DONE!

(8-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [1/2] ... --> 
  f_f_6256 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 1; 0; 0; 0; 0; 0; 0; 0; 1; 0

(8-3) Checking counterexample ... DONE!

(8-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 1

Program with abstraction types (CEGAR-cycle 9)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int -> bool -> bool -> int -> bool -> (bool -> unit -> X) -> bool -> x_13:int[x_13 > 0 || x_2] -> X)
  f_1010 : (bool -> x_3:bool -> x_4:int -> x_5:int[x_3; 1 <= x_4 - x_5; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int -> bool -> bool -> x_5:int -> bool -> (bool -> unit -> X) -> bool -> x_12:int[x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> x_5:int -> x_6:bool[x_6] -> (bool -> x_9:int[x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int -> bool -> x_4:bool -> x_5:int[x_4; 1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(9-1) Abstracting ... DONE!

(9-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [2/2] ... --> 
  f_x_6252 ... --> 
  f_x_6253 ... --> 
  f_f_6254 ... --> 
  sp_2062 [2/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 1; 0; 0; 0; 1; 1; 1; 0; 0; 0; 1; 0

(9-3) Checking counterexample ... DONE!

(9-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 1

Program with abstraction types (CEGAR-cycle 10)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int ->
                 bool ->
                 bool -> int -> bool -> (bool -> unit -> X) -> x_12:bool -> x_13:int[(not x_12); x_13 > 0 || x_2] -> X)
  f_1010 : (x_2:bool ->
            x_3:bool -> x_4:int -> x_5:int[(not x_2); x_3; 1 <= x_4 - x_5; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int ->
              bool ->
              bool -> x_5:int -> bool -> (bool -> unit -> X) -> x_11:bool -> x_12:int[(not x_11); x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int -> bool -> bool -> x_5:int -> x_6:bool[x_6] -> (x_8:bool -> x_9:int[(not x_8); x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> x_3:bool -> bool -> x_5:int[(not x_3); 1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int ->
            x_3:bool -> x_4:bool -> x_5:int[(not x_3); x_4; 1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(10-1) Abstracting ... DONE!

(10-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [1/2] ... --> 
  f_u_6251 [1/2] ... --> 
  f_x_6252 ... --> 
  f_x_6253 ... --> 
  f_f_6254 ... --> 
  sp_2062 [2/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0; 0; 0; 1; 0

(10-3) Checking counterexample ... DONE!

(10-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1

Program with abstraction types (CEGAR-cycle 11)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int ->
                 bool ->
                 bool ->
                 int -> bool -> (bool -> unit -> X) -> x_12:bool -> x_13:int[x_2; (not x_12); x_13 > 0 || x_2] -> X)
  f_1010 : (x_2:bool ->
            x_3:bool ->
            x_4:int -> x_5:int[x_5 <= 0; (not x_2); x_3; 1 <= x_4 - x_5; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int ->
              bool ->
              bool ->
              x_5:int -> bool -> (bool -> unit -> X) -> x_11:bool -> x_12:int[x_5 <= 0; (not x_11); x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int ->
             bool ->
             bool ->
             x_5:int -> x_6:bool[x_5 <= 0; x_6] -> (x_8:bool -> x_9:int[x_5 <= 0; (not x_8); x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> x_3:bool -> bool -> x_5:int[(not x_3); 1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int ->
            x_3:bool -> x_4:bool -> x_5:int[(not x_3); x_4; 1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(11-1) Abstracting ... DONE!

(11-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [1/2] ... --> 
  f_u_6251 [1/2] ... --> 
  f_x_6252 ... --> 
  f_x_6253 ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [1/2] ... --> 
  f_f_6256 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(11-3) Checking counterexample ... DONE!

(11-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 12)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int ->
                 bool ->
                 bool ->
                 int -> bool -> (bool -> unit -> X) -> x_12:bool -> x_13:int[x_2; (not x_12); x_13 > 0 || x_2] -> X)
  f_1010 : (x_2:bool ->
            x_3:bool ->
            x_4:int ->
            x_5:int[x_5 >= 0; x_5 <= 0; (not x_2); x_3; 1 <= x_4 - x_5; (not x_3)] -> (bool -> unit -> X) -> X)
  f_f_6255 : (int ->
              bool ->
              bool ->
              x_5:int ->
              bool -> (bool -> unit -> X) -> x_11:bool -> x_12:int[x_5 >= 0; x_5 <= 0; (not x_11); x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int ->
             bool ->
             bool ->
             x_5:int ->
             x_6:bool[x_5 >= 0; x_5 <= 0; x_6] ->
             (x_8:bool -> x_9:int[x_5 >= 0; x_5 <= 0; (not x_8); x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> x_3:bool -> bool -> x_5:int[(not x_3); 1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int ->
            x_3:bool -> x_4:bool -> x_5:int[(not x_3); x_4; 1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(12-1) Abstracting ... DONE!

(12-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [1/2] ... --> 
  f_u_6251 [1/2] ... --> 
  f_x_6252 ... --> 
  f_x_6253 ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [1/2] ... --> 
  f_f_6256 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0

(12-3) Checking counterexample ... DONE!

(12-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 13)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int ->
                 bool ->
                 bool ->
                 int ->
                 bool -> (x_9:bool -> unit[x_9] -> X) -> x_12:bool -> x_13:int[x_2; (not x_12); x_13 > 0 || x_2] -> X)
  f_1010 : (x_2:bool ->
            x_3:bool ->
            x_4:int ->
            x_5:int[x_2; x_5 >= 0; x_5 <= 0; (not x_2); x_3; 1 <= x_4 - x_5; (not x_3)] ->
            (x_7:bool -> unit[x_7] -> X) -> X)
  f_f_6255 : (int ->
              bool ->
              bool ->
              x_5:int ->
              bool ->
              (x_8:bool -> unit[x_8] -> X) -> x_11:bool -> x_12:int[x_5 >= 0; x_5 <= 0; (not x_11); x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int ->
             bool ->
             bool ->
             x_5:int ->
             x_6:bool[x_5 >= 0; x_5 <= 0; x_6] ->
             (x_8:bool -> x_9:int[x_5 >= 0; x_5 <= 0; (not x_8); x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> x_3:bool -> bool -> x_5:int[x_3; (not x_3); 1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int ->
            x_3:bool ->
            x_4:bool -> x_5:int[x_3; (not x_3); x_4; 1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(13-1) Abstracting ... DONE!

(13-2) Checking HORS ... DONE!

Error trace::
  main_6250 ... --> 
  s__r_f_2076 ... --> 
  f_s__r_f_6257 ... --> 
  f_1010 ... --> 
  x_2049 [2/2] ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [1/2] ... --> 
  f_u_6251 [1/2] ... --> 
  f_x_6252 ... --> 
  f_x_6253 ... --> 
  f_f_6254 ... --> 
  sp_2062 [1/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [1/2] ... --> 
  f_f_6256 ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [2/2] ... --> 
  f_x_6252 ... --> 
  f_x_6253 ... --> 
  f_f_6254 ... --> 
  sp_2062 [2/2] ... --> 
  f_f_6255 [2/2] ... --> 
  br_f_f_6259 [2/2] ... --> 
  f_1010 ... --> 
  x_2049 [1/2] ... --> 
  u_2054 [1/2] ... --> 
  u_3699 [2/2] ... --> 
  fail_6261 ... --> fail -->
  ERROR!

Spurious counterexample::
  0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 1; 1; 1; 0; 0; 0; 1; 0

(13-3) Checking counterexample ... DONE!

(13-4) Discovering predicates (infeasible case) ... 
DONE!

Prefix of spurious counterexample::
0; 0; 0; 0; 1; 0; 0; 1; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 1; 1; 1; 0; 0; 0

Program with abstraction types (CEGAR-cycle 14)::
Main: main_6250
  main_6250 -> (s__r_f_2076 f_6258).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when b_6260 ->
      (k_f_5640 true ()).
  br_f_f_6259 b_6260 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not b_6260) ->
      (f_1010 sp00_5784 true sp10_5784 0
       (f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640)).
  f_1010 s0_2046 set_flag_2047 p_x_2048 x_1011 k_f_5640 ->
      (x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640)).
  f_6258 s__r_f00_5860 s__r_f1_5860 -> end.
  f_f_6254 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_5640 x_5785 ->
      (sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785
       (f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640)).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (x_1011 < 0) -> (k_f_5640 sp00_5784 ()).
  f_f_6255 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784 when 
      (not (x_1011 < 0)) ->
      (br_f_f_6259 (x_1011 = 0) p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_5640 sp00_5784 sp10_5784).
  f_f_6256 p_x_2048 s0_2046 set_flag_2047 sp00_5784 sp10_5784 x_1011 x_5785 k_f_5640 s__r_f00_5774 s__r_f1_5774 ->
      (f_1010 s__r_f00_5774 true sp10_5784 1 k_f_5640).
  f_s__r_f_6257 k_s__r_f_5854 x_5859 -> (f_1010 false false 0 x_5859 k_s__r_f_5854).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when 
      (((1 * x_1011) + 0) >= 0) -> (k_f_x_u_5676 ()).
  f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 u_5674 when (not (((1 * x_1011) + 0) >= 0)) -> _|_.
  f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 u_5693 ->
      (rand_int (f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695)).
  f_x_6253 p_x_2048 s0_2046 set_flag_2047 u_5693 x_1011 k_f_x_5695 x_5681 -> (k_f_x_5695 (x_5681 = 0)).
  fail_6261 b k -> {fail} => (k ()).
  s__r_f_2076 k_s__r_f_5854 -> (rand_int (f_s__r_f_6257 k_s__r_f_5854)).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when x_5785 -> (k_f_sp_5725 false x_1011).
  sp_2062 p_x_2048 s0_2046 set_flag_2047 x_1011 x_5785 k_f_sp_5725 when (not x_5785) -> (k_f_sp_5725 s0_2046 p_x_2048).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not s0_2046) ->
      (u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_u_6251 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676)).
  u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_5676 when (not (not s0_2046)) -> (k_f_x_u_5676 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0)) ->
      (k_f_x_u_u_5655 ()).
  u_3699 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_u_u_5655 when (not (((1 * p_x_2048) + 0) > ((1 * x_1011) + 0))) ->
      (fail_6261 true k_f_x_u_u_5655).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when set_flag_2047 ->
      (u_2054 p_x_2048 s0_2046 set_flag_2047 x_1011 (f_x_6252 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695)).
  x_2049 p_x_2048 s0_2046 set_flag_2047 x_1011 k_f_x_5695 when (not set_flag_2047) -> (k_f_x_5695 true).
Types:
  main_6250 : X
  br_f_f_6259 : (x_2:bool ->
                 int ->
                 bool ->
                 bool ->
                 int ->
                 bool ->
                 (x_9:bool -> unit[x_9] -> X) -> x_12:bool -> x_13:int[x_12; x_2; (not x_12); x_13 > 0 || x_2] -> X)
  f_1010 : (x_2:bool ->
            x_3:bool ->
            x_4:int ->
            x_5:int[x_2; x_5 >= 0; x_5 <= 0; (not x_2); x_3; 1 <= x_4 - x_5; (not x_3)] ->
            (x_7:bool -> unit[x_7] -> X) -> X)
  f_f_6255 : (int ->
              bool ->
              bool ->
              x_5:int ->
              bool ->
              (x_8:bool -> unit[x_8] -> X) ->
              x_11:bool -> x_12:int[x_11; x_5 >= 0; x_5 <= 0; (not x_11); x_12 >= x_5] -> X)
  f_u_6251 : (int -> bool -> bool -> int -> (unit -> X) -> unit -> X)
  fail_6261 : (bool -> (unit -> X) -> X)
  sp_2062 : (int ->
             x_3:bool ->
             bool ->
             x_5:int ->
             x_6:bool[x_3; x_5 >= 0; x_5 <= 0; x_6] ->
             (x_8:bool -> x_9:int[x_8; x_5 >= 0; x_5 <= 0; (not x_8); x_9 >= x_5] -> X) -> X)
  u_2054 : (x_2:int -> x_3:bool -> bool -> x_5:int[x_3; (not x_3); 1 <= x_2 - x_5] -> (unit -> X) -> X)
  u_3699 : (x_2:int -> bool -> bool -> x_5:int[1 <= x_2 - x_5] -> (unit -> X) -> X)
  x_2049 : (x_2:int ->
            x_3:bool ->
            x_4:bool -> x_5:int[x_3; (not x_3); x_4; 1 <= x_2 - x_5; (not x_4)] -> (x_7:bool[x_7] -> X) -> X)

(14-1) Abstracting ... DONE!

(14-2) Checking HORS ... DONE!

Safe!

Fair terminating!

cycles: 3
CEGAR-cycles: 14
total: 11.200 sec
  abst: 3.264 sec
  mc: 7.152 sec
  refine: 0.488 sec

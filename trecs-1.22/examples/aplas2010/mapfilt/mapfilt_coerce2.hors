%BEGING
RSFDStart -> MapFilt 1.
MapFilt xs -> MapFilt_2 xs xs.
MapFilt_2 xs xs_2 -> br (Fst_1 M_1 F_1 xs) (br (Fst_2 M_1 M_2 F_1 F_2 xs xs) (Snd_2 M_1 M_2 P_1 P_2 3 3)).
Fst_1 pair f xs -> pair TT_1 f xs.
Fst_2 pair pair_2 f f_2 xs xs_2 -> pair_2 TT_1 TT_2 f f_2 xs xs.
F_1 x -> _case 5 x (br f_ f_) (br f_ f_) (br c d) (br f_ f_) (br f_ f_).
F_2 x x_2 -> _case 5 x (br f_ f_) (br f_ f_) (br T_c T_d) (br f_ f_) (br f_ f_).
Snd_2 pair pair_2 f f_2 xs xs_2 -> pair_2 FF_1 FF_2 f f_2 xs xs.
M_1 b f xs -> Pair_1 Map_1 Filt_1 b f xs.
M_2 b b_2 f f_2 xs xs_2 -> Pair_2 Map_1 Map_2 Filt_1 Filt_2 b b_2 f f_2 xs xs.
P_1 x -> _case 5 x (br f_ f_) (br f_ f_) (br f_ f_) (br f_ f_) (br tt ff).
P_2 x x_2 -> _case 5 x (br f_ f_) (br f_ f_) (br f_ f_) (br f_ f_) (br T_tt T_ff).
TT_1 a b f xs -> a f xs.
TT_2 a a_2 b b_2 f f_2 xs xs_2 -> a_2 f f_2 xs xs.
T_c -> success__.
T_d -> success__.
FF_1 a b f xs -> b f xs.
FF_2 a a_2 b b_2 f f_2 xs xs_2 -> b_2 f f_2 xs xs.
Pair_1 fst snd b f xs -> b fst snd f xs.
Pair_2 fst fst_2 snd snd_2 b b_2 f f_2 xs xs_2 -> b_2 fst fst_2 snd snd_2 f f_2 xs xs.
Map_1 f xs -> _case 5 xs (br f_ f_) (br nil (cons (f 2) (Map_1 f 1))) (br f_ f_) (br nil (cons (f 4) (Map_1 f 3))) (br f_ f_).
Map_2 f f_2 xs xs_2 -> _case 5 xs (br f_ f_) (br T_nil (T_cons (f 2) (f_2 2 2) (Map_1 f 1) (Map_2 f f_2 1 1))) (br f_ f_) (br T_nil (T_cons (f 4) (f_2 4 4) (Map_1 f 3) (Map_2 f f_2 3 3))) (br f_ f_).
Filt_1 p xs -> _case 5 xs (br f_ f_) (br nil (Filt2_1 0 p 2 1)) (br f_ f_) (br nil (Filt2_1 0 p 4 3)) (br f_ f_).
Filt_2 p p_2 xs xs_2 -> _case 5 xs (br f_ f_) (br T_nil (Filt2_2 0 0 p p_2 2 2 1 1)) (br f_ f_) (br T_nil (Filt2_2 0 0 p p_2 4 4 3 3)) (br f_ f_).
T_tt -> success__.
T_ff -> success__.
T_cons x1 x1_2 x2 x2_2 -> br x1_2 x2_2.
Filt2_1 b p x xs -> _case 5 b (br (cons (Copy_1 x) (Filt_1 p xs)) (Filt_1 p xs)) (br f_ f_) (br f_ f_) (br f_ f_) (br f_ f_).
T_nil -> success__.
Filt2_2 b b_2 p p_2 x x_2 xs xs_2 -> _case 5 b (br (T_cons (Copy_1 x) (Copy_2 x x) (Filt_1 p xs) (Filt_2 p p_2 xs xs)) (Filt_2 p p_2 xs xs)) (br f_ f_) (br f_ f_) (br f_ f_) (br f_ f_).
Copy_1 x -> _case 5 x (br tt ff) (br nil (cons (Copy_1 2) (Copy_1 1))) (br a b) (br nil (cons (Copy_1 4) (Copy_1 3))) (br c d).
Copy_2 x x_2 -> _case 5 x (br T_tt T_ff) (br T_nil (T_cons (Copy_1 2) (Copy_2 2 2) (Copy_1 1) (Copy_2 1 1))) (br T_a T_b) (br T_nil (T_cons (Copy_1 4) (Copy_2 4 4) (Copy_1 3) (Copy_2 3 3))) (br T_c T_d).
T_a -> success__.
T_b -> success__.
%ENDG

%BEGINA
qCD nil -> .
qCD cons -> qcd qCD.
qCD br -> qCD qCD.
qCD success__ -> .
qcd c -> .
qcd d -> .
qcd br -> qcd qcd.
qcd success__ -> .

%ENDA
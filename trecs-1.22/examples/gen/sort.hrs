
%BEGING
S -> br (SortM (1, (2, (2, (2, (1, (0, 0))))))) 
     (br (SortM (1, (0, 0))) (SortM (2, (0, 0)))).
SortM x -> Sort Copy x.
Sort k x ->
  _dcons x (Sortsub k).
Sortsub k c x ->
  _case 3 c
    /* nil */ (k (0,0))
    /* a::_ */
      (Sortsub2 k x 1)
    /* b::_ */
      (Sortsub2 k x 2).
Sortsub2 k tl hd ->
  _dcons tl (Sortsub3 k hd).
Sortsub3 k hd c x ->
  _case 3 c
    /* nil */ (k (hd, (0,0)))
    /* a::_ */
       (Div (Sort_and_merge k) (hd, (1, x)) (0,0) (0,0))
    /* b::_ */
       (Div (Sort_and_merge k) (hd, (2, x)) (0,0) (0,0)).
Sort_and_merge k x ->
  _dcons x (Sort_and_merge_sub k).
Sort_and_merge_sub k x y->
  (Sort (Sort_and_merge_sub2 k y) x).
Sort_and_merge_sub2 k y x ->
  (Sort (Merge k x) y).
Div k x y z->
  _dcons x (Divsub k y z).
Divsub k y z c x ->
  _case 3 c
    /* nil */ (k (y, z))
    /* a::_ */
      (Div k x z (1,y))
    /* b::_ */
      (Div k x z (2,y)).
Copy x -> _dcons x G.
G x y -> _case 3 x nil (a (Copy y)) (b (Copy y)).
Merge k x y ->
  _dcons x (C k y).
C k y c x ->
  _case 3 c
   /* nil */  (k y)
   /* a */
     (Merge (Cons1 k) x y)
   /* b */
     (_dcons y (C2 k x)).
Cons1 k x -> k (1, x).
C2 k x c y ->
  _case 3 c
     /* nil */ (k (2, x))
     /* a::_ */ 
       (Merge (Cons1 k) (2, x) y)
     /* b::_ */
       (Merge (Cons2 k) x y).
Cons2 k x -> k (2, (2, x)).
%ENDG

%BEGINA
q0 br -> q0 q0.
q0 a -> q0.
q0 b -> q1.
q1 b -> q1.
q0 nil -> .
q1 nil -> .
%ENDA

/** Result

G : 
  0 -> Top -> q1
  1 -> (1 * (2 * (2 * (2 * (0 * Top ))))) -> q0
  1 -> (2 * (2 * (2 * (0 * Top )))) -> q0
  2 -> (0 * Top ) -> q1
  2 -> (2 * (0 * Top )) -> q1
  2 -> (2 * (2 * (0 * Top ))) -> q0
  
Copy : 
  (0 * Top ) -> q1
  (1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0
  (1 * (2 * (2 * (2 * (0 * Top ))))) -> q0
  (2 * (0 * Top )) -> q1
  (2 * (2 * (0 * Top ))) -> q1
  (2 * (2 * (2 * (0 * Top )))) -> q0
  
Sort_and_merge_sub : 
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (2 * (0 * Top )) -> (1 * (1 * (0 * Top ))) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (2 * (2 * (0 * Top ))) -> (1 * (2 * (1 * (0 * Top )))) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> (2 * (0 * Top )) -> q0
  
C : 
  (Top -> q0) -> Top -> 0 -> Top -> q0
  (Top -> q0) -> (0 * Top ) -> 2 -> Top -> q0
  ((0 * Top ) -> q0) -> (0 * Top ) -> 0 -> Top -> q0
  ((1 * Top ) -> q0) -> (1 * (0 * Top )) -> 2 -> Top -> q0
  ((1 * (0 * Top )) -> q0) -> (1 * (0 * Top )) -> 0 -> Top -> q0
  ((1 * (1 * Top )) -> q0) -> (1 * (1 * (0 * Top ))) -> 2 -> Top -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> 1 -> (0 * Top ) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (1 * (1 * (0 * Top ))) -> 2 -> (0 * Top ) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (1 * (1 * (2 * (0 * Top )))) -> 2 -> (2 * (0 * Top )) -> q0
  ((1 * (2 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> 2 -> (0 * Top ) -> q0
  ((1 * (2 * (2 * (2 * (0 * Top ))))) -> q0) -> (1 * (2 * (0 * Top ))) -> 2 -> (2 * (0 * Top )) -> q0
  ((2 * Top ) -> q0) -> (2 * Top ) -> 2 -> (0 * Top ) -> q0
  ((2 * (0 * Top )) -> q0) -> (0 * Top ) -> 2 -> (0 * Top ) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> 2 -> (0 * Top ) -> q0
  ((2 * (2 * (2 * (0 * Top )))) -> q0) -> (2 * (0 * Top )) -> 2 -> (2 * (0 * Top )) -> q0
  
Sortsub3 : 
  (Top -> q0) -> Top -> 0 -> Top -> q0
  ((1 * (0 * Top )) -> q0) -> 1 -> 0 -> Top -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> 1 -> 1 -> (0 * Top ) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> 1 -> 2 -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> 1 -> 2 -> (2 * (2 * (1 * (0 * Top )))) -> q0
  ((2 * Top ) -> q0) -> 2 -> 0 -> Top -> q0
  ((2 * (0 * Top )) -> q0) -> 2 -> 0 -> Top -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> 2 -> 2 -> (0 * Top ) -> q0
  
Sortsub2 : 
  (Top -> q0) -> (0 * Top ) -> Top -> q0
  ((1 * (0 * Top )) -> q0) -> (0 * Top ) -> 1 -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> 1 -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (2 * (1 * (0 * Top ))) -> 1 -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> 1 -> q0
  ((2 * Top ) -> q0) -> (0 * Top ) -> 2 -> q0
  ((2 * (0 * Top )) -> q0) -> (0 * Top ) -> 2 -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> 2 -> q0
  
Merge : 
  (Top -> q0) -> (0 * Top ) -> Top -> q0
  (Top -> q0) -> (2 * Top ) -> (0 * Top ) -> q0
  ((0 * Top ) -> q0) -> (0 * Top ) -> (0 * Top ) -> q0
  ((1 * Top ) -> q0) -> (2 * Top ) -> (1 * (0 * Top )) -> q0
  ((1 * (0 * Top )) -> q0) -> (0 * Top ) -> (1 * (0 * Top )) -> q0
  ((1 * (1 * Top )) -> q0) -> (2 * Top ) -> (1 * (1 * (0 * Top ))) -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (2 * (0 * Top )) -> (1 * (1 * (0 * Top ))) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (2 * (2 * (0 * Top ))) -> (1 * (1 * (2 * (0 * Top )))) -> q0
  ((1 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> (1 * (0 * Top )) -> q0
  ((1 * (2 * (2 * (2 * (0 * Top ))))) -> q0) -> (2 * (2 * (0 * Top ))) -> (1 * (2 * (0 * Top ))) -> q0
  ((2 * Top ) -> q0) -> (2 * (0 * Top )) -> (2 * Top ) -> q0
  ((2 * (0 * Top )) -> q0) -> (2 * (0 * Top )) -> (0 * Top ) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> (2 * (0 * Top )) -> q0
  ((2 * (2 * (2 * (0 * Top )))) -> q0) -> (2 * (2 * (0 * Top ))) -> (2 * (0 * Top )) -> q0
  
Divsub : 
  (Top -> q0) -> Top -> Top -> 0 -> Top -> q0
  (Top -> q0) -> Top -> Top -> 1 -> (0 * Top ) -> q0
  (Top -> q0) -> Top -> Top -> 1 -> (1 * (0 * Top )) -> q0
  (((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0) -> (0 * Top ) -> (0 * Top ) -> 1 -> (1 * (0 * Top )) -> q0
  (((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0) -> (0 * Top ) -> (1 * (0 * Top )) -> 1 -> (0 * Top ) -> q0
  (((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> (1 * (0 * Top )) -> 0 -> Top -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (0 * Top ) -> (0 * Top ) -> 1 -> (2 * (1 * (0 * Top ))) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (0 * Top ) -> (1 * (0 * Top )) -> 2 -> (1 * (0 * Top )) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (1 * (0 * Top )) -> (2 * (0 * Top )) -> 1 -> (0 * Top ) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (2 * (0 * Top )) -> (1 * (1 * (0 * Top ))) -> 0 -> Top -> q0
  (((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0) -> (0 * Top ) -> (0 * Top ) -> 2 -> (2 * (0 * Top )) -> q0
  (((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0) -> (0 * Top ) -> (2 * (0 * Top )) -> 2 -> (0 * Top ) -> q0
  (((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> (2 * (0 * Top )) -> 0 -> Top -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> Top -> Top -> 1 -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> Top -> Top -> 2 -> (2 * (2 * (1 * (0 * Top )))) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> Top -> (2 * Top ) -> 2 -> (2 * (1 * (0 * Top ))) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> Top -> (2 * (2 * Top )) -> 1 -> (0 * Top ) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (2 * Top ) -> Top -> 2 -> (1 * (0 * Top )) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (2 * (2 * Top )) -> Top -> 0 -> Top -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> Top -> (0 * Top ) -> 1 -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> Top -> (2 * (0 * Top )) -> 2 -> (2 * (1 * (0 * Top ))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (0 * Top ) -> Top -> 2 -> (2 * (2 * (1 * (0 * Top )))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (2 * Top ) -> (2 * (2 * (0 * Top ))) -> 1 -> (0 * Top ) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (2 * (0 * Top )) -> (2 * Top ) -> 2 -> (1 * (0 * Top )) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (2 * (2 * (0 * Top ))) -> (1 * (2 * Top )) -> 0 -> Top -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (0 * Top ) -> (0 * Top ) -> 1 -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (0 * Top ) -> (1 * (0 * Top )) -> 2 -> (2 * (2 * (1 * (0 * Top )))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (1 * (0 * Top )) -> (2 * (0 * Top )) -> 2 -> (2 * (1 * (0 * Top ))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (2 * (0 * Top )) -> (2 * (1 * (0 * Top ))) -> 2 -> (1 * (0 * Top )) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (2 * (1 * (0 * Top ))) -> (2 * (2 * (0 * Top ))) -> 1 -> (0 * Top ) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (2 * (2 * (0 * Top ))) -> (1 * (2 * (1 * (0 * Top )))) -> 0 -> Top -> q0
  
C2 : 
  (Top -> q0) -> Top -> 0 -> Top -> q0
  ((1 * Top ) -> q0) -> Top -> 1 -> (0 * Top ) -> q0
  ((1 * (1 * Top )) -> q0) -> Top -> 1 -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (0 * Top ) -> 1 -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (2 * (0 * Top )) -> 1 -> (1 * (2 * (0 * Top ))) -> q0
  ((1 * (2 * (0 * Top ))) -> q0) -> (0 * Top ) -> 1 -> (0 * Top ) -> q0
  ((1 * (2 * (2 * (2 * (0 * Top ))))) -> q0) -> (2 * (0 * Top )) -> 1 -> (2 * (0 * Top )) -> q0
  ((2 * Top ) -> q0) -> (0 * Top ) -> 2 -> Top -> q0
  ((2 * (0 * Top )) -> q0) -> (0 * Top ) -> 0 -> Top -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (0 * Top ) -> 2 -> (0 * Top ) -> q0
  ((2 * (2 * (2 * (0 * Top )))) -> q0) -> (2 * (0 * Top )) -> 2 -> (0 * Top ) -> q0
  
Sortsub : 
  ((1 * (0 * Top )) -> q0) -> 1 -> (0 * Top ) -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> 1 -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> 1 -> (2 * (1 * (0 * Top ))) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> 1 -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> q0
  ((2 * Top ) -> q0) -> 2 -> (0 * Top ) -> q0
  ((2 * (0 * Top )) -> q0) -> 2 -> (0 * Top ) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> 2 -> (2 * (0 * Top )) -> q0
  
Sort_and_merge_sub2 : 
  ((1 * (1 * Top )) -> q0) -> (1 * (1 * (0 * Top ))) -> (2 * Top ) -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (1 * (1 * (0 * Top ))) -> (2 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (1 * (2 * (1 * (0 * Top )))) -> (2 * (2 * (0 * Top ))) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> (2 * (0 * Top )) -> q0
  
Div : 
  (Top -> q0) -> (0 * Top ) -> Top -> Top -> q0
  (Top -> q0) -> (1 * (0 * Top )) -> Top -> Top -> q0
  (Top -> q0) -> (1 * (1 * (0 * Top ))) -> Top -> Top -> q0
  (((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0) -> (0 * Top ) -> (1 * (0 * Top )) -> (1 * (0 * Top )) -> q0
  (((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> (0 * Top ) -> (1 * (0 * Top )) -> q0
  (((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0) -> (1 * (1 * (0 * Top ))) -> (0 * Top ) -> (0 * Top ) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (0 * Top ) -> (2 * (0 * Top )) -> (1 * (1 * (0 * Top ))) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (1 * (0 * Top )) -> (1 * (0 * Top )) -> (2 * (0 * Top )) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (1 * (2 * (1 * (0 * Top )))) -> (0 * Top ) -> (0 * Top ) -> q0
  (((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0) -> (2 * (1 * (0 * Top ))) -> (0 * Top ) -> (1 * (0 * Top )) -> q0
  (((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0) -> (0 * Top ) -> (2 * (0 * Top )) -> (2 * (0 * Top )) -> q0
  (((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> (0 * Top ) -> (2 * (0 * Top )) -> q0
  (((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0) -> (2 * (2 * (0 * Top ))) -> (0 * Top ) -> (0 * Top ) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (0 * Top ) -> (2 * (2 * Top )) -> Top -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (1 * (0 * Top )) -> Top -> (2 * (2 * Top )) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (1 * (2 * (2 * (2 * (1 * (0 * Top )))))) -> Top -> Top -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (2 * (1 * (0 * Top ))) -> (2 * Top ) -> Top -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (2 * (2 * (1 * (0 * Top )))) -> Top -> (2 * Top ) -> q0
  (((2 * (2 * Top )) * Top) -> q0) -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> Top -> Top -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (0 * Top ) -> (2 * (2 * (0 * Top ))) -> (1 * (2 * Top )) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (1 * (0 * Top )) -> (2 * Top ) -> (2 * (2 * (0 * Top ))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (1 * (2 * (2 * (2 * (1 * (0 * Top )))))) -> Top -> (0 * Top ) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (2 * (1 * (0 * Top ))) -> (2 * (0 * Top )) -> (2 * Top ) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (2 * (2 * (1 * (0 * Top )))) -> Top -> (2 * (0 * Top )) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * Top ))) -> q0) -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> (0 * Top ) -> Top -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (0 * Top ) -> (2 * (2 * (0 * Top ))) -> (1 * (2 * (1 * (0 * Top )))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (1 * (0 * Top )) -> (2 * (1 * (0 * Top ))) -> (2 * (2 * (0 * Top ))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (1 * (2 * (2 * (2 * (1 * (0 * Top )))))) -> (0 * Top ) -> (0 * Top ) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (2 * (1 * (0 * Top ))) -> (2 * (0 * Top )) -> (2 * (1 * (0 * Top ))) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (2 * (2 * (1 * (0 * Top )))) -> (1 * (0 * Top )) -> (2 * (0 * Top )) -> q0
  (((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0) -> (2 * (2 * (2 * (1 * (0 * Top ))))) -> (0 * Top ) -> (1 * (0 * Top )) -> q0
  
Cons2 : 
  ((2 * Top ) -> q0) -> Top -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (0 * Top ) -> q0
  ((2 * (2 * (2 * (0 * Top )))) -> q0) -> (2 * (0 * Top )) -> q0
  
Cons1 : 
  ((1 * Top ) -> q0) -> Top -> q0
  ((1 * (1 * Top )) -> q0) -> (1 * Top ) -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (1 * (2 * (0 * Top ))) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (1 * (2 * (2 * (2 * (0 * Top ))))) -> q0
  ((1 * (2 * (0 * Top ))) -> q0) -> (2 * (0 * Top )) -> q0
  ((1 * (2 * (2 * (2 * (0 * Top ))))) -> q0) -> (2 * (2 * (2 * (0 * Top )))) -> q0
  
S : 
  q0
  
Sort_and_merge : 
  ((1 * (1 * (0 * Top ))) -> q0) -> ((1 * (0 * Top )) * (1 * (0 * Top ))) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> ((2 * (0 * Top )) * (1 * (1 * (0 * Top )))) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> ((2 * (2 * (0 * Top ))) * (1 * (2 * (1 * (0 * Top ))))) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> ((2 * (0 * Top )) * (2 * (0 * Top ))) -> q0
  
Sort : 
  ((1 * (0 * Top )) -> q0) -> (1 * (0 * Top )) -> q0
  ((1 * (1 * (0 * Top ))) -> q0) -> (1 * (1 * (0 * Top ))) -> q0
  ((1 * (1 * (2 * (0 * Top )))) -> q0) -> (1 * (2 * (1 * (0 * Top )))) -> q0
  ((1 * (1 * (2 * (2 * (2 * (0 * Top )))))) -> q0) -> (1 * (2 * (2 * (2 * (1 * (0 * Top )))))) -> q0
  ((2 * Top ) -> q0) -> (2 * (0 * Top )) -> q0
  ((2 * (0 * Top )) -> q0) -> (2 * (0 * Top )) -> q0
  ((2 * (2 * (0 * Top ))) -> q0) -> (2 * (2 * (0 * Top ))) -> q0
  
*/

%BEGING
S -> br
     (Merge (1, (2, (2, (2, (0,0))))) (1, (1, (2, (0,0)))))
     (br (Merge (1,(0,0)) (1,(0,0))) (Merge (0,0) (2, (0,0)))). 
Merge x y -> MergeSub Copy x y.
Copy x -> _dcons x CopySub.
CopySub x y -> _case 3 x nil (a (Copy y)) (b (Copy y)).
MergeSub k x y ->
  _dcons x (C k y).
C k y c x ->
  _case 3 c
   /* nil */  (k y)
   /* a */
     (MergeSub (Cons1 k) x y)
   /* b */
     (_dcons y (C2 k x)).
Cons1 k x -> k (1, x).
C2 k x c y ->
  _case 3 c
     /* nil */ (k (2, x))
     /* a::_ */ 
       (MergeSub (Cons1 k) (2, x) y)
     /* b::_ */
       (MergeSub (Cons2 k) x y).
Cons2 k x -> k (2, (2, x)).
%ENDG

%BEGINA
q0 br -> q0 q0.
q0 a -> q0.
q0 b -> q1.
q1 b -> q1.
q0 nil -> .
q1 nil -> .
%ENDA


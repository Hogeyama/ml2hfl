1.28   types of non-recursive functions are ignored in the typ-checking phase
       (so that type checking succeeds once appropriate type candidates have
        been collected for recursive functions)
        To do: improve prunning and type expansion also by using the same idea.
1.27   distinguished between recursive and non-recursive functions,
       and changed the scheduling of reductions accordingly
1.26   expand candidates
1.24   experimental system to change the scheduling of freezed
1.11   changed the scheduling policy for expanding functions that take finite data as arguments
1.10   extension with finite data domains
1.09   delay expansion of recursion only when a function is recursively called twice
1.08   breadth-first -> depth-first search
1.07   eliminate redexes if they are already typable
